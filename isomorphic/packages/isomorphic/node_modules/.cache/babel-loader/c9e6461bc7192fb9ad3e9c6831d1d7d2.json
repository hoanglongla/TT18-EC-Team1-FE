{"ast":null,"code":"var _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\UIElements\\\\Tree\\\\BasicControlledTree.js\";\nimport React from 'react';\nimport Tree, { TreeNode } from '@iso/components/uielements/tree';\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n  const children = [];\n\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({\n      title: key,\n      key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\nexport default function () {\n  const [expandedKeys, setExpandedKeys] = React.useState(['0-0-0', '0-0-1']);\n  const [autoExpandParent, setAutoExpandParent] = React.useState(true);\n  const [checkedKeys, setCheckedKeys] = React.useState(['0-0-0']);\n  const [selectedKeys, setSelectedKeys] = React.useState([]);\n\n  const onExpand = expandedKeys => {\n    // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n    // or, you can remove all expanded children keys.\n    setExpandedKeys(expandedKeys);\n    setAutoExpandParent(false);\n  };\n\n  const onCheck = checkedKeys => {\n    setCheckedKeys(checkedKeys);\n    setSelectedKeys(['0-3', '0-4']);\n  };\n\n  const onSelect = (selectedKeys, info) => {\n    setSelectedKeys(selectedKeys);\n  };\n\n  const loop = data => data.map(item => {\n    if (item.children) {\n      return /*#__PURE__*/React.createElement(TreeNode, {\n        key: item.key,\n        title: item.key,\n        disableCheckbox: item.key === '0-0-0',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, loop(item.children));\n    }\n\n    return /*#__PURE__*/React.createElement(TreeNode, {\n      key: item.key,\n      title: item.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }\n    });\n  });\n\n  return /*#__PURE__*/React.createElement(Tree, {\n    checkable: true,\n    onExpand: onExpand,\n    expandedKeys: expandedKeys,\n    autoExpandParent: autoExpandParent,\n    onCheck: onCheck,\n    checkedKeys: checkedKeys,\n    onSelect: onSelect,\n    selectedKeys: selectedKeys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, loop(gData));\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/containers/UIElements/Tree/BasicControlledTree.js"],"names":["React","Tree","TreeNode","x","y","z","gData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","expandedKeys","setExpandedKeys","useState","autoExpandParent","setAutoExpandParent","checkedKeys","setCheckedKeys","selectedKeys","setSelectedKeys","onExpand","onCheck","onSelect","info","loop","data","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Tree, { TreeNode } from '@iso/components/uielements/tree';\r\n\r\nconst x = 3;\r\nconst y = 2;\r\nconst z = 1;\r\nconst gData = [];\r\n\r\nconst generateData = (_level, _preKey, _tns) => {\r\n  const preKey = _preKey || '0';\r\n  const tns = _tns || gData;\r\n\r\n  const children = [];\r\n  for (let i = 0; i < x; i++) {\r\n    const key = `${preKey}-${i}`;\r\n    tns.push({ title: key, key });\r\n    if (i < y) {\r\n      children.push(key);\r\n    }\r\n  }\r\n  if (_level < 0) {\r\n    return tns;\r\n  }\r\n  const level = _level - 1;\r\n  children.forEach((key, index) => {\r\n    tns[index].children = [];\r\n    return generateData(level, key, tns[index].children);\r\n  });\r\n};\r\ngenerateData(z);\r\n\r\nexport default function() {\r\n  const [expandedKeys, setExpandedKeys] = React.useState(['0-0-0', '0-0-1']);\r\n  const [autoExpandParent, setAutoExpandParent] = React.useState(true);\r\n  const [checkedKeys, setCheckedKeys] = React.useState(['0-0-0']);\r\n  const [selectedKeys, setSelectedKeys] = React.useState([]);\r\n\r\n  const onExpand = expandedKeys => {\r\n    // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n    // or, you can remove all expanded children keys.\r\n    setExpandedKeys(expandedKeys);\r\n    setAutoExpandParent(false);\r\n  };\r\n  const onCheck = checkedKeys => {\r\n    setCheckedKeys(checkedKeys);\r\n    setSelectedKeys(['0-3', '0-4']);\r\n  };\r\n  const onSelect = (selectedKeys, info) => {\r\n    setSelectedKeys(selectedKeys);\r\n  };\r\n  const loop = data =>\r\n    data.map(item => {\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode\r\n            key={item.key}\r\n            title={item.key}\r\n            disableCheckbox={item.key === '0-0-0'}\r\n          >\r\n            {loop(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      return <TreeNode key={item.key} title={item.key} />;\r\n    });\r\n  return (\r\n    <Tree\r\n      checkable\r\n      onExpand={onExpand}\r\n      expandedKeys={expandedKeys}\r\n      autoExpandParent={autoExpandParent}\r\n      onCheck={onCheck}\r\n      checkedKeys={checkedKeys}\r\n      onSelect={onSelect}\r\n      selectedKeys={selectedKeys}\r\n    >\r\n      {loop(gData)}\r\n    </Tree>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}