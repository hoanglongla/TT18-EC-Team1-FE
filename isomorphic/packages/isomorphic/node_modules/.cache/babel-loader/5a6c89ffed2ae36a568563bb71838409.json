{"ast":null,"code":"var tus = require('tus-js-client');\n\nfunction isCordova() {\n  return typeof window !== 'undefined' && (typeof window.PhoneGap !== 'undefined' || typeof window.Cordova !== 'undefined' || typeof window.cordova !== 'undefined');\n}\n\nfunction isReactNative() {\n  return typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative';\n} // We override tus fingerprint to uppy’s `file.id`, since the `file.id`\n// now also includes `relativePath` for files added from folders.\n// This means you can add 2 identical files, if one is in folder a,\n// the other in folder b — `a/file.jpg` and `b/file.jpg`, when added\n// together with a folder, will be treated as 2 separate files.\n//\n// For React Native and Cordova, we let tus-js-client’s default\n// fingerprint handling take charge.\n\n\nmodule.exports = function getFingerprint(uppyFileObj) {\n  return function (file, options) {\n    if (isCordova() || isReactNative()) {\n      return tus.defaultOptions.fingerprint(file, options);\n    }\n\n    var uppyFingerprint = ['tus', uppyFileObj.id, options.endpoint].join('-');\n    return Promise.resolve(uppyFingerprint);\n  };\n};","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/node_modules/@uppy/tus/lib/getFingerprint.js"],"names":["tus","require","isCordova","window","PhoneGap","Cordova","cordova","isReactNative","navigator","product","toLowerCase","module","exports","getFingerprint","uppyFileObj","file","options","defaultOptions","fingerprint","uppyFingerprint","id","endpoint","join","Promise","resolve"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,eAAD,CAAjB;;AAEA,SAASC,SAAT,GAAqB;AACnB,SAAO,OAAOC,MAAP,KAAkB,WAAlB,KAAkC,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAA3B,IAA0C,OAAOD,MAAM,CAACE,OAAd,KAA0B,WAApE,IAAmF,OAAOF,MAAM,CAACG,OAAd,KAA0B,WAA/I,CAAP;AACD;;AAED,SAASC,aAAT,GAAyB;AACvB,SAAO,OAAOC,SAAP,KAAqB,WAArB,IAAoC,OAAOA,SAAS,CAACC,OAAjB,KAA6B,QAAjE,IAA6ED,SAAS,CAACC,OAAV,CAAkBC,WAAlB,OAAoC,aAAxH;AACD,C,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,WAAxB,EAAqC;AACpD,SAAO,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAC9B,QAAId,SAAS,MAAMK,aAAa,EAAhC,EAAoC;AAClC,aAAOP,GAAG,CAACiB,cAAJ,CAAmBC,WAAnB,CAA+BH,IAA/B,EAAqCC,OAArC,CAAP;AACD;;AAED,QAAIG,eAAe,GAAG,CAAC,KAAD,EAAQL,WAAW,CAACM,EAApB,EAAwBJ,OAAO,CAACK,QAAhC,EAA0CC,IAA1C,CAA+C,GAA/C,CAAtB;AACA,WAAOC,OAAO,CAACC,OAAR,CAAgBL,eAAhB,CAAP;AACD,GAPD;AAQD,CATD","sourcesContent":["var tus = require('tus-js-client');\n\nfunction isCordova() {\n  return typeof window !== 'undefined' && (typeof window.PhoneGap !== 'undefined' || typeof window.Cordova !== 'undefined' || typeof window.cordova !== 'undefined');\n}\n\nfunction isReactNative() {\n  return typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative';\n} // We override tus fingerprint to uppy’s `file.id`, since the `file.id`\n// now also includes `relativePath` for files added from folders.\n// This means you can add 2 identical files, if one is in folder a,\n// the other in folder b — `a/file.jpg` and `b/file.jpg`, when added\n// together with a folder, will be treated as 2 separate files.\n//\n// For React Native and Cordova, we let tus-js-client’s default\n// fingerprint handling take charge.\n\n\nmodule.exports = function getFingerprint(uppyFileObj) {\n  return function (file, options) {\n    if (isCordova() || isReactNative()) {\n      return tus.defaultOptions.fingerprint(file, options);\n    }\n\n    var uppyFingerprint = ['tus', uppyFileObj.id, options.endpoint].join('-');\n    return Promise.resolve(uppyFingerprint);\n  };\n};"]},"metadata":{},"sourceType":"script"}