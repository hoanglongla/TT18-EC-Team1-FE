{"ast":null,"code":"var _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\Note\\\\NoteList.js\";\nimport React from 'react';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport Button from '@iso/components/uielements/button';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport { NoteListWrapper } from './Note.styles';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\n\nfunction filterNotes(notes, search) {\n  search = search.toUpperCase();\n\n  if (search) {\n    return notes.filter(note => note.note.toUpperCase().includes(search));\n  }\n\n  return notes;\n}\n\nexport default function (props) {\n  const [search, setSearch] = React.useState('');\n\n  function singleNote(note) {\n    const {\n      selectedId,\n      deleteNote,\n      changeNote,\n      colors\n    } = props;\n    const activeClass = selectedId === note.id ? 'active' : '';\n\n    const onChange = () => changeNote(note.id);\n\n    const onDelete = () => deleteNote(note.id);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `isoList ${activeClass}`,\n      key: note.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"isoNoteBGColor\",\n      style: {\n        width: '5px',\n        background: colors[note.color]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"isoNoteText\",\n      onClick: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, note.note), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"isoNoteCreatedDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, timeDifference(note.createTime))), /*#__PURE__*/React.createElement(Button, {\n      className: \"isoDeleteBtn\",\n      icon: \"close\",\n      type: \"default\",\n      onClick: onDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function onChange(event) {\n    setSearch(event.target.value);\n  }\n\n  const notes = filterNotes(props.notes, search);\n  return /*#__PURE__*/React.createElement(NoteListWrapper, {\n    className: \"isoNoteListWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputSearch, {\n    placeholder: \"Search Notes\",\n    className: \"isoSearchNotes\",\n    value: search,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoNoteList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, notes && notes.length > 0 ? /*#__PURE__*/React.createElement(Scrollbars, {\n    style: {\n      height: 'calc(100vh - 70px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, notes.map(note => singleNote(note))) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"isoNoResultMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"No note found\")));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/Note/NoteList.js"],"names":["React","timeDifference","Button","InputSearch","NoteListWrapper","Scrollbars","filterNotes","notes","search","toUpperCase","filter","note","includes","props","setSearch","useState","singleNote","selectedId","deleteNote","changeNote","colors","activeClass","id","onChange","onDelete","width","background","color","createTime","event","target","value","length","height","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { timeDifference } from '@iso/lib/helpers/utility';\r\nimport Button from '@iso/components/uielements/button';\r\nimport { InputSearch } from '@iso/components/uielements/input';\r\nimport { NoteListWrapper } from './Note.styles';\r\nimport Scrollbars from '@iso/components/utility/customScrollBar';\r\n\r\nfunction filterNotes(notes, search) {\r\n  search = search.toUpperCase();\r\n  if (search) {\r\n    return notes.filter(note => note.note.toUpperCase().includes(search));\r\n  }\r\n  return notes;\r\n}\r\nexport default function(props) {\r\n  const [search, setSearch] = React.useState('');\r\n\r\n  function singleNote(note) {\r\n    const { selectedId, deleteNote, changeNote, colors } = props;\r\n\r\n    const activeClass = selectedId === note.id ? 'active' : '';\r\n    const onChange = () => changeNote(note.id);\r\n    const onDelete = () => deleteNote(note.id);\r\n    return (\r\n      <div className={`isoList ${activeClass}`} key={note.id}>\r\n        <div\r\n          className=\"isoNoteBGColor\"\r\n          style={{ width: '5px', background: colors[note.color] }}\r\n        />\r\n        <div className=\"isoNoteText\" onClick={onChange}>\r\n          <h3>{note.note}</h3>\r\n          <span className=\"isoNoteCreatedDate\">\r\n            {timeDifference(note.createTime)}\r\n          </span>\r\n        </div>\r\n        <Button\r\n          className=\"isoDeleteBtn\"\r\n          icon=\"close\"\r\n          type=\"default\"\r\n          onClick={onDelete}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  function onChange(event) {\r\n    setSearch(event.target.value);\r\n  }\r\n  const notes = filterNotes(props.notes, search);\r\n  return (\r\n    <NoteListWrapper className=\"isoNoteListWrapper\">\r\n      <InputSearch\r\n        placeholder=\"Search Notes\"\r\n        className=\"isoSearchNotes\"\r\n        value={search}\r\n        onChange={onChange}\r\n      />\r\n      <div className=\"isoNoteList\">\r\n        {notes && notes.length > 0 ? (\r\n          <Scrollbars style={{ height: 'calc(100vh - 70px)' }}>\r\n            {notes.map(note => singleNote(note))}\r\n          </Scrollbars>\r\n        ) : (\r\n          <span className=\"isoNoResultMsg\">No note found</span>\r\n        )}\r\n      </div>\r\n    </NoteListWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}