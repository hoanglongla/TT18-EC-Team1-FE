{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // ==ClosureCompiler==\n// @compilation_level ADVANCED_OPTIMIZATIONS\n// @externs_url http://closure-compiler.googlecode.com/svn/trunk/contrib/externs/maps/google_maps_api_v3.js\n// @output_wrapper (function() {%output%})();\n// ==/ClosureCompiler==\n\n/**\n * @license\n * Copyright 2013 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A RichMarker that allows any HTML/DOM to be added to a map and be draggable.\n *\n * @param {Object.<string, *>=} opt_options Optional properties to set.\n * @extends {google.maps.OverlayView}\n * @constructor\n */\n\n\nvar RichMarker = exports.RichMarker = function (_google$maps$OverlayV) {\n  _inherits(RichMarker, _google$maps$OverlayV);\n\n  function RichMarker(opt_options) {\n    _classCallCheck(this, RichMarker);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(RichMarker).call(this));\n\n    var options = opt_options || {};\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    _this.ready_ = false;\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    _this.dragging_ = false;\n\n    if (opt_options['visible'] == undefined) {\n      opt_options['visible'] = true;\n    }\n\n    if (opt_options['shadow'] == undefined) {\n      opt_options['shadow'] = '7px -3px 5px rgba(88,88,88,0.7)';\n    }\n\n    if (opt_options['anchor'] == undefined) {\n      opt_options['anchor'] = RichMarkerPosition['BOTTOM'];\n    }\n\n    _this.setValues(options);\n\n    return _this;\n  }\n  /**\n   * Returns the current visibility state of the marker.\n   *\n   * @return {boolean} The visiblity of the marker.\n   */\n\n\n  _createClass(RichMarker, [{\n    key: 'getVisible',\n    value: function getVisible() {\n      return (\n        /** @type {boolean} */\n        this.get('visible')\n      );\n    }\n  }, {\n    key: 'setVisible',\n\n    /**\n     * Sets the visiblility state of the marker.\n     *\n     * @param {boolean} visible The visiblilty of the marker.\n     */\n    value: function setVisible(visible) {\n      this.set('visible', visible);\n    }\n  }, {\n    key: 'visible_changed',\n\n    /**\n     *  The visible changed event.\n     */\n    value: function visible_changed() {\n      if (this.ready_) {\n        this.markerWrapper_.style['display'] = this.getVisible() ? '' : 'none';\n        this.draw();\n      }\n    }\n  }, {\n    key: 'setFlat',\n\n    /**\n     * Sets the marker to be flat.\n     *\n     * @param {boolean} flat If the marker is to be flat or not.\n     */\n    value: function setFlat(flat) {\n      this.set('flat', !!flat);\n    }\n  }, {\n    key: 'getFlat',\n\n    /**\n     * If the makrer is flat or not.\n     *\n     * @return {boolean} True the marker is flat.\n     */\n    value: function getFlat() {\n      return (\n        /** @type {boolean} */\n        this.get('flat')\n      );\n    }\n  }, {\n    key: 'getWidth',\n\n    /**\n     * Get the width of the marker.\n     *\n     * @return {Number} The width of the marker.\n     */\n    value: function getWidth() {\n      return (\n        /** @type {Number} */\n        this.get('width')\n      );\n    }\n  }, {\n    key: 'getHeight',\n\n    /**\n     * Get the height of the marker.\n     *\n     * @return {Number} The height of the marker.\n     */\n    value: function getHeight() {\n      return (\n        /** @type {Number} */\n        this.get('height')\n      );\n    }\n  }, {\n    key: 'setShadow',\n\n    /**\n     * Sets the marker's box shadow.\n     *\n     * @param {string} shadow The box shadow to set.\n     */\n    value: function setShadow(shadow) {\n      this.set('shadow', shadow);\n      this.flat_changed();\n    }\n  }, {\n    key: 'getShadow',\n\n    /**\n     * Gets the marker's box shadow.\n     *\n     * @return {string} The box shadow.\n     */\n    value: function getShadow() {\n      return (\n        /** @type {string} */\n        this.get('shadow')\n      );\n    }\n  }, {\n    key: 'flat_changed',\n\n    /**\n     * Flat changed event.\n     */\n    value: function flat_changed() {\n      if (!this.ready_) {\n        return;\n      }\n\n      this.markerWrapper_.style['boxShadow'] = this.markerWrapper_.style['webkitBoxShadow'] = this.markerWrapper_.style['MozBoxShadow'] = this.getFlat() ? '' : this.getShadow();\n    }\n  }, {\n    key: 'setZIndex',\n\n    /**\n     * Sets the zIndex of the marker.\n     *\n     * @param {Number} index The index to set.\n     */\n    value: function setZIndex(index) {\n      this.set('zIndex', index);\n    }\n  }, {\n    key: 'getZIndex',\n\n    /**\n     * Gets the zIndex of the marker.\n     *\n     * @return {Number} The zIndex of the marker.\n     */\n    value: function getZIndex() {\n      return (\n        /** @type {Number} */\n        this.get('zIndex')\n      );\n    }\n  }, {\n    key: 'zIndex_changed',\n\n    /**\n     * zIndex changed event.\n     */\n    value: function zIndex_changed() {\n      if (this.getZIndex() && this.ready_) {\n        this.markerWrapper_.style.zIndex = this.getZIndex();\n      }\n    }\n  }, {\n    key: 'getDraggable',\n\n    /**\n     * Whether the marker is draggable or not.\n     *\n     * @return {boolean} True if the marker is draggable.\n     */\n    value: function getDraggable() {\n      return (\n        /** @type {boolean} */\n        this.get('draggable')\n      );\n    }\n  }, {\n    key: 'setDraggable',\n\n    /**\n     * Sets the marker to be draggable or not.\n     *\n     * @param {boolean} draggable If the marker is draggable or not.\n     */\n    value: function setDraggable(draggable) {\n      this.set('draggable', !!draggable);\n    }\n  }, {\n    key: 'draggable_changed',\n\n    /**\n     * Draggable property changed callback.\n     */\n    value: function draggable_changed() {\n      if (this.ready_) {\n        if (this.getDraggable()) {\n          this.addDragging_(this.markerWrapper_);\n        } else {\n          this.removeDragListeners_();\n        }\n      }\n    }\n  }, {\n    key: 'getPosition',\n\n    /**\n     * Gets the postiton of the marker.\n     *\n     * @return {google.maps.LatLng} The position of the marker.\n     */\n    value: function getPosition() {\n      return (\n        /** @type {google.maps.LatLng} */\n        this.get('position')\n      );\n    }\n  }, {\n    key: 'setPosition',\n\n    /**\n     * Sets the position of the marker.\n     *\n     * @param {google.maps.LatLng} position The position to set.\n     */\n    value: function setPosition(position) {\n      this.set('position', position);\n    }\n  }, {\n    key: 'position_changed',\n\n    /**\n     * Position changed event.\n     */\n    value: function position_changed() {\n      this.draw();\n    }\n  }, {\n    key: 'getAnchor',\n\n    /**\n     * Gets the anchor.\n     *\n     * @return {google.maps.Size} The position of the anchor.\n     */\n    value: function getAnchor() {\n      return (\n        /** @type {google.maps.Size} */\n        this.get('anchor')\n      );\n    }\n  }, {\n    key: 'setAnchor',\n\n    /**\n     * Sets the anchor.\n     *\n     * @param {RichMarkerPosition|google.maps.Size} anchor The anchor to set.\n     */\n    value: function setAnchor(anchor) {\n      this.set('anchor', anchor);\n    }\n  }, {\n    key: 'anchor_changed',\n\n    /**\n     * Anchor changed event.\n     */\n    value: function anchor_changed() {\n      this.draw();\n    }\n  }, {\n    key: 'htmlToDocumentFragment_',\n\n    /**\n     * Converts a HTML string to a document fragment.\n     *\n     * @param {string} htmlString The HTML string to convert.\n     * @return {Node} A HTML document fragment.\n     * @private\n     */\n    value: function htmlToDocumentFragment_(htmlString) {\n      var tempDiv = document.createElement('DIV');\n      tempDiv.innerHTML = htmlString;\n\n      if (tempDiv.childNodes.length == 1) {\n        return (\n          /** @type {!Node} */\n          tempDiv.removeChild(tempDiv.firstChild)\n        );\n      } else {\n        var fragment = document.createDocumentFragment();\n\n        while (tempDiv.firstChild) {\n          fragment.appendChild(tempDiv.firstChild);\n        }\n\n        return fragment;\n      }\n    }\n  }, {\n    key: 'removeChildren_',\n\n    /**\n     * Removes all children from the node.\n     *\n     * @param {Node} node The node to remove all children from.\n     * @private\n     */\n    value: function removeChildren_(node) {\n      if (!node) {\n        return;\n      }\n\n      var child;\n\n      while (child = node.firstChild) {\n        node.removeChild(child);\n      }\n    }\n  }, {\n    key: 'setContent',\n\n    /**\n     * Sets the content of the marker.\n     *\n     * @param {string|Node} content The content to set.\n     */\n    value: function setContent(content) {\n      this.set('content', content);\n    }\n  }, {\n    key: 'getContent',\n\n    /**\n     * Get the content of the marker.\n     *\n     * @return {string|Node} The marker content.\n     */\n    value: function getContent() {\n      return (\n        /** @type {Node|string} */\n        this.get('content')\n      );\n    }\n  }, {\n    key: 'content_changed',\n\n    /**\n     * Sets the marker content and adds loading events to images\n     */\n    value: function content_changed() {\n      if (!this.markerContent_) {\n        // Marker content area doesnt exist.\n        return;\n      }\n\n      this.removeChildren_(this.markerContent_);\n      var content = this.getContent();\n\n      if (content) {\n        if (typeof content == 'string') {\n          content = content.replace(/^\\s*([\\S\\s]*)\\b\\s*$/, '$1');\n          content = this.htmlToDocumentFragment_(content);\n        }\n\n        this.markerContent_.appendChild(content);\n        var that = this;\n        var images = this.markerContent_.getElementsByTagName('IMG');\n\n        for (var i = 0, image; image = images[i]; i++) {\n          // By default, a browser lets a image be dragged outside of the browser,\n          // so by calling preventDefault we stop this behaviour and allow the image\n          // to be dragged around the map and now out of the browser and onto the\n          // desktop.\n          google.maps.event.addDomListener(image, 'mousedown', function (e) {\n            if (that.getDraggable()) {\n              if (e.preventDefault) {\n                e.preventDefault();\n              }\n\n              e.returnValue = false;\n            }\n          }); // Because we don't know the size of an image till it loads, add a\n          // listener to the image load so the marker can resize and reposition\n          // itself to be the correct height.\n\n          google.maps.event.addDomListener(image, 'load', function () {\n            that.draw();\n          });\n        }\n\n        google.maps.event.trigger(this, 'domready');\n      }\n\n      if (this.ready_) {\n        this.draw();\n      }\n    }\n  }, {\n    key: 'setCursor_',\n\n    /**\n     * Sets the cursor.\n     *\n     * @param {string} whichCursor What cursor to show.\n     * @private\n     */\n    value: function setCursor_(whichCursor) {\n      if (!this.ready_) {\n        return;\n      }\n\n      var cursor = '';\n\n      if (navigator.userAgent.indexOf('Gecko/') !== -1) {\n        // Moz has some nice cursors :)\n        if (whichCursor == 'dragging') {\n          cursor = '-moz-grabbing';\n        }\n\n        if (whichCursor == 'dragready') {\n          cursor = '-moz-grab';\n        }\n\n        if (whichCursor == 'draggable') {\n          cursor = 'pointer';\n        }\n      } else {\n        if (whichCursor == 'dragging' || whichCursor == 'dragready') {\n          cursor = 'move';\n        }\n\n        if (whichCursor == 'draggable') {\n          cursor = 'pointer';\n        }\n      }\n\n      if (this.markerWrapper_.style.cursor != cursor) {\n        this.markerWrapper_.style.cursor = cursor;\n      }\n    }\n  }, {\n    key: 'startDrag',\n\n    /**\n     * Start dragging.\n     *\n     * @param {Event} e The event.\n     */\n    value: function startDrag(e) {\n      if (!this.getDraggable()) {\n        return;\n      }\n\n      if (!this.dragging_) {\n        this.dragging_ = true;\n        var map = this.getMap();\n        this.mapDraggable_ = map.get('draggable');\n        map.set('draggable', false); // Store the current mouse position\n\n        this.mouseX_ = e.clientX;\n        this.mouseY_ = e.clientY;\n        this.setCursor_('dragready'); // Stop the text from being selectable while being dragged\n\n        this.markerWrapper_.style['MozUserSelect'] = 'none';\n        this.markerWrapper_.style['KhtmlUserSelect'] = 'none';\n        this.markerWrapper_.style['WebkitUserSelect'] = 'none';\n        this.markerWrapper_['unselectable'] = 'on';\n\n        this.markerWrapper_['onselectstart'] = function () {\n          return false;\n        };\n\n        this.addDraggingListeners_();\n        google.maps.event.trigger(this, 'dragstart');\n      }\n    }\n  }, {\n    key: 'stopDrag',\n\n    /**\n     * Stop dragging.\n     */\n    value: function stopDrag() {\n      if (!this.getDraggable()) {\n        return;\n      }\n\n      if (this.dragging_) {\n        this.dragging_ = false;\n        this.getMap().set('draggable', this.mapDraggable_);\n        this.mouseX_ = this.mouseY_ = this.mapDraggable_ = null; // Allow the text to be selectable again\n\n        this.markerWrapper_.style['MozUserSelect'] = '';\n        this.markerWrapper_.style['KhtmlUserSelect'] = '';\n        this.markerWrapper_.style['WebkitUserSelect'] = '';\n        this.markerWrapper_['unselectable'] = 'off';\n\n        this.markerWrapper_['onselectstart'] = function () {};\n\n        this.removeDraggingListeners_();\n        this.setCursor_('draggable');\n        google.maps.event.trigger(this, 'dragend');\n        this.draw();\n      }\n    }\n  }, {\n    key: 'drag',\n\n    /**\n     * Handles the drag event.\n     *\n     * @param {Event} e The event.\n     */\n    value: function drag(e) {\n      if (!this.getDraggable() || !this.dragging_) {\n        // This object isn't draggable or we have stopped dragging\n        this.stopDrag();\n        return;\n      }\n\n      var dx = this.mouseX_ - e.clientX;\n      var dy = this.mouseY_ - e.clientY;\n      this.mouseX_ = e.clientX;\n      this.mouseY_ = e.clientY;\n      var left = parseInt(this.markerWrapper_.style['left'], 10) - dx;\n      var top = parseInt(this.markerWrapper_.style['top'], 10) - dy;\n      this.markerWrapper_.style['left'] = left + 'px';\n      this.markerWrapper_.style['top'] = top + 'px';\n      var offset = this.getOffset_(); // Set the position property and adjust for the anchor offset\n\n      var point = new google.maps.Point(left - offset.width, top - offset.height);\n      var projection = this.getProjection();\n      this.setPosition(projection.fromDivPixelToLatLng(point));\n      this.setCursor_('dragging');\n      google.maps.event.trigger(this, 'drag');\n    }\n  }, {\n    key: 'removeDragListeners_',\n\n    /**\n     * Removes the drag listeners associated with the marker.\n     *\n     * @private\n     */\n    value: function removeDragListeners_() {\n      if (this.draggableListener_) {\n        google.maps.event.removeListener(this.draggableListener_);\n        delete this.draggableListener_;\n      }\n\n      this.setCursor_('');\n    }\n  }, {\n    key: 'addDragging_',\n\n    /**\n     * Add dragability events to the marker.\n     *\n     * @param {Node} node The node to apply dragging to.\n     * @private\n     */\n    value: function addDragging_(node) {\n      if (!node) {\n        return;\n      }\n\n      var that = this;\n      this.draggableListener_ = google.maps.event.addDomListener(node, 'mousedown', function (e) {\n        that.startDrag(e);\n      });\n      this.setCursor_('draggable');\n    }\n  }, {\n    key: 'addDraggingListeners_',\n\n    /**\n     * Add dragging listeners.\n     *\n     * @private\n     */\n    value: function addDraggingListeners_() {\n      var that = this;\n\n      if (this.markerWrapper_.setCapture) {\n        this.markerWrapper_.setCapture(true);\n        this.draggingListeners_ = [google.maps.event.addDomListener(this.markerWrapper_, 'mousemove', function (e) {\n          that.drag(e);\n        }, true), google.maps.event.addDomListener(this.markerWrapper_, 'mouseup', function () {\n          that.stopDrag();\n          that.markerWrapper_.releaseCapture();\n        }, true)];\n      } else {\n        this.draggingListeners_ = [google.maps.event.addDomListener(window, 'mousemove', function (e) {\n          that.drag(e);\n        }, true), google.maps.event.addDomListener(window, 'mouseup', function () {\n          that.stopDrag();\n        }, true)];\n      }\n    }\n  }, {\n    key: 'removeDraggingListeners_',\n\n    /**\n     * Remove dragging listeners.\n     *\n     * @private\n     */\n    value: function removeDraggingListeners_() {\n      if (this.draggingListeners_) {\n        for (var i = 0, listener; listener = this.draggingListeners_[i]; i++) {\n          google.maps.event.removeListener(listener);\n        }\n\n        this.draggingListeners_.length = 0;\n      }\n    }\n  }, {\n    key: 'getOffset_',\n\n    /**\n     * Get the anchor offset.\n     *\n     * @return {google.maps.Size} The size offset.\n     * @private\n     */\n    value: function getOffset_() {\n      var anchor = this.getAnchor();\n\n      if ((typeof anchor === 'undefined' ? 'undefined' : _typeof(anchor)) == 'object') {\n        return (\n          /** @type {google.maps.Size} */\n          anchor\n        );\n      }\n\n      var offset = new google.maps.Size(0, 0);\n\n      if (!this.markerContent_) {\n        return offset;\n      }\n\n      var width = this.markerContent_.offsetWidth;\n      var height = this.markerContent_.offsetHeight;\n\n      switch (anchor) {\n        case RichMarkerPosition['TOP_LEFT']:\n          break;\n\n        case RichMarkerPosition['TOP']:\n          offset.width = -width / 2;\n          break;\n\n        case RichMarkerPosition['TOP_RIGHT']:\n          offset.width = -width;\n          break;\n\n        case RichMarkerPosition['LEFT']:\n          offset.height = -height / 2;\n          break;\n\n        case RichMarkerPosition['MIDDLE']:\n          offset.width = -width / 2;\n          offset.height = -height / 2;\n          break;\n\n        case RichMarkerPosition['RIGHT']:\n          offset.width = -width;\n          offset.height = -height / 2;\n          break;\n\n        case RichMarkerPosition['BOTTOM_LEFT']:\n          offset.height = -height;\n          break;\n\n        case RichMarkerPosition['BOTTOM']:\n          offset.width = -width / 2;\n          offset.height = -height;\n          break;\n\n        case RichMarkerPosition['BOTTOM_RIGHT']:\n          offset.width = -width;\n          offset.height = -height;\n          break;\n      }\n\n      return offset;\n    }\n  }, {\n    key: 'onAdd',\n\n    /**\n     * Adding the marker to a map.\n     * Implementing the interface.\n     */\n    value: function onAdd() {\n      if (!this.markerWrapper_) {\n        this.markerWrapper_ = document.createElement('DIV');\n        this.markerWrapper_.style['position'] = 'absolute';\n      }\n\n      if (this.getZIndex()) {\n        this.markerWrapper_.style['zIndex'] = this.getZIndex();\n      }\n\n      this.markerWrapper_.style['display'] = this.getVisible() ? '' : 'none';\n\n      if (!this.markerContent_) {\n        this.markerContent_ = document.createElement('DIV');\n        this.markerWrapper_.appendChild(this.markerContent_);\n        var that = this;\n        google.maps.event.addDomListener(this.markerContent_, 'click', function (e) {\n          google.maps.event.trigger(that, 'click', e);\n        });\n        google.maps.event.addDomListener(this.markerContent_, 'mouseover', function (e) {\n          google.maps.event.trigger(that, 'mouseover', e);\n        });\n        google.maps.event.addDomListener(this.markerContent_, 'mouseout', function (e) {\n          google.maps.event.trigger(that, 'mouseout', e);\n        });\n      }\n\n      this.ready_ = true;\n      this.content_changed();\n      this.flat_changed();\n      this.draggable_changed();\n      var panes = this.getPanes();\n\n      if (panes) {\n        panes.overlayMouseTarget.appendChild(this.markerWrapper_);\n      }\n\n      google.maps.event.trigger(this, 'ready');\n    }\n  }, {\n    key: 'draw',\n\n    /**\n     * Impelementing the interface.\n     */\n    value: function draw() {\n      if (!this.ready_ || this.dragging_) {\n        return;\n      }\n\n      var projection = this.getProjection();\n\n      if (!projection) {\n        // The map projection is not ready yet so do nothing\n        return;\n      }\n\n      var latLng =\n      /** @type {google.maps.LatLng} */\n      this.get('position');\n      var pos = projection.fromLatLngToDivPixel(latLng);\n      var offset = this.getOffset_();\n      this.markerWrapper_.style['top'] = pos.y + offset.height + 'px';\n      this.markerWrapper_.style['left'] = pos.x + offset.width + 'px';\n      var height = this.markerContent_.offsetHeight;\n      var width = this.markerContent_.offsetWidth;\n\n      if (width != this.get('width')) {\n        this.set('width', width);\n      }\n\n      if (height != this.get('height')) {\n        this.set('height', height);\n      }\n    }\n  }, {\n    key: 'onRemove',\n\n    /**\n     * Removing a marker from the map.\n     * Implementing the interface.\n     */\n    value: function onRemove() {\n      if (this.markerWrapper_ && this.markerWrapper_.parentNode) {\n        this.markerWrapper_.parentNode.removeChild(this.markerWrapper_);\n      }\n\n      this.removeDragListeners_();\n    }\n  }]);\n\n  return RichMarker;\n}(google.maps.OverlayView);\n/**\n * RichMarker Anchor positions\n * @enum {number}\n */\n\n\nvar RichMarkerPosition = exports.RichMarkerPosition = {\n  'TOP_LEFT': 1,\n  'TOP': 2,\n  'TOP_RIGHT': 3,\n  'LEFT': 4,\n  'MIDDLE': 5,\n  'RIGHT': 6,\n  'BOTTOM_LEFT': 7,\n  'BOTTOM': 8,\n  'BOTTOM_RIGHT': 9\n};","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/node_modules/js-rich-marker/lib/richmarker.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","RichMarker","_google$maps$OverlayV","opt_options","_this","getPrototypeOf","options","ready_","dragging_","undefined","RichMarkerPosition","setValues","getVisible","get","setVisible","visible","set","visible_changed","markerWrapper_","style","draw","setFlat","flat","getFlat","getWidth","getHeight","setShadow","shadow","flat_changed","getShadow","setZIndex","index","getZIndex","zIndex_changed","zIndex","getDraggable","setDraggable","draggable","draggable_changed","addDragging_","removeDragListeners_","getPosition","setPosition","position","position_changed","getAnchor","setAnchor","anchor","anchor_changed","htmlToDocumentFragment_","htmlString","tempDiv","document","createElement","innerHTML","childNodes","removeChild","firstChild","fragment","createDocumentFragment","appendChild","removeChildren_","node","child","setContent","content","getContent","content_changed","markerContent_","replace","that","images","getElementsByTagName","image","google","maps","event","addDomListener","e","preventDefault","returnValue","trigger","setCursor_","whichCursor","cursor","navigator","userAgent","indexOf","startDrag","map","getMap","mapDraggable_","mouseX_","clientX","mouseY_","clientY","addDraggingListeners_","stopDrag","removeDraggingListeners_","drag","dx","dy","left","parseInt","top","offset","getOffset_","point","Point","width","height","projection","getProjection","fromDivPixelToLatLng","draggableListener_","removeListener","setCapture","draggingListeners_","releaseCapture","window","listener","Size","offsetWidth","offsetHeight","onAdd","panes","getPanes","overlayMouseTarget","latLng","pos","fromLatLngToDivPixel","y","x","onRemove","parentNode","OverlayView"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// ==ClosureCompiler==\n// @compilation_level ADVANCED_OPTIMIZATIONS\n// @externs_url http://closure-compiler.googlecode.com/svn/trunk/contrib/externs/maps/google_maps_api_v3.js\n// @output_wrapper (function() {%output%})();\n// ==/ClosureCompiler==\n\n/**\n * @license\n * Copyright 2013 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A RichMarker that allows any HTML/DOM to be added to a map and be draggable.\n *\n * @param {Object.<string, *>=} opt_options Optional properties to set.\n * @extends {google.maps.OverlayView}\n * @constructor\n */\n\nvar RichMarker = exports.RichMarker = function (_google$maps$OverlayV) {\n  _inherits(RichMarker, _google$maps$OverlayV);\n\n  function RichMarker(opt_options) {\n    _classCallCheck(this, RichMarker);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(RichMarker).call(this));\n\n    var options = opt_options || {};\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.ready_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.dragging_ = false;\n\n    if (opt_options['visible'] == undefined) {\n      opt_options['visible'] = true;\n    }\n\n    if (opt_options['shadow'] == undefined) {\n      opt_options['shadow'] = '7px -3px 5px rgba(88,88,88,0.7)';\n    }\n\n    if (opt_options['anchor'] == undefined) {\n      opt_options['anchor'] = RichMarkerPosition['BOTTOM'];\n    }\n\n    _this.setValues(options);\n    return _this;\n  }\n\n  /**\n   * Returns the current visibility state of the marker.\n   *\n   * @return {boolean} The visiblity of the marker.\n   */\n\n\n  _createClass(RichMarker, [{\n    key: 'getVisible',\n    value: function getVisible() {\n      return (/** @type {boolean} */this.get('visible')\n      );\n    }\n  }, {\n    key: 'setVisible',\n\n\n    /**\n     * Sets the visiblility state of the marker.\n     *\n     * @param {boolean} visible The visiblilty of the marker.\n     */\n    value: function setVisible(visible) {\n      this.set('visible', visible);\n    }\n  }, {\n    key: 'visible_changed',\n\n\n    /**\n     *  The visible changed event.\n     */\n    value: function visible_changed() {\n      if (this.ready_) {\n        this.markerWrapper_.style['display'] = this.getVisible() ? '' : 'none';\n        this.draw();\n      }\n    }\n  }, {\n    key: 'setFlat',\n\n\n    /**\n     * Sets the marker to be flat.\n     *\n     * @param {boolean} flat If the marker is to be flat or not.\n     */\n    value: function setFlat(flat) {\n      this.set('flat', !!flat);\n    }\n  }, {\n    key: 'getFlat',\n\n\n    /**\n     * If the makrer is flat or not.\n     *\n     * @return {boolean} True the marker is flat.\n     */\n    value: function getFlat() {\n      return (/** @type {boolean} */this.get('flat')\n      );\n    }\n  }, {\n    key: 'getWidth',\n\n\n    /**\n     * Get the width of the marker.\n     *\n     * @return {Number} The width of the marker.\n     */\n    value: function getWidth() {\n      return (/** @type {Number} */this.get('width')\n      );\n    }\n  }, {\n    key: 'getHeight',\n\n\n    /**\n     * Get the height of the marker.\n     *\n     * @return {Number} The height of the marker.\n     */\n    value: function getHeight() {\n      return (/** @type {Number} */this.get('height')\n      );\n    }\n  }, {\n    key: 'setShadow',\n\n\n    /**\n     * Sets the marker's box shadow.\n     *\n     * @param {string} shadow The box shadow to set.\n     */\n    value: function setShadow(shadow) {\n      this.set('shadow', shadow);\n      this.flat_changed();\n    }\n  }, {\n    key: 'getShadow',\n\n\n    /**\n     * Gets the marker's box shadow.\n     *\n     * @return {string} The box shadow.\n     */\n    value: function getShadow() {\n      return (/** @type {string} */this.get('shadow')\n      );\n    }\n  }, {\n    key: 'flat_changed',\n\n\n    /**\n     * Flat changed event.\n     */\n    value: function flat_changed() {\n      if (!this.ready_) {\n        return;\n      }\n\n      this.markerWrapper_.style['boxShadow'] = this.markerWrapper_.style['webkitBoxShadow'] = this.markerWrapper_.style['MozBoxShadow'] = this.getFlat() ? '' : this.getShadow();\n    }\n  }, {\n    key: 'setZIndex',\n\n\n    /**\n     * Sets the zIndex of the marker.\n     *\n     * @param {Number} index The index to set.\n     */\n    value: function setZIndex(index) {\n      this.set('zIndex', index);\n    }\n  }, {\n    key: 'getZIndex',\n\n\n    /**\n     * Gets the zIndex of the marker.\n     *\n     * @return {Number} The zIndex of the marker.\n     */\n    value: function getZIndex() {\n      return (/** @type {Number} */this.get('zIndex')\n      );\n    }\n  }, {\n    key: 'zIndex_changed',\n\n\n    /**\n     * zIndex changed event.\n     */\n    value: function zIndex_changed() {\n      if (this.getZIndex() && this.ready_) {\n        this.markerWrapper_.style.zIndex = this.getZIndex();\n      }\n    }\n  }, {\n    key: 'getDraggable',\n\n\n    /**\n     * Whether the marker is draggable or not.\n     *\n     * @return {boolean} True if the marker is draggable.\n     */\n    value: function getDraggable() {\n      return (/** @type {boolean} */this.get('draggable')\n      );\n    }\n  }, {\n    key: 'setDraggable',\n\n\n    /**\n     * Sets the marker to be draggable or not.\n     *\n     * @param {boolean} draggable If the marker is draggable or not.\n     */\n    value: function setDraggable(draggable) {\n      this.set('draggable', !!draggable);\n    }\n  }, {\n    key: 'draggable_changed',\n\n\n    /**\n     * Draggable property changed callback.\n     */\n    value: function draggable_changed() {\n      if (this.ready_) {\n        if (this.getDraggable()) {\n          this.addDragging_(this.markerWrapper_);\n        } else {\n          this.removeDragListeners_();\n        }\n      }\n    }\n  }, {\n    key: 'getPosition',\n\n\n    /**\n     * Gets the postiton of the marker.\n     *\n     * @return {google.maps.LatLng} The position of the marker.\n     */\n    value: function getPosition() {\n      return (/** @type {google.maps.LatLng} */this.get('position')\n      );\n    }\n  }, {\n    key: 'setPosition',\n\n\n    /**\n     * Sets the position of the marker.\n     *\n     * @param {google.maps.LatLng} position The position to set.\n     */\n    value: function setPosition(position) {\n      this.set('position', position);\n    }\n  }, {\n    key: 'position_changed',\n\n\n    /**\n     * Position changed event.\n     */\n    value: function position_changed() {\n      this.draw();\n    }\n  }, {\n    key: 'getAnchor',\n\n\n    /**\n     * Gets the anchor.\n     *\n     * @return {google.maps.Size} The position of the anchor.\n     */\n    value: function getAnchor() {\n      return (/** @type {google.maps.Size} */this.get('anchor')\n      );\n    }\n  }, {\n    key: 'setAnchor',\n\n\n    /**\n     * Sets the anchor.\n     *\n     * @param {RichMarkerPosition|google.maps.Size} anchor The anchor to set.\n     */\n    value: function setAnchor(anchor) {\n      this.set('anchor', anchor);\n    }\n  }, {\n    key: 'anchor_changed',\n\n\n    /**\n     * Anchor changed event.\n     */\n    value: function anchor_changed() {\n      this.draw();\n    }\n  }, {\n    key: 'htmlToDocumentFragment_',\n\n\n    /**\n     * Converts a HTML string to a document fragment.\n     *\n     * @param {string} htmlString The HTML string to convert.\n     * @return {Node} A HTML document fragment.\n     * @private\n     */\n    value: function htmlToDocumentFragment_(htmlString) {\n      var tempDiv = document.createElement('DIV');\n      tempDiv.innerHTML = htmlString;\n      if (tempDiv.childNodes.length == 1) {\n        return (/** @type {!Node} */tempDiv.removeChild(tempDiv.firstChild)\n        );\n      } else {\n        var fragment = document.createDocumentFragment();\n        while (tempDiv.firstChild) {\n          fragment.appendChild(tempDiv.firstChild);\n        }\n        return fragment;\n      }\n    }\n  }, {\n    key: 'removeChildren_',\n\n\n    /**\n     * Removes all children from the node.\n     *\n     * @param {Node} node The node to remove all children from.\n     * @private\n     */\n    value: function removeChildren_(node) {\n      if (!node) {\n        return;\n      }\n\n      var child;\n      while (child = node.firstChild) {\n        node.removeChild(child);\n      }\n    }\n  }, {\n    key: 'setContent',\n\n\n    /**\n     * Sets the content of the marker.\n     *\n     * @param {string|Node} content The content to set.\n     */\n    value: function setContent(content) {\n      this.set('content', content);\n    }\n  }, {\n    key: 'getContent',\n\n\n    /**\n     * Get the content of the marker.\n     *\n     * @return {string|Node} The marker content.\n     */\n    value: function getContent() {\n      return (/** @type {Node|string} */this.get('content')\n      );\n    }\n  }, {\n    key: 'content_changed',\n\n\n    /**\n     * Sets the marker content and adds loading events to images\n     */\n    value: function content_changed() {\n      if (!this.markerContent_) {\n        // Marker content area doesnt exist.\n        return;\n      }\n\n      this.removeChildren_(this.markerContent_);\n      var content = this.getContent();\n      if (content) {\n        if (typeof content == 'string') {\n          content = content.replace(/^\\s*([\\S\\s]*)\\b\\s*$/, '$1');\n          content = this.htmlToDocumentFragment_(content);\n        }\n        this.markerContent_.appendChild(content);\n\n        var that = this;\n        var images = this.markerContent_.getElementsByTagName('IMG');\n        for (var i = 0, image; image = images[i]; i++) {\n          // By default, a browser lets a image be dragged outside of the browser,\n          // so by calling preventDefault we stop this behaviour and allow the image\n          // to be dragged around the map and now out of the browser and onto the\n          // desktop.\n          google.maps.event.addDomListener(image, 'mousedown', function (e) {\n            if (that.getDraggable()) {\n              if (e.preventDefault) {\n                e.preventDefault();\n              }\n              e.returnValue = false;\n            }\n          });\n\n          // Because we don't know the size of an image till it loads, add a\n          // listener to the image load so the marker can resize and reposition\n          // itself to be the correct height.\n          google.maps.event.addDomListener(image, 'load', function () {\n            that.draw();\n          });\n        }\n\n        google.maps.event.trigger(this, 'domready');\n      }\n\n      if (this.ready_) {\n        this.draw();\n      }\n    }\n  }, {\n    key: 'setCursor_',\n\n\n    /**\n     * Sets the cursor.\n     *\n     * @param {string} whichCursor What cursor to show.\n     * @private\n     */\n    value: function setCursor_(whichCursor) {\n      if (!this.ready_) {\n        return;\n      }\n\n      var cursor = '';\n      if (navigator.userAgent.indexOf('Gecko/') !== -1) {\n        // Moz has some nice cursors :)\n        if (whichCursor == 'dragging') {\n          cursor = '-moz-grabbing';\n        }\n\n        if (whichCursor == 'dragready') {\n          cursor = '-moz-grab';\n        }\n\n        if (whichCursor == 'draggable') {\n          cursor = 'pointer';\n        }\n      } else {\n        if (whichCursor == 'dragging' || whichCursor == 'dragready') {\n          cursor = 'move';\n        }\n\n        if (whichCursor == 'draggable') {\n          cursor = 'pointer';\n        }\n      }\n\n      if (this.markerWrapper_.style.cursor != cursor) {\n        this.markerWrapper_.style.cursor = cursor;\n      }\n    }\n  }, {\n    key: 'startDrag',\n\n\n    /**\n     * Start dragging.\n     *\n     * @param {Event} e The event.\n     */\n    value: function startDrag(e) {\n      if (!this.getDraggable()) {\n        return;\n      }\n\n      if (!this.dragging_) {\n        this.dragging_ = true;\n        var map = this.getMap();\n        this.mapDraggable_ = map.get('draggable');\n        map.set('draggable', false);\n\n        // Store the current mouse position\n        this.mouseX_ = e.clientX;\n        this.mouseY_ = e.clientY;\n\n        this.setCursor_('dragready');\n\n        // Stop the text from being selectable while being dragged\n        this.markerWrapper_.style['MozUserSelect'] = 'none';\n        this.markerWrapper_.style['KhtmlUserSelect'] = 'none';\n        this.markerWrapper_.style['WebkitUserSelect'] = 'none';\n\n        this.markerWrapper_['unselectable'] = 'on';\n        this.markerWrapper_['onselectstart'] = function () {\n          return false;\n        };\n\n        this.addDraggingListeners_();\n\n        google.maps.event.trigger(this, 'dragstart');\n      }\n    }\n  }, {\n    key: 'stopDrag',\n\n\n    /**\n     * Stop dragging.\n     */\n    value: function stopDrag() {\n      if (!this.getDraggable()) {\n        return;\n      }\n\n      if (this.dragging_) {\n        this.dragging_ = false;\n        this.getMap().set('draggable', this.mapDraggable_);\n        this.mouseX_ = this.mouseY_ = this.mapDraggable_ = null;\n\n        // Allow the text to be selectable again\n        this.markerWrapper_.style['MozUserSelect'] = '';\n        this.markerWrapper_.style['KhtmlUserSelect'] = '';\n        this.markerWrapper_.style['WebkitUserSelect'] = '';\n        this.markerWrapper_['unselectable'] = 'off';\n        this.markerWrapper_['onselectstart'] = function () {};\n\n        this.removeDraggingListeners_();\n\n        this.setCursor_('draggable');\n        google.maps.event.trigger(this, 'dragend');\n\n        this.draw();\n      }\n    }\n  }, {\n    key: 'drag',\n\n\n    /**\n     * Handles the drag event.\n     *\n     * @param {Event} e The event.\n     */\n    value: function drag(e) {\n      if (!this.getDraggable() || !this.dragging_) {\n        // This object isn't draggable or we have stopped dragging\n        this.stopDrag();\n        return;\n      }\n\n      var dx = this.mouseX_ - e.clientX;\n      var dy = this.mouseY_ - e.clientY;\n\n      this.mouseX_ = e.clientX;\n      this.mouseY_ = e.clientY;\n\n      var left = parseInt(this.markerWrapper_.style['left'], 10) - dx;\n      var top = parseInt(this.markerWrapper_.style['top'], 10) - dy;\n\n      this.markerWrapper_.style['left'] = left + 'px';\n      this.markerWrapper_.style['top'] = top + 'px';\n\n      var offset = this.getOffset_();\n\n      // Set the position property and adjust for the anchor offset\n      var point = new google.maps.Point(left - offset.width, top - offset.height);\n      var projection = this.getProjection();\n      this.setPosition(projection.fromDivPixelToLatLng(point));\n\n      this.setCursor_('dragging');\n      google.maps.event.trigger(this, 'drag');\n    }\n  }, {\n    key: 'removeDragListeners_',\n\n\n    /**\n     * Removes the drag listeners associated with the marker.\n     *\n     * @private\n     */\n    value: function removeDragListeners_() {\n      if (this.draggableListener_) {\n        google.maps.event.removeListener(this.draggableListener_);\n        delete this.draggableListener_;\n      }\n      this.setCursor_('');\n    }\n  }, {\n    key: 'addDragging_',\n\n\n    /**\n     * Add dragability events to the marker.\n     *\n     * @param {Node} node The node to apply dragging to.\n     * @private\n     */\n    value: function addDragging_(node) {\n      if (!node) {\n        return;\n      }\n\n      var that = this;\n      this.draggableListener_ = google.maps.event.addDomListener(node, 'mousedown', function (e) {\n        that.startDrag(e);\n      });\n\n      this.setCursor_('draggable');\n    }\n  }, {\n    key: 'addDraggingListeners_',\n\n\n    /**\n     * Add dragging listeners.\n     *\n     * @private\n     */\n    value: function addDraggingListeners_() {\n      var that = this;\n      if (this.markerWrapper_.setCapture) {\n        this.markerWrapper_.setCapture(true);\n        this.draggingListeners_ = [google.maps.event.addDomListener(this.markerWrapper_, 'mousemove', function (e) {\n          that.drag(e);\n        }, true), google.maps.event.addDomListener(this.markerWrapper_, 'mouseup', function () {\n          that.stopDrag();\n          that.markerWrapper_.releaseCapture();\n        }, true)];\n      } else {\n        this.draggingListeners_ = [google.maps.event.addDomListener(window, 'mousemove', function (e) {\n          that.drag(e);\n        }, true), google.maps.event.addDomListener(window, 'mouseup', function () {\n          that.stopDrag();\n        }, true)];\n      }\n    }\n  }, {\n    key: 'removeDraggingListeners_',\n\n\n    /**\n     * Remove dragging listeners.\n     *\n     * @private\n     */\n    value: function removeDraggingListeners_() {\n      if (this.draggingListeners_) {\n        for (var i = 0, listener; listener = this.draggingListeners_[i]; i++) {\n          google.maps.event.removeListener(listener);\n        }\n        this.draggingListeners_.length = 0;\n      }\n    }\n  }, {\n    key: 'getOffset_',\n\n\n    /**\n     * Get the anchor offset.\n     *\n     * @return {google.maps.Size} The size offset.\n     * @private\n     */\n    value: function getOffset_() {\n      var anchor = this.getAnchor();\n      if ((typeof anchor === 'undefined' ? 'undefined' : _typeof(anchor)) == 'object') {\n        return (/** @type {google.maps.Size} */anchor\n        );\n      }\n\n      var offset = new google.maps.Size(0, 0);\n      if (!this.markerContent_) {\n        return offset;\n      }\n\n      var width = this.markerContent_.offsetWidth;\n      var height = this.markerContent_.offsetHeight;\n\n      switch (anchor) {\n        case RichMarkerPosition['TOP_LEFT']:\n          break;\n        case RichMarkerPosition['TOP']:\n          offset.width = -width / 2;\n          break;\n        case RichMarkerPosition['TOP_RIGHT']:\n          offset.width = -width;\n          break;\n        case RichMarkerPosition['LEFT']:\n          offset.height = -height / 2;\n          break;\n        case RichMarkerPosition['MIDDLE']:\n          offset.width = -width / 2;\n          offset.height = -height / 2;\n          break;\n        case RichMarkerPosition['RIGHT']:\n          offset.width = -width;\n          offset.height = -height / 2;\n          break;\n        case RichMarkerPosition['BOTTOM_LEFT']:\n          offset.height = -height;\n          break;\n        case RichMarkerPosition['BOTTOM']:\n          offset.width = -width / 2;\n          offset.height = -height;\n          break;\n        case RichMarkerPosition['BOTTOM_RIGHT']:\n          offset.width = -width;\n          offset.height = -height;\n          break;\n      }\n\n      return offset;\n    }\n  }, {\n    key: 'onAdd',\n\n\n    /**\n     * Adding the marker to a map.\n     * Implementing the interface.\n     */\n    value: function onAdd() {\n      if (!this.markerWrapper_) {\n        this.markerWrapper_ = document.createElement('DIV');\n        this.markerWrapper_.style['position'] = 'absolute';\n      }\n\n      if (this.getZIndex()) {\n        this.markerWrapper_.style['zIndex'] = this.getZIndex();\n      }\n\n      this.markerWrapper_.style['display'] = this.getVisible() ? '' : 'none';\n\n      if (!this.markerContent_) {\n        this.markerContent_ = document.createElement('DIV');\n        this.markerWrapper_.appendChild(this.markerContent_);\n\n        var that = this;\n        google.maps.event.addDomListener(this.markerContent_, 'click', function (e) {\n          google.maps.event.trigger(that, 'click', e);\n        });\n        google.maps.event.addDomListener(this.markerContent_, 'mouseover', function (e) {\n          google.maps.event.trigger(that, 'mouseover', e);\n        });\n        google.maps.event.addDomListener(this.markerContent_, 'mouseout', function (e) {\n          google.maps.event.trigger(that, 'mouseout', e);\n        });\n      }\n\n      this.ready_ = true;\n      this.content_changed();\n      this.flat_changed();\n      this.draggable_changed();\n\n      var panes = this.getPanes();\n      if (panes) {\n        panes.overlayMouseTarget.appendChild(this.markerWrapper_);\n      }\n\n      google.maps.event.trigger(this, 'ready');\n    }\n  }, {\n    key: 'draw',\n\n\n    /**\n     * Impelementing the interface.\n     */\n    value: function draw() {\n      if (!this.ready_ || this.dragging_) {\n        return;\n      }\n\n      var projection = this.getProjection();\n\n      if (!projection) {\n        // The map projection is not ready yet so do nothing\n        return;\n      }\n\n      var latLng = /** @type {google.maps.LatLng} */this.get('position');\n      var pos = projection.fromLatLngToDivPixel(latLng);\n\n      var offset = this.getOffset_();\n      this.markerWrapper_.style['top'] = pos.y + offset.height + 'px';\n      this.markerWrapper_.style['left'] = pos.x + offset.width + 'px';\n\n      var height = this.markerContent_.offsetHeight;\n      var width = this.markerContent_.offsetWidth;\n\n      if (width != this.get('width')) {\n        this.set('width', width);\n      }\n\n      if (height != this.get('height')) {\n        this.set('height', height);\n      }\n    }\n  }, {\n    key: 'onRemove',\n\n\n    /**\n     * Removing a marker from the map.\n     * Implementing the interface.\n     */\n    value: function onRemove() {\n      if (this.markerWrapper_ && this.markerWrapper_.parentNode) {\n        this.markerWrapper_.parentNode.removeChild(this.markerWrapper_);\n      }\n      this.removeDragListeners_();\n    }\n  }]);\n\n  return RichMarker;\n}(google.maps.OverlayView);\n\n/**\n * RichMarker Anchor positions\n * @enum {number}\n */\n\n\nvar RichMarkerPosition = exports.RichMarkerPosition = {\n  'TOP_LEFT': 1,\n  'TOP': 2,\n  'TOP_RIGHT': 3,\n  'LEFT': 4,\n  'MIDDLE': 5,\n  'RIGHT': 6,\n  'BOTTOM_LEFT': 7,\n  'BOTTOM': 8,\n  'BOTTOM_RIGHT': 9\n};"]},"metadata":{},"sourceType":"script"}