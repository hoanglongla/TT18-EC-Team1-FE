{"ast":null,"code":"var _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\Tables\\\\AntTables\\\\TableViews\\\\CustomizedView.js\";\nimport React from 'react';\nimport TableWrapper, { CustomizedTableWrapper } from '../AntTables.styles';\nimport Switch from '@iso/components/uielements/switch';\nimport Form from '@iso/components/uielements/form';\nconst FormItem = Form.Item;\n\nconst expandedRowRender = record => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, `${record.firstName} lives in ${record.city}`);\n\nconst title = () => 'Here is title';\n\nconst showHeader = true;\n\nconst footer = () => 'Here is footer';\n\nconst scroll = {\n  y: 240\n};\nconst toggleOptions = [{\n  defaultValue: true,\n  title: 'Bordered',\n  key: 'bordered'\n}, {\n  defaultValue: true,\n  title: 'Loading',\n  key: 'loading'\n}, {\n  defaultValue: true,\n  title: 'Pagination',\n  key: 'pagination'\n}, {\n  defaultValue: title,\n  title: 'Title',\n  key: 'title'\n}, {\n  defaultValue: showHeader,\n  title: 'Show Header',\n  key: 'showHeader'\n}, {\n  defaultValue: footer,\n  title: 'Footer',\n  key: 'footer'\n}, {\n  defaultValue: expandedRowRender,\n  title: 'Expanded Row Render',\n  key: 'expandedRowRender'\n}, {\n  defaultValue: {},\n  title: 'Checkbox',\n  key: 'rowSelection'\n}, {\n  defaultValue: scroll,\n  title: 'Scrollable',\n  key: 'scroll'\n}];\nexport default function (props) {\n  const [state, setState] = React.useState({\n    bordered: undefined,\n    loading: undefined,\n    pagination: true,\n    size: 'default',\n    expandedRowRender,\n    title,\n    showHeader,\n    footer,\n    rowSelection: {},\n    scroll: undefined\n  });\n\n  function renderSwitch(option) {\n    const checked = state[option.key] !== undefined;\n\n    const onChange = () => {\n      if (!checked) {\n        setState({\n          [option.key]: option.defaultValue\n        });\n      } else {\n        setState({\n          [option.key]: undefined\n        });\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(FormItem, {\n      label: option.title,\n      key: option.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      checked: checked,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(CustomizedTableWrapper, {\n    className: \"isoCustomizedTableWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoCustomizedTableControlBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, toggleOptions.map(option => renderSwitch(option)))), /*#__PURE__*/React.createElement(TableWrapper, Object.assign({}, state, {\n    columns: props.tableInfo.columns,\n    dataSource: props.dataList.getAll(),\n    className: \"isoCustomizedTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/Tables/AntTables/TableViews/CustomizedView.js"],"names":["React","TableWrapper","CustomizedTableWrapper","Switch","Form","FormItem","Item","expandedRowRender","record","firstName","city","title","showHeader","footer","scroll","y","toggleOptions","defaultValue","key","props","state","setState","useState","bordered","undefined","loading","pagination","size","rowSelection","renderSwitch","option","checked","onChange","map","tableInfo","columns","dataList","getAll"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TableWrapper, { CustomizedTableWrapper } from '../AntTables.styles';\r\nimport Switch from '@iso/components/uielements/switch';\r\nimport Form from '@iso/components/uielements/form';\r\nconst FormItem = Form.Item;\r\n\r\nconst expandedRowRender = record => (\r\n  <p>{`${record.firstName} lives in ${record.city}`}</p>\r\n);\r\nconst title = () => 'Here is title';\r\nconst showHeader = true;\r\nconst footer = () => 'Here is footer';\r\nconst scroll = { y: 240 };\r\n\r\nconst toggleOptions = [\r\n  {\r\n    defaultValue: true,\r\n    title: 'Bordered',\r\n    key: 'bordered',\r\n  },\r\n  {\r\n    defaultValue: true,\r\n    title: 'Loading',\r\n    key: 'loading',\r\n  },\r\n  {\r\n    defaultValue: true,\r\n    title: 'Pagination',\r\n    key: 'pagination',\r\n  },\r\n  {\r\n    defaultValue: title,\r\n    title: 'Title',\r\n    key: 'title',\r\n  },\r\n  {\r\n    defaultValue: showHeader,\r\n    title: 'Show Header',\r\n    key: 'showHeader',\r\n  },\r\n  {\r\n    defaultValue: footer,\r\n    title: 'Footer',\r\n    key: 'footer',\r\n  },\r\n  {\r\n    defaultValue: expandedRowRender,\r\n    title: 'Expanded Row Render',\r\n    key: 'expandedRowRender',\r\n  },\r\n  {\r\n    defaultValue: {},\r\n    title: 'Checkbox',\r\n    key: 'rowSelection',\r\n  },\r\n  {\r\n    defaultValue: scroll,\r\n    title: 'Scrollable',\r\n    key: 'scroll',\r\n  },\r\n];\r\nexport default function(props) {\r\n  const [state, setState] = React.useState({\r\n    bordered: undefined,\r\n    loading: undefined,\r\n    pagination: true,\r\n    size: 'default',\r\n    expandedRowRender,\r\n    title,\r\n    showHeader,\r\n    footer,\r\n    rowSelection: {},\r\n    scroll: undefined,\r\n  });\r\n\r\n  function renderSwitch(option) {\r\n    const checked = state[option.key] !== undefined;\r\n    const onChange = () => {\r\n      if (!checked) {\r\n        setState({ [option.key]: option.defaultValue });\r\n      } else {\r\n        setState({ [option.key]: undefined });\r\n      }\r\n    };\r\n    return (\r\n      <FormItem label={option.title} key={option.key}>\r\n        <Switch checked={checked} onChange={onChange} />\r\n      </FormItem>\r\n    );\r\n  }\r\n  return (\r\n    <CustomizedTableWrapper className=\"isoCustomizedTableWrapper\">\r\n      <div className=\"isoCustomizedTableControlBar\">\r\n        <Form layout=\"inline\">\r\n          {toggleOptions.map(option => renderSwitch(option))}\r\n        </Form>\r\n      </div>\r\n      <TableWrapper\r\n        {...state}\r\n        columns={props.tableInfo.columns}\r\n        dataSource={props.dataList.getAll()}\r\n        className=\"isoCustomizedTable\"\r\n      />\r\n    </CustomizedTableWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}