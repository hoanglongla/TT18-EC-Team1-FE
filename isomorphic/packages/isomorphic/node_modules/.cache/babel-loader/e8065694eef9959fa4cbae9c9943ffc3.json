{"ast":null,"code":"import \"antd/es/badge/style/css\";\nimport _Badge from \"antd/es/badge\";\nimport \"antd/es/descriptions/style/css\";\nimport _Descriptions from \"antd/es/descriptions\";\nvar _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\EmployeeSinglePage\\\\EditInvoice.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { EditTable } from '@iso/components/Invoice/InvoiceTable';\nimport OrderStatus from '@iso/components/Invoice/OrderStatus';\nimport notification from '@iso/components/Notification';\nimport Button from '@iso/components/uielements/button';\nimport Input, { Textarea } from '@iso/components/uielements/input';\nimport DatePicker from '@iso/components/uielements/datePicker';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport InvoicePageWrapper from './SingleInvoice.styles';\nimport { stringToPosetiveInt } from '@iso/lib/helpers/utility';\nimport { orderStatusOptions } from '../Invoice/config';\nimport invoiceActions from '@iso/redux/invoice/actions';\nconst {\n  updateInvoice,\n  editInvoice\n} = invoiceActions;\n\nconst updateValues = invoice => {\n  const {\n    invoiceList\n  } = invoice;\n  let subTotal = 0;\n  invoiceList.forEach((item, index) => {\n    const price = item.costs * item.qty;\n    invoice.invoiceList[index].price = price;\n    invoice.invoiceList[index].key = index + 1;\n    subTotal += price;\n  });\n  invoice.subTotal = subTotal;\n  invoice.vatPrice = Math.floor(invoice.vatRate * subTotal * 0.01);\n  invoice.totalCost = invoice.vatPrice + subTotal;\n  return invoice;\n};\n\nconst checkInvoice = invoice => {\n  const emptyKeys = ['number', 'billTo', 'billToAddress', 'billFrom', 'billFromAddress', 'currency'];\n  const emptyKeysErrors = ['Invoice Number', 'Bill To', 'Bill To Address', 'Bill From', 'Bill From Address', 'Currency'];\n\n  for (let i = 0; i < emptyKeys.length; i++) {\n    if (!invoice[emptyKeys[i]]) {\n      return `Please fill in ${emptyKeysErrors[i]}`;\n    }\n  }\n\n  for (let i = 0; i < invoice.invoiceList.length; i++) {\n    if (!invoice.invoiceList[i].itemName) {\n      return `Please fill in item name of ${i + 1} item`;\n    }\n\n    if (invoice.invoiceList[i].costs === 0) {\n      return `cost of ${i + 1} item should be positive`;\n    }\n\n    if (invoice.invoiceList[i].qty === 0) {\n      return `quantity of ${i + 1} item should be positive`;\n    }\n  }\n\n  return '';\n};\n\nexport default function (props) {\n  const dispatch = useDispatch();\n  const {\n    editableInvoice,\n    isNewInvoice,\n    redirectPath,\n    toggleView\n  } = props;\n\n  const onSave = () => {\n    const error = checkInvoice(editableInvoice);\n\n    if (error) {\n      notification('error', error);\n    } else {\n      const successMessage = isNewInvoice ? 'A new Invoice added' : 'Invoice Updated';\n      notification('success', successMessage);\n      dispatch(updateInvoice(editableInvoice));\n    }\n  };\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    const data = { ...editableInvoice,\n      [name]: value\n    };\n    dispatch(editInvoice(data));\n  }\n\n  return /*#__PURE__*/React.createElement(LayoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InvoicePageWrapper, {\n    className: \"editView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, isNewInvoice ? /*#__PURE__*/React.createElement(Link, {\n    to: redirectPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, \"Cancel\"))) : /*#__PURE__*/React.createElement(Button, {\n    onClick: () => toggleView(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: onSave,\n    className: \"saveBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"Save\"))), /*#__PURE__*/React.createElement(_Descriptions, {\n    title: \"\",\n    layout: \"vertical\",\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Descriptions.Item, {\n    label: \"T\\xEAn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Bill To\",\n    value: editableInvoice.billTo,\n    name: \"billTo\",\n    onChange: handleChange,\n    className: \"BillFormTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(_Descriptions.Item, {\n    label: \"T\\xE0i kho\\u1EA3n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Bill To\",\n    value: editableInvoice.billTo,\n    name: \"billTo\",\n    onChange: handleChange,\n    className: \"BillFormTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(_Descriptions.Item, {\n    label: \"V\\u1ECB tr\\xED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Nh\\xE2n vi\\xEAn d\\u1ECBch v\\u1EE5\"), /*#__PURE__*/React.createElement(_Descriptions.Item, {\n    label: \"Th\\u1EDDi gian l\\xE0m vi\\u1EC7c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"18:00:00 - 21:00:00\"), /*#__PURE__*/React.createElement(_Descriptions.Item, {\n    label: \"Th\\u1EDDi gian ngh\\u1EC9\",\n    span: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"19:00:00-19:15:00\"), /*#__PURE__*/React.createElement(_Descriptions.Item, {\n    label: \"T\\xECnh tr\\u1EA1ng\",\n    span: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Badge, {\n    status: \"processing\",\n    text: \"\\u0110ang l\\xE0m vi\\u1EC7c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"OrderInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"LeftSideContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"T\\xEAn nh\\xE2n vi\\xEAn\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Number\",\n    name: \"number\",\n    value: \"Quaang\",\n    onChange: handleChange,\n    className: \"LeftSideContentInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RightSideContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RightSideStatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"RightSideStatusSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  }, \"Order Status: \"), /*#__PURE__*/React.createElement(OrderStatus, {\n    value: editableInvoice.orderStatus,\n    name: \"orderStatus\",\n    onChange: handleChange,\n    orderStatusOptions: orderStatusOptions,\n    className: \"RightStatusDropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RightSideDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"Order date:\", ' ', /*#__PURE__*/React.createElement(DatePicker, {\n    allowClear: false,\n    value: moment(new Date(editableInvoice.orderDate)),\n    onChange: val => {\n      editableInvoice.orderDate = val.toDate().getTime();\n      dispatch(editInvoice(editableInvoice));\n    },\n    format: \"MMMM Do YYYY\",\n    animateYearScrolling: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BillingInformation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"LeftSideContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Bill From\",\n    value: editableInvoice.billFrom,\n    name: \"billForm\",\n    onChange: handleChange,\n    className: \"BillFormTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    placeholder: \"Bill From Address\",\n    value: editableInvoice.billFromAddress,\n    rows: 5,\n    name: \"billFromAddress\",\n    onChange: handleChange,\n    className: \"BillFormAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RightSideContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Bill To\",\n    value: editableInvoice.billTo,\n    name: \"billTo\",\n    onChange: handleChange,\n    className: \"BillFormTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    placeholder: \"Bill To Address\",\n    value: editableInvoice.billToAddress,\n    rows: 5,\n    name: \"billToAddress\",\n    onChange: handleChange,\n    className: \"BillFormAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InvoiceTable editInvoiceTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EditTable, {\n    editableInvoice: editableInvoice,\n    editInvoice: e => dispatch(editInvoice(e)),\n    updateValues: updateValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InvoiceTableBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      editableInvoice.invoiceList.push({\n        key: editableInvoice.invoiceList.length + 1,\n        itemName: '',\n        costs: 0,\n        qty: 0,\n        price: 0\n      });\n      dispatch(editInvoice(editableInvoice));\n    },\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, \"Add Item\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TotalBill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"TotalBillTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  }, \"Sub-total : \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }\n  }, `${editableInvoice.currency}${editableInvoice.subTotal}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vatRateCalc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vatRateCalcSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, \" Total Vat : \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vatRateCalcWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: editableInvoice.vatRate,\n    addonAfter: \"%\",\n    onChange: event => {\n      editableInvoice.vatRate = stringToPosetiveInt(event.target.value, editableInvoice.vatRate);\n      dispatch(editInvoice(updateValues(editableInvoice)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, `${editableInvoice.currency}${editableInvoice.vatPrice}`))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"currencySignWithTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"grandTotalSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }, \"Grand Total \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"currencySignWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: editableInvoice.currency,\n    onChange: handleChange,\n    name: \"currency\",\n    className: \"currencySign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"currencySignSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, editableInvoice.totalCost))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ButtonWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/EmployeeSinglePage/EditInvoice.js"],"names":["React","Link","useDispatch","moment","EditTable","OrderStatus","notification","Button","Input","Textarea","DatePicker","Box","LayoutWrapper","InvoicePageWrapper","stringToPosetiveInt","orderStatusOptions","invoiceActions","updateInvoice","editInvoice","updateValues","invoice","invoiceList","subTotal","forEach","item","index","price","costs","qty","key","vatPrice","Math","floor","vatRate","totalCost","checkInvoice","emptyKeys","emptyKeysErrors","i","length","itemName","props","dispatch","editableInvoice","isNewInvoice","redirectPath","toggleView","onSave","error","successMessage","handleChange","event","name","value","target","data","billTo","orderStatus","Date","orderDate","val","toDate","getTime","billFrom","billFromAddress","billToAddress","e","push","currency"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { EditTable } from '@iso/components/Invoice/InvoiceTable';\r\nimport { Descriptions,Badge } from 'antd';\r\nimport OrderStatus from '@iso/components/Invoice/OrderStatus';\r\nimport notification from '@iso/components/Notification';\r\nimport Button from '@iso/components/uielements/button';\r\nimport Input, { Textarea } from '@iso/components/uielements/input';\r\nimport DatePicker from '@iso/components/uielements/datePicker';\r\nimport Box from '@iso/components/utility/box';\r\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\r\nimport InvoicePageWrapper from './SingleInvoice.styles';\r\nimport { stringToPosetiveInt } from '@iso/lib/helpers/utility';\r\nimport { orderStatusOptions } from '../Invoice/config';\r\nimport invoiceActions from '@iso/redux/invoice/actions';\r\n\r\nconst { updateInvoice, editInvoice } = invoiceActions;\r\nconst updateValues = invoice => {\r\n  const { invoiceList } = invoice;\r\n  let subTotal = 0;\r\n  invoiceList.forEach((item, index) => {\r\n    const price = item.costs * item.qty;\r\n    invoice.invoiceList[index].price = price;\r\n    invoice.invoiceList[index].key = index + 1;\r\n    subTotal += price;\r\n  });\r\n  invoice.subTotal = subTotal;\r\n  invoice.vatPrice = Math.floor(invoice.vatRate * subTotal * 0.01);\r\n  invoice.totalCost = invoice.vatPrice + subTotal;\r\n  return invoice;\r\n};\r\nconst checkInvoice = invoice => {\r\n  const emptyKeys = [\r\n    'number',\r\n    'billTo',\r\n    'billToAddress',\r\n    'billFrom',\r\n    'billFromAddress',\r\n    'currency',\r\n  ];\r\n  const emptyKeysErrors = [\r\n    'Invoice Number',\r\n    'Bill To',\r\n    'Bill To Address',\r\n    'Bill From',\r\n    'Bill From Address',\r\n    'Currency',\r\n  ];\r\n  for (let i = 0; i < emptyKeys.length; i++) {\r\n    if (!invoice[emptyKeys[i]]) {\r\n      return `Please fill in ${emptyKeysErrors[i]}`;\r\n    }\r\n  }\r\n  for (let i = 0; i < invoice.invoiceList.length; i++) {\r\n    if (!invoice.invoiceList[i].itemName) {\r\n      return `Please fill in item name of ${i + 1} item`;\r\n    }\r\n    if (invoice.invoiceList[i].costs === 0) {\r\n      return `cost of ${i + 1} item should be positive`;\r\n    }\r\n    if (invoice.invoiceList[i].qty === 0) {\r\n      return `quantity of ${i + 1} item should be positive`;\r\n    }\r\n  }\r\n  return '';\r\n};\r\n\r\nexport default function(props) {\r\n  const dispatch = useDispatch();\r\n  const { editableInvoice, isNewInvoice, redirectPath, toggleView } = props;\r\n  const onSave = () => {\r\n    const error = checkInvoice(editableInvoice);\r\n    if (error) {\r\n      notification('error', error);\r\n    } else {\r\n      const successMessage = isNewInvoice\r\n        ? 'A new Invoice added'\r\n        : 'Invoice Updated';\r\n      notification('success', successMessage);\r\n      dispatch(updateInvoice(editableInvoice));\r\n    }\r\n  };\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    const data = {\r\n      ...editableInvoice,\r\n      [name]: value,\r\n    };\r\n    dispatch(editInvoice(data));\r\n  }\r\n  return (\r\n    <LayoutWrapper>\r\n      <Box>\r\n        <InvoicePageWrapper className=\"editView\">\r\n          <div className=\"PageHeader\">\r\n            {isNewInvoice ? (\r\n              <Link to={redirectPath}>\r\n                <Button color=\"primary\">\r\n                  <span>Cancel</span>\r\n                </Button>\r\n              </Link>\r\n            ) : (\r\n              <Button onClick={() => toggleView(false)}>\r\n                <span>Cancel</span>\r\n              </Button>\r\n            )}\r\n\r\n            <Button type=\"primary\" onClick={onSave} className=\"saveBtn\">\r\n              <span>Save</span>\r\n            </Button>\r\n          </div>\r\n          <Descriptions title=\"\" layout=\"vertical\" bordered>\r\n                <Descriptions.Item label=\"Tên\">\r\n                <Input\r\n                  placeholder=\"Bill To\"\r\n                  value={editableInvoice.billTo}\r\n                  name=\"billTo\"\r\n                  onChange={handleChange}\r\n                  className=\"BillFormTitle\"\r\n                />\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Tài khoản\">\r\n                <Input\r\n                  placeholder=\"Bill To\"\r\n                  value={editableInvoice.billTo}\r\n                  name=\"billTo\"\r\n                  onChange={handleChange}\r\n                  className=\"BillFormTitle\"\r\n                />\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Vị trí\">Nhân viên dịch vụ</Descriptions.Item>\r\n                <Descriptions.Item label=\"Thời gian làm việc\">18:00:00 - 21:00:00</Descriptions.Item>\r\n                <Descriptions.Item label=\"Thời gian nghỉ\" span={1}>\r\n                  19:00:00-19:15:00\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Tình trạng\" span={3}>\r\n                  <Badge status=\"processing\" text=\"Đang làm việc\" />\r\n                </Descriptions.Item>\r\n               \r\n              </Descriptions>\r\n          \r\n          <div className=\"PageContent\">\r\n            \r\n            <div className=\"OrderInfo\">\r\n              <div className=\"LeftSideContent\">\r\n                <h3 className=\"Title\">Tên nhân viên</h3>\r\n                <Input\r\n                  placeholder=\"Number\"\r\n                  name=\"number\"\r\n                  value=\"Quaang\"\r\n                  onChange={handleChange}\r\n                  className=\"LeftSideContentInput\"\r\n                />\r\n              </div>\r\n              <div className=\"RightSideContent\">\r\n                <div className=\"RightSideStatus\">\r\n                  <span className=\"RightSideStatusSpan\">Order Status: </span>\r\n                  <OrderStatus\r\n                    value={editableInvoice.orderStatus}\r\n                    name=\"orderStatus\"\r\n                    onChange={handleChange}\r\n                    orderStatusOptions={orderStatusOptions}\r\n                    className=\"RightStatusDropdown\"\r\n                  />\r\n                </div>\r\n                <div className=\"RightSideDate\">\r\n                  Order date:{' '}\r\n                  <DatePicker\r\n                    allowClear={false}\r\n                    value={moment(new Date(editableInvoice.orderDate))}\r\n                    onChange={val => {\r\n                      editableInvoice.orderDate = val.toDate().getTime();\r\n                      dispatch(editInvoice(editableInvoice));\r\n                    }}\r\n                    format=\"MMMM Do YYYY\"\r\n                    animateYearScrolling={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"BillingInformation\">\r\n              <div className=\"LeftSideContent\">\r\n                <Input\r\n                  placeholder=\"Bill From\"\r\n                  value={editableInvoice.billFrom}\r\n                  name=\"billForm\"\r\n                  onChange={handleChange}\r\n                  className=\"BillFormTitle\"\r\n                />\r\n                <Textarea\r\n                  placeholder=\"Bill From Address\"\r\n                  value={editableInvoice.billFromAddress}\r\n                  rows={5}\r\n                  name=\"billFromAddress\"\r\n                  onChange={handleChange}\r\n                  className=\"BillFormAddress\"\r\n                />\r\n              </div>\r\n              <div className=\"RightSideContent\">\r\n                <Input\r\n                  placeholder=\"Bill To\"\r\n                  value={editableInvoice.billTo}\r\n                  name=\"billTo\"\r\n                  onChange={handleChange}\r\n                  className=\"BillFormTitle\"\r\n                />\r\n                <Textarea\r\n                  placeholder=\"Bill To Address\"\r\n                  value={editableInvoice.billToAddress}\r\n                  rows={5}\r\n                  name=\"billToAddress\"\r\n                  onChange={handleChange}\r\n                  className=\"BillFormAddress\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"InvoiceTable editInvoiceTable\">\r\n              <EditTable\r\n                editableInvoice={editableInvoice}\r\n                editInvoice={e => dispatch(editInvoice(e))}\r\n                updateValues={updateValues}\r\n              />\r\n              <div className=\"InvoiceTableBtn\">\r\n                <Button\r\n                  onClick={() => {\r\n                    editableInvoice.invoiceList.push({\r\n                      key: editableInvoice.invoiceList.length + 1,\r\n                      itemName: '',\r\n                      costs: 0,\r\n                      qty: 0,\r\n                      price: 0,\r\n                    });\r\n                    dispatch(editInvoice(editableInvoice));\r\n                  }}\r\n                  type=\"primary\"\r\n                >\r\n                  Add Item\r\n                </Button>\r\n              </div>\r\n              <div className=\"TotalBill\">\r\n                <p>\r\n                  <span className=\"TotalBillTitle\">Sub-total : </span>\r\n                  <span>{`${editableInvoice.currency}${editableInvoice.subTotal}`}</span>\r\n                </p>\r\n                <div className=\"vatRateCalc\">\r\n                  <span className=\"vatRateCalcSpan\"> Total Vat : </span>\r\n                  <div className=\"vatRateCalcWrap\">\r\n                    <Input\r\n                      value={editableInvoice.vatRate}\r\n                      addonAfter=\"%\"\r\n                      onChange={event => {\r\n                        editableInvoice.vatRate = stringToPosetiveInt(\r\n                          event.target.value,\r\n                          editableInvoice.vatRate\r\n                        );\r\n                        dispatch(editInvoice(updateValues(editableInvoice)));\r\n                      }}\r\n                    />\r\n\r\n                    <span>\r\n                      {`${editableInvoice.currency}${editableInvoice.vatPrice}`}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"currencySignWithTotal\">\r\n                  <span className=\"grandTotalSpan\">Grand Total </span>\r\n                  <div className=\"currencySignWrap\">\r\n                    <Input\r\n                      value={editableInvoice.currency}\r\n                      onChange={handleChange}\r\n                      name=\"currency\"\r\n                      className=\"currencySign\"\r\n                    />\r\n                    <span className=\"currencySignSpan\">\r\n                      {editableInvoice.totalCost}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ButtonWrapper\" />\r\n          </div>\r\n        </InvoicePageWrapper>\r\n      </Box>\r\n    </LayoutWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}