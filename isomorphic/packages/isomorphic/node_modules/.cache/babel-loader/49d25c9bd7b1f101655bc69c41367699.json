{"ast":null,"code":"import \"antd/es/popover/style/css\";\nimport _Popover from \"antd/es/popover\";\nimport \"antd/es/popconfirm/style/css\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nvar _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\ScrumBoard\\\\Column\\\\Column.js\";\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport TaskList from '../Task/TaskList/TaskList';\nimport { IconSvg } from '@iso/components/ScrumBoard/IconSvg/IconSvg';\nimport Title from '@iso/components/ScrumBoard/Title';\nimport CreateOrUpdateColumn from './ColumnCreateOrUpdate/ColumnCreateOrUpdate';\nimport { connect } from 'react-redux';\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\nimport drawerActions from '@iso/redux/drawer/actions';\nimport MoreIcon from \"@iso/assets/images/icon/16.svg\";\nimport Plus from \"@iso/assets/images/icon/24.svg\";\nimport { Container, Header, PlusIcon, MoreActionsWrapper } from './Column.style';\n\nconst Column = ({\n  title,\n  column,\n  tasks,\n  index,\n  boardId,\n  editColumn,\n  cancelEditColumn,\n  deleteColumnWatcher,\n  openDrawer,\n  isScrollable\n}) => {\n  const MoreActions = /*#__PURE__*/React.createElement(MoreActionsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    onClick: () => editColumn(column),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Rename Column\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Popconfirm, {\n    title: \"Are you sure delete this Column?\",\n    okText: \"Yes\",\n    cancelText: \"No\",\n    onConfirm: () => deleteColumnWatcher({\n      column_id: column.id,\n      board_id: boardId\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Delete Column\")));\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: title,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, (provided, snapshot) => /*#__PURE__*/React.createElement(Container, Object.assign({\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), column.editing ? /*#__PURE__*/React.createElement(CreateOrUpdateColumn, {\n    initials: column,\n    onCancel: () => cancelEditColumn(column),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Header, {\n    isDragging: snapshot.isDragging,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, Object.assign({\n    isDragging: snapshot.isDragging\n  }, provided.dragHandleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }), title), /*#__PURE__*/React.createElement(PlusIcon, {\n    src: Plus,\n    onClick: () => openDrawer({\n      drawerType: 'CREATE_OR_EDIT_TASK',\n      drawerProps: {\n        columnId: column.id\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(_Popover, {\n    placement: \"bottom\",\n    content: MoreActions,\n    trigger: \"click\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconSvg, {\n    src: MoreIcon,\n    border: \"none\",\n    padding: \"0\",\n    mr: '0',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(TaskList, {\n    listId: column.id,\n    listType: \"QUOTE\",\n    column: column,\n    tasks: tasks,\n    internalScroll: isScrollable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default connect(null, { ...scrumBoardActions,\n  ...drawerActions\n})(Column);","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/ScrumBoard/Column/Column.js"],"names":["React","Draggable","TaskList","IconSvg","Title","CreateOrUpdateColumn","connect","scrumBoardActions","drawerActions","Container","Header","PlusIcon","MoreActionsWrapper","Column","title","column","tasks","index","boardId","editColumn","cancelEditColumn","deleteColumnWatcher","openDrawer","isScrollable","MoreActions","column_id","id","board_id","provided","snapshot","innerRef","draggableProps","dragHandleProps","editing","isDragging","Plus","drawerType","drawerProps","columnId","MoreIcon"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Popconfirm, Popover } from 'antd';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport TaskList from '../Task/TaskList/TaskList';\r\nimport { IconSvg } from '@iso/components/ScrumBoard/IconSvg/IconSvg';\r\nimport Title from '@iso/components/ScrumBoard/Title';\r\nimport CreateOrUpdateColumn from './ColumnCreateOrUpdate/ColumnCreateOrUpdate';\r\nimport { connect } from 'react-redux';\r\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\r\nimport drawerActions from '@iso/redux/drawer/actions';\r\n\r\nimport MoreIcon from '@iso/assets/images/icon/16.svg';\r\nimport Plus from '@iso/assets/images/icon/24.svg';\r\nimport {\r\n  Container,\r\n  Header,\r\n  PlusIcon,\r\n  MoreActionsWrapper,\r\n} from './Column.style';\r\n\r\nconst Column = ({\r\n  title,\r\n  column,\r\n  tasks,\r\n  index,\r\n  boardId,\r\n  editColumn,\r\n  cancelEditColumn,\r\n  deleteColumnWatcher,\r\n  openDrawer,\r\n  isScrollable,\r\n}) => {\r\n  const MoreActions = (\r\n    <MoreActionsWrapper>\r\n      <p onClick={() => editColumn(column)}>Rename Column</p>\r\n      <p>\r\n        <Popconfirm\r\n          title=\"Are you sure delete this Column?\"\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n          onConfirm={() =>\r\n            deleteColumnWatcher({ column_id: column.id, board_id: boardId })\r\n          }\r\n        >\r\n          Delete Column\r\n        </Popconfirm>\r\n      </p>\r\n    </MoreActionsWrapper>\r\n  );\r\n  return (\r\n    <Draggable draggableId={title} index={index}>\r\n      {(provided, snapshot) => (\r\n        <Container\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          {column.editing ? (\r\n            <CreateOrUpdateColumn\r\n              initials={column}\r\n              onCancel={() => cancelEditColumn(column)}\r\n            />\r\n          ) : (\r\n            <Header isDragging={snapshot.isDragging}>\r\n              <Title\r\n                isDragging={snapshot.isDragging}\r\n                {...provided.dragHandleProps}\r\n              >\r\n                {title}\r\n              </Title>\r\n              <PlusIcon\r\n                src={Plus}\r\n                onClick={() =>\r\n                  openDrawer({\r\n                    drawerType: 'CREATE_OR_EDIT_TASK',\r\n                    drawerProps: { columnId: column.id },\r\n                  })\r\n                }\r\n              />\r\n              <Popover placement=\"bottom\" content={MoreActions} trigger=\"click\">\r\n                <IconSvg src={MoreIcon} border=\"none\" padding=\"0\" mr={'0'} />\r\n              </Popover>\r\n            </Header>\r\n          )}\r\n\r\n          <TaskList\r\n            listId={column.id}\r\n            listType=\"QUOTE\"\r\n            column={column}\r\n            tasks={tasks}\r\n            internalScroll={isScrollable}\r\n          />\r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { ...scrumBoardActions, ...drawerActions }\r\n)(Column);\r\n"]},"metadata":{},"sourceType":"module"}