{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createWidgetsManager;\n\nvar _utils = require('./utils');\n\nfunction createWidgetsManager(onWidgetsUpdate) {\n  var widgets = []; // Is an update scheduled?\n\n  var scheduled = false; // The state manager's updates need to be batched since more than one\n  // component can register or unregister widgets during the same tick.\n\n  function scheduleUpdate() {\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    (0, _utils.defer)(function () {\n      scheduled = false;\n      onWidgetsUpdate();\n    });\n  }\n\n  return {\n    registerWidget: function registerWidget(widget) {\n      widgets.push(widget);\n      scheduleUpdate();\n      return function unregisterWidget() {\n        widgets.splice(widgets.indexOf(widget), 1);\n        scheduleUpdate();\n      };\n    },\n    update: scheduleUpdate,\n    getWidgets: function getWidgets() {\n      return widgets;\n    }\n  };\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/node_modules/react-instantsearch/src/core/createWidgetsManager.js"],"names":["Object","defineProperty","exports","value","default","createWidgetsManager","_utils","require","onWidgetsUpdate","widgets","scheduled","scheduleUpdate","defer","registerWidget","widget","push","unregisterWidget","splice","indexOf","update","getWidgets"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,oBAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASF,oBAAT,CAA8BG,eAA9B,EAA+C;AAC7C,MAAIC,OAAO,GAAG,EAAd,CAD6C,CAE7C;;AACA,MAAIC,SAAS,GAAG,KAAhB,CAH6C,CAK7C;AACA;;AACA,WAASC,cAAT,GAA0B;AACxB,QAAID,SAAJ,EAAe;AACb;AACD;;AACDA,IAAAA,SAAS,GAAG,IAAZ;AACA,KAAC,GAAGJ,MAAM,CAACM,KAAX,EAAkB,YAAY;AAC5BF,MAAAA,SAAS,GAAG,KAAZ;AACAF,MAAAA,eAAe;AAChB,KAHD;AAID;;AAED,SAAO;AACLK,IAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC9CL,MAAAA,OAAO,CAACM,IAAR,CAAaD,MAAb;AACAH,MAAAA,cAAc;AACd,aAAO,SAASK,gBAAT,GAA4B;AACjCP,QAAAA,OAAO,CAACQ,MAAR,CAAeR,OAAO,CAACS,OAAR,CAAgBJ,MAAhB,CAAf,EAAwC,CAAxC;AACAH,QAAAA,cAAc;AACf,OAHD;AAID,KARI;AAULQ,IAAAA,MAAM,EAAER,cAVH;AAWLS,IAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,aAAOX,OAAP;AACD;AAbI,GAAP;AAeD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createWidgetsManager;\n\nvar _utils = require('./utils');\n\nfunction createWidgetsManager(onWidgetsUpdate) {\n  var widgets = [];\n  // Is an update scheduled?\n  var scheduled = false;\n\n  // The state manager's updates need to be batched since more than one\n  // component can register or unregister widgets during the same tick.\n  function scheduleUpdate() {\n    if (scheduled) {\n      return;\n    }\n    scheduled = true;\n    (0, _utils.defer)(function () {\n      scheduled = false;\n      onWidgetsUpdate();\n    });\n  }\n\n  return {\n    registerWidget: function registerWidget(widget) {\n      widgets.push(widget);\n      scheduleUpdate();\n      return function unregisterWidget() {\n        widgets.splice(widgets.indexOf(widget), 1);\n        scheduleUpdate();\n      };\n    },\n\n    update: scheduleUpdate,\n    getWidgets: function getWidgets() {\n      return widgets;\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}