{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _indexUtils = require('../core/indexUtils');\n\nvar _createConnector = require('../core/createConnector');\n\nvar _createConnector2 = _interopRequireDefault(_createConnector);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction getId() {\n  return 'page';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var page = 1;\n  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, page, function (currentRefinement) {\n    if (typeof currentRefinement === 'string') {\n      return parseInt(currentRefinement, 10);\n    }\n\n    return currentRefinement;\n  });\n}\n\nfunction _refine(props, searchState, nextPage, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextPage);\n\n  var resetPage = false;\n  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);\n}\n/**\n * connectPagination connector provides the logic to build a widget that will\n * let the user displays hits corresponding to a certain page.\n * @name connectPagination\n * @kind connector\n * @propType {boolean} [showFirst=true] - Display the first page link.\n * @propType {boolean} [showLast=false] - Display the last page link.\n * @propType {boolean} [showPrevious=true] - Display the previous page link.\n * @propType {boolean} [showNext=true] - Display the next page link.\n * @propType {number} [pagesPadding=3] - How many page links to display around the current page.\n * @propType {number} [maxPages=Infinity] - Maximum number of pages to display.\n * @providedPropType {function} refine - a function to remove a single filter\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {number} nbPages - the total of existing pages\n * @providedPropType {number} currentRefinement - the page refinement currently applied\n */\n\n\nexports.default = (0, _createConnector2.default)({\n  displayName: 'AlgoliaPagination',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = (0, _indexUtils.getResults)(searchResults, this.context);\n\n    if (!results) {\n      return null;\n    }\n\n    var nbPages = results.nbPages;\n    return {\n      nbPages: nbPages,\n      currentRefinement: getCurrentRefinement(props, searchState, this.context),\n      canRefine: nbPages > 1\n    };\n  },\n  refine: function refine(props, searchState, nextPage) {\n    return _refine(props, searchState, nextPage, this.context);\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getId());\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setPage(getCurrentRefinement(props, searchState, this.context) - 1);\n  },\n  getMetadata: function getMetadata() {\n    return {\n      id: getId()\n    };\n  }\n});","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/react-instantsearch/src/connectors/connectPagination.js"],"names":["Object","defineProperty","exports","value","_indexUtils","require","_createConnector","_createConnector2","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","enumerable","configurable","writable","getId","getCurrentRefinement","props","searchState","context","id","page","getCurrentRefinementValue","currentRefinement","parseInt","_refine","nextPage","nextValue","resetPage","refineValue","displayName","getProvidedProps","searchResults","results","getResults","nbPages","canRefine","refine","cleanUp","cleanUpValue","getSearchParameters","searchParameters","setPage","getMetadata"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _indexUtils = require('../core/indexUtils');\n\nvar _createConnector = require('../core/createConnector');\n\nvar _createConnector2 = _interopRequireDefault(_createConnector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction getId() {\n  return 'page';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var page = 1;\n  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, page, function (currentRefinement) {\n    if (typeof currentRefinement === 'string') {\n      return parseInt(currentRefinement, 10);\n    }\n    return currentRefinement;\n  });\n}\n\nfunction _refine(props, searchState, nextPage, context) {\n  var id = getId();\n  var nextValue = _defineProperty({}, id, nextPage);\n  var resetPage = false;\n  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);\n}\n\n/**\n * connectPagination connector provides the logic to build a widget that will\n * let the user displays hits corresponding to a certain page.\n * @name connectPagination\n * @kind connector\n * @propType {boolean} [showFirst=true] - Display the first page link.\n * @propType {boolean} [showLast=false] - Display the last page link.\n * @propType {boolean} [showPrevious=true] - Display the previous page link.\n * @propType {boolean} [showNext=true] - Display the next page link.\n * @propType {number} [pagesPadding=3] - How many page links to display around the current page.\n * @propType {number} [maxPages=Infinity] - Maximum number of pages to display.\n * @providedPropType {function} refine - a function to remove a single filter\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {number} nbPages - the total of existing pages\n * @providedPropType {number} currentRefinement - the page refinement currently applied\n */\nexports.default = (0, _createConnector2.default)({\n  displayName: 'AlgoliaPagination',\n\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = (0, _indexUtils.getResults)(searchResults, this.context);\n\n    if (!results) {\n      return null;\n    }\n\n    var nbPages = results.nbPages;\n    return {\n      nbPages: nbPages,\n      currentRefinement: getCurrentRefinement(props, searchState, this.context),\n      canRefine: nbPages > 1\n    };\n  },\n  refine: function refine(props, searchState, nextPage) {\n    return _refine(props, searchState, nextPage, this.context);\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getId());\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setPage(getCurrentRefinement(props, searchState, this.context) - 1);\n  },\n  getMetadata: function getMetadata() {\n    return { id: getId() };\n  }\n});"]},"metadata":{},"sourceType":"script"}