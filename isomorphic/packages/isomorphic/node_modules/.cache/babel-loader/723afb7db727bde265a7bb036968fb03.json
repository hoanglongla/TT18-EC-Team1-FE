{"ast":null,"code":"import Fuse from 'fuse.js';\nimport cloneDeep from 'lodash/cloneDeep';\nexport const filterSearchedComponents = (tasks = {}, columns = {}, searchText = '') => {\n  if (searchText !== '') {\n    let allTaskslist = Object.values(tasks);\n    let fuse = new Fuse(allTaskslist, {\n      shouldSort: true,\n      threshold: 0.6,\n      location: 0,\n      distance: 100,\n      maxPatternLength: 32,\n      minMatchCharLength: 1,\n      keys: ['title', 'labels', 'assignee']\n    });\n    let result = fuse.search(searchText);\n    const resultTasks = result.reduce((newTasks, task) => {\n      newTasks[task.id] = task;\n      return newTasks;\n    }, {});\n    const resolvedTaskIDs = Object.keys(resultTasks);\n    const newColumns = cloneDeep(columns);\n    Object.keys(newColumns).map(column => {\n      return newColumns[column].task_orders = newColumns[column].task_orders.filter(taskid => resolvedTaskIDs.includes(taskid));\n    });\n    return newColumns;\n  }\n\n  return columns;\n};","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/common/library/helpers/searchTaskCard.js"],"names":["Fuse","cloneDeep","filterSearchedComponents","tasks","columns","searchText","allTaskslist","Object","values","fuse","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","result","search","resultTasks","reduce","newTasks","task","id","resolvedTaskIDs","newColumns","map","column","task_orders","filter","taskid","includes"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,OAAO,MAAMC,wBAAwB,GAAG,CACtCC,KAAK,GAAG,EAD8B,EAEtCC,OAAO,GAAG,EAF4B,EAGtCC,UAAU,GAAG,EAHyB,KAInC;AACH,MAAIA,UAAU,KAAK,EAAnB,EAAuB;AACrB,QAAIC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcL,KAAd,CAAnB;AACA,QAAIM,IAAI,GAAG,IAAIT,IAAJ,CAASM,YAAT,EAAuB;AAChCI,MAAAA,UAAU,EAAE,IADoB;AAEhCC,MAAAA,SAAS,EAAE,GAFqB;AAGhCC,MAAAA,QAAQ,EAAE,CAHsB;AAIhCC,MAAAA,QAAQ,EAAE,GAJsB;AAKhCC,MAAAA,gBAAgB,EAAE,EALc;AAMhCC,MAAAA,kBAAkB,EAAE,CANY;AAOhCC,MAAAA,IAAI,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB;AAP0B,KAAvB,CAAX;AASA,QAAIC,MAAM,GAAGR,IAAI,CAACS,MAAL,CAAYb,UAAZ,CAAb;AACA,UAAMc,WAAW,GAAGF,MAAM,CAACG,MAAP,CAAc,CAACC,QAAD,EAAWC,IAAX,KAAoB;AACpDD,MAAAA,QAAQ,CAACC,IAAI,CAACC,EAAN,CAAR,GAAoBD,IAApB;AACA,aAAOD,QAAP;AACD,KAHmB,EAGjB,EAHiB,CAApB;AAIA,UAAMG,eAAe,GAAGjB,MAAM,CAACS,IAAP,CAAYG,WAAZ,CAAxB;AACA,UAAMM,UAAU,GAAGxB,SAAS,CAACG,OAAD,CAA5B;AACAG,IAAAA,MAAM,CAACS,IAAP,CAAYS,UAAZ,EAAwBC,GAAxB,CAA4BC,MAAM,IAAI;AACpC,aAAQF,UAAU,CAACE,MAAD,CAAV,CAAmBC,WAAnB,GAAiCH,UAAU,CACjDE,MADiD,CAAV,CAEvCC,WAFuC,CAE3BC,MAF2B,CAEpBC,MAAM,IAAIN,eAAe,CAACO,QAAhB,CAAyBD,MAAzB,CAFU,CAAzC;AAGD,KAJD;AAMA,WAAOL,UAAP;AACD;;AAED,SAAOrB,OAAP;AACD,CAjCM","sourcesContent":["import Fuse from 'fuse.js';\r\n\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nexport const filterSearchedComponents = (\r\n  tasks = {},\r\n  columns = {},\r\n  searchText = ''\r\n) => {\r\n  if (searchText !== '') {\r\n    let allTaskslist = Object.values(tasks);\r\n    let fuse = new Fuse(allTaskslist, {\r\n      shouldSort: true,\r\n      threshold: 0.6,\r\n      location: 0,\r\n      distance: 100,\r\n      maxPatternLength: 32,\r\n      minMatchCharLength: 1,\r\n      keys: ['title', 'labels', 'assignee'],\r\n    });\r\n    let result = fuse.search(searchText);\r\n    const resultTasks = result.reduce((newTasks, task) => {\r\n      newTasks[task.id] = task;\r\n      return newTasks;\r\n    }, {});\r\n    const resolvedTaskIDs = Object.keys(resultTasks);\r\n    const newColumns = cloneDeep(columns);\r\n    Object.keys(newColumns).map(column => {\r\n      return (newColumns[column].task_orders = newColumns[\r\n        column\r\n      ].task_orders.filter(taskid => resolvedTaskIDs.includes(taskid)));\r\n    });\r\n\r\n    return newColumns;\r\n  }\r\n\r\n  return columns;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}