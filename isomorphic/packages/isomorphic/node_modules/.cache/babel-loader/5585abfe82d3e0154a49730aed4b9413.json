{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createConnector = require('../core/createConnector');\n\nvar _createConnector2 = _interopRequireDefault(_createConnector);\n\nvar _indexUtils = require('../core/indexUtils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar getId = function getId() {\n  return 'query';\n};\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, '', function (currentRefinement) {\n    if (currentRefinement) {\n      return currentRefinement;\n    }\n\n    return '';\n  });\n}\n\nfunction getHits(searchResults) {\n  if (searchResults.results) {\n    if (searchResults.results.hits && Array.isArray(searchResults.results.hits)) {\n      return searchResults.results.hits;\n    } else {\n      return Object.keys(searchResults.results).reduce(function (hits, index) {\n        return [].concat(_toConsumableArray(hits), [{\n          index: index,\n          hits: searchResults.results[index].hits\n        }]);\n      }, []);\n    }\n  } else {\n    return [];\n  }\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextRefinement);\n\n  var resetPage = true;\n  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return (0, _indexUtils.cleanUpValue)(searchState, context, getId());\n}\n/**\n * connectAutoComplete connector provides the logic to create connected\n * components that will render the results retrieved from\n * Algolia.\n *\n * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage\n * prop to a [Configure](guide/Search_parameters.html) widget.\n * @name connectAutoComplete\n * @kind connector\n * @providedPropType {array.<object>} hits - the records that matched the search state.\n * @providedPropType {function} refine - a function to change the query.\n * @providedPropType {string} currentRefinement - the query to search for.\n */\n\n\nexports.default = (0, _createConnector2.default)({\n  displayName: 'AlgoliaAutoComplete',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      hits: getHits(searchResults),\n      currentRefinement: getCurrentRefinement(props, searchState, this.context)\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, this.context);\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, this.context);\n  },\n\n  /* connectAutoComplete needs to be considered as a widget to trigger a search if no others widgets are used.\n   * To be considered as a widget you need either getSearchParameters, getMetadata or getTransitionState\n   * See createConnector.js\n    * */\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQuery(getCurrentRefinement(props, searchState, this.context));\n  }\n});","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/react-instantsearch/src/connectors/connectAutoComplete.js"],"names":["Object","defineProperty","exports","value","_createConnector","require","_createConnector2","_interopRequireDefault","_indexUtils","obj","__esModule","default","_defineProperty","key","enumerable","configurable","writable","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","getId","getCurrentRefinement","props","searchState","context","id","getCurrentRefinementValue","currentRefinement","getHits","searchResults","results","hits","keys","reduce","index","concat","_refine","nextRefinement","nextValue","resetPage","refineValue","_cleanUp","cleanUpValue","displayName","getProvidedProps","refine","cleanUp","getSearchParameters","searchParameters","setQuery"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createConnector = require('../core/createConnector');\n\nvar _createConnector2 = _interopRequireDefault(_createConnector);\n\nvar _indexUtils = require('../core/indexUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar getId = function getId() {\n  return 'query';\n};\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, '', function (currentRefinement) {\n    if (currentRefinement) {\n      return currentRefinement;\n    }\n    return '';\n  });\n}\n\nfunction getHits(searchResults) {\n  if (searchResults.results) {\n    if (searchResults.results.hits && Array.isArray(searchResults.results.hits)) {\n      return searchResults.results.hits;\n    } else {\n      return Object.keys(searchResults.results).reduce(function (hits, index) {\n        return [].concat(_toConsumableArray(hits), [{\n          index: index,\n          hits: searchResults.results[index].hits\n        }]);\n      }, []);\n    }\n  } else {\n    return [];\n  }\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId();\n  var nextValue = _defineProperty({}, id, nextRefinement);\n  var resetPage = true;\n  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return (0, _indexUtils.cleanUpValue)(searchState, context, getId());\n}\n\n/**\n * connectAutoComplete connector provides the logic to create connected\n * components that will render the results retrieved from\n * Algolia.\n *\n * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage\n * prop to a [Configure](guide/Search_parameters.html) widget.\n * @name connectAutoComplete\n * @kind connector\n * @providedPropType {array.<object>} hits - the records that matched the search state.\n * @providedPropType {function} refine - a function to change the query.\n * @providedPropType {string} currentRefinement - the query to search for.\n */\nexports.default = (0, _createConnector2.default)({\n  displayName: 'AlgoliaAutoComplete',\n\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      hits: getHits(searchResults),\n      currentRefinement: getCurrentRefinement(props, searchState, this.context)\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, this.context);\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, this.context);\n  },\n\n\n  /* connectAutoComplete needs to be considered as a widget to trigger a search if no others widgets are used.\n   * To be considered as a widget you need either getSearchParameters, getMetadata or getTransitionState\n   * See createConnector.js\n    * */\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQuery(getCurrentRefinement(props, searchState, this.context));\n  }\n});"]},"metadata":{},"sourceType":"script"}