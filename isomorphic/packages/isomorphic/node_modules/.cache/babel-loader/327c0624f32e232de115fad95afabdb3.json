{"ast":null,"code":"import _isEqual from 'lodash/isEqual';\nimport _has from 'lodash/has';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { shallowEqual, getDisplayName, removeEmptyKey } from './utils';\n/**\n * @typedef {object} ConnectorDescription\n * @property {string} displayName - the displayName used by the wrapper\n * @property {function} refine - a function to filter the local state\n * @property {function} getSearchParameters - function transforming the local state to a SearchParameters\n * @property {function} getMetadata - metadata of the widget\n * @property {function} transitionState - hook after the state has changed\n * @property {function} getProvidedProps - transform the state into props passed to the wrapped component.\n * Receives (props, widgetStates, searchState, metadata) and returns the local state.\n * @property {function} getId - Receives props and return the id that will be used to identify the widget\n * @property {function} cleanUp - hook when the widget will unmount. Receives (props, searchState) and return a cleaned state.\n * @property {object} propTypes - PropTypes forwarded to the wrapped component.\n * @property {object} defaultProps - default values for the props\n */\n\n/**\n * Connectors are the HOC used to transform React components\n * into InstantSearch widgets.\n * In order to simplify the construction of such connectors\n * `createConnector` takes a description and transform it into\n * a connector.\n * @param {ConnectorDescription} connectorDesc the description of the connector\n * @return {Connector} a function that wraps a component into\n * an instantsearch connected one.\n */\n\nexport default function createConnector(connectorDesc) {\n  if (!connectorDesc.displayName) {\n    throw new Error('`createConnector` requires you to provide a `displayName` property.');\n  }\n\n  var hasRefine = _has(connectorDesc, 'refine');\n\n  var hasSearchForFacetValues = _has(connectorDesc, 'searchForFacetValues');\n\n  var hasSearchParameters = _has(connectorDesc, 'getSearchParameters');\n\n  var hasMetadata = _has(connectorDesc, 'getMetadata');\n\n  var hasTransitionState = _has(connectorDesc, 'transitionState');\n\n  var hasCleanUp = _has(connectorDesc, 'cleanUp');\n\n  var isWidget = hasSearchParameters || hasMetadata || hasTransitionState;\n  return function (Composed) {\n    var _class, _temp, _initialiseProps;\n\n    return _temp = _class = function (_Component) {\n      _inherits(Connector, _Component);\n\n      function Connector(props, context) {\n        _classCallCheck(this, Connector);\n\n        var _this = _possibleConstructorReturn(this, (Connector.__proto__ || Object.getPrototypeOf(Connector)).call(this, props, context));\n\n        _initialiseProps.call(_this);\n\n        var _context$ais = context.ais,\n            store = _context$ais.store,\n            widgetsManager = _context$ais.widgetsManager;\n        var canRender = false;\n        _this.state = {\n          props: _this.getProvidedProps(_extends({}, props, {\n            canRender: canRender\n          })),\n          canRender: canRender // use to know if a component is rendered (browser), or not (server).\n\n        };\n        _this.unsubscribe = store.subscribe(function () {\n          if (_this.state.canRender) {\n            _this.setState({\n              props: _this.getProvidedProps(_extends({}, _this.props, {\n                canRender: _this.state.canRender\n              }))\n            });\n          }\n        });\n\n        if (isWidget) {\n          _this.unregisterWidget = widgetsManager.registerWidget(_this);\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          var onlyGetProvidedPropsUsage = !Object.keys(connectorDesc).find(function (key) {\n            return ['getMetadata', 'getSearchParameters', 'refine', 'cleanUp'].indexOf(key) > -1;\n          });\n\n          if (onlyGetProvidedPropsUsage && connectorDesc.displayName.substr(0, 7) !== 'Algolia') {\n            // eslint-disable-next-line no-console\n            console.warn('react-instantsearch: it seems that you are using the `createConnector` api ' + 'only to access the `searchState` and the `searchResults` through `getProvidedProps`.' + 'We are now provided a dedicated API' + ' the `connectStateResults` connector that you should use instead. The `createConnector` API will be ' + 'soon deprecated and will break in future next major versions.' + '\\n\\n' + 'See more at https://community.algolia.com/react-instantsearch/connectors/connectStateResults.html' + '\\n' + 'and https://community.algolia.com/react-instantsearch/guide/Conditional_display.html');\n          }\n        }\n\n        return _this;\n      }\n\n      _createClass(Connector, [{\n        key: 'getMetadata',\n        value: function getMetadata(nextWidgetsState) {\n          if (hasMetadata) {\n            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);\n          }\n\n          return {};\n        }\n      }, {\n        key: 'getSearchParameters',\n        value: function getSearchParameters(searchParameters) {\n          if (hasSearchParameters) {\n            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.context.ais.store.getState().widgets);\n          }\n\n          return null;\n        }\n      }, {\n        key: 'transitionState',\n        value: function transitionState(prevWidgetsState, nextWidgetsState) {\n          if (hasTransitionState) {\n            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);\n          }\n\n          return nextWidgetsState;\n        }\n      }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n          this.setState({\n            canRender: true\n          });\n        }\n      }, {\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n          if (connectorDesc.getSearchParameters) {\n            this.context.ais.onSearchParameters(connectorDesc.getSearchParameters, this.context, this.props);\n          }\n        }\n      }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n          if (!_isEqual(this.props, nextProps)) {\n            this.setState({\n              props: this.getProvidedProps(nextProps)\n            });\n\n            if (isWidget) {\n              // Since props might have changed, we need to re-run getSearchParameters\n              // and getMetadata with the new props.\n              this.context.ais.widgetsManager.update();\n\n              if (connectorDesc.transitionState) {\n                this.context.ais.onSearchStateChange(connectorDesc.transitionState.call(this, nextProps, this.context.ais.store.getState().widgets, this.context.ais.store.getState().widgets));\n              }\n            }\n          }\n        }\n      }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n          this.unsubscribe();\n\n          if (isWidget) {\n            this.unregisterWidget(); // will schedule an update\n\n            if (hasCleanUp) {\n              var newState = connectorDesc.cleanUp.call(this, this.props, this.context.ais.store.getState().widgets);\n              this.context.ais.store.setState(_extends({}, this.context.ais.store.getState(), {\n                widgets: newState\n              }));\n              this.context.ais.onSearchStateChange(removeEmptyKey(newState));\n            }\n          }\n        }\n      }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          var propsEqual = shallowEqual(this.props, nextProps);\n\n          if (this.state.props === null || nextState.props === null) {\n            if (this.state.props === nextState.props) {\n              return !propsEqual;\n            }\n\n            return true;\n          }\n\n          return !propsEqual || !shallowEqual(this.state.props, nextState.props);\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          var _this2 = this;\n\n          if (this.state.props === null) {\n            return null;\n          }\n\n          var refineProps = hasRefine ? {\n            refine: this.refine,\n            createURL: this.createURL\n          } : {};\n          var searchForFacetValuesProps = hasSearchForFacetValues ? {\n            searchForItems: this.searchForFacetValues,\n            searchForFacetValues: function searchForFacetValues() {\n              if (process.env.NODE_ENV === 'development') {\n                // eslint-disable-next-line no-console\n                console.warn('react-instantsearch: `searchForFacetValues` has been renamed to' + '`searchForItems`, this will break in the next major version.');\n              }\n\n              _this2.searchForFacetValues.apply(_this2, arguments);\n            }\n          } : {};\n          return React.createElement(Composed, _extends({}, this.props, this.state.props, refineProps, searchForFacetValuesProps));\n        }\n      }]);\n\n      return Connector;\n    }(Component), _class.displayName = connectorDesc.displayName + '(' + getDisplayName(Composed) + ')', _class.defaultClassNames = Composed.defaultClassNames, _class.propTypes = connectorDesc.propTypes, _class.defaultProps = connectorDesc.defaultProps, _class.contextTypes = {\n      // @TODO: more precise state manager propType\n      ais: PropTypes.object.isRequired,\n      multiIndexContext: PropTypes.object\n    }, _initialiseProps = function _initialiseProps() {\n      var _this3 = this;\n\n      this.getProvidedProps = function (props) {\n        var store = _this3.context.ais.store;\n\n        var _store$getState = store.getState(),\n            results = _store$getState.results,\n            searching = _store$getState.searching,\n            error = _store$getState.error,\n            widgets = _store$getState.widgets,\n            metadata = _store$getState.metadata,\n            resultsFacetValues = _store$getState.resultsFacetValues,\n            searchingForFacetValues = _store$getState.searchingForFacetValues,\n            isSearchStalled = _store$getState.isSearchStalled;\n\n        var searchResults = {\n          results: results,\n          searching: searching,\n          error: error,\n          searchingForFacetValues: searchingForFacetValues,\n          isSearchStalled: isSearchStalled\n        };\n        return connectorDesc.getProvidedProps.call(_this3, props, widgets, searchResults, metadata, resultsFacetValues);\n      };\n\n      this.refine = function () {\n        var _connectorDesc$refine;\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this3.context.ais.onInternalStateUpdate((_connectorDesc$refine = connectorDesc.refine).call.apply(_connectorDesc$refine, [_this3, _this3.props, _this3.context.ais.store.getState().widgets].concat(args)));\n      };\n\n      this.searchForFacetValues = function () {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        _this3.context.ais.onSearchForFacetValues(connectorDesc.searchForFacetValues.apply(connectorDesc, [_this3.props, _this3.context.ais.store.getState().widgets].concat(args)));\n      };\n\n      this.createURL = function () {\n        var _connectorDesc$refine2;\n\n        for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        return _this3.context.ais.createHrefForState((_connectorDesc$refine2 = connectorDesc.refine).call.apply(_connectorDesc$refine2, [_this3, _this3.props, _this3.context.ais.store.getState().widgets].concat(args)));\n      };\n\n      this.cleanUp = function () {\n        var _connectorDesc$cleanU;\n\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return (_connectorDesc$cleanU = connectorDesc.cleanUp).call.apply(_connectorDesc$cleanU, [_this3].concat(args));\n      };\n    }, _temp;\n  };\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/node_modules/react-instantsearch/es/src/core/createConnector.js"],"names":["_isEqual","_has","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","PropTypes","React","Component","shallowEqual","getDisplayName","removeEmptyKey","createConnector","connectorDesc","displayName","Error","hasRefine","hasSearchForFacetValues","hasSearchParameters","hasMetadata","hasTransitionState","hasCleanUp","isWidget","Composed","_class","_temp","_initialiseProps","_Component","Connector","context","_this","getPrototypeOf","_context$ais","ais","store","widgetsManager","canRender","state","getProvidedProps","unsubscribe","subscribe","setState","unregisterWidget","registerWidget","process","env","NODE_ENV","onlyGetProvidedPropsUsage","keys","find","indexOf","substr","console","warn","getMetadata","nextWidgetsState","getSearchParameters","searchParameters","getState","widgets","transitionState","prevWidgetsState","componentDidMount","componentWillMount","onSearchParameters","componentWillReceiveProps","nextProps","update","onSearchStateChange","componentWillUnmount","newState","cleanUp","shouldComponentUpdate","nextState","propsEqual","render","_this2","refineProps","refine","createURL","searchForFacetValuesProps","searchForItems","searchForFacetValues","apply","createElement","defaultClassNames","propTypes","defaultProps","contextTypes","object","isRequired","multiIndexContext","_this3","_store$getState","results","searching","error","metadata","resultsFacetValues","searchingForFacetValues","isSearchStalled","searchResults","_connectorDesc$refine","_len","args","Array","_key","onInternalStateUpdate","concat","_len2","_key2","onSearchForFacetValues","_connectorDesc$refine2","_len3","_key3","createHrefForState","_connectorDesc$cleanU","_len4","_key4"],"mappings":"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","sourcesContent":["import _isEqual from 'lodash/isEqual';\nimport _has from 'lodash/has';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport { shallowEqual, getDisplayName, removeEmptyKey } from './utils';\n\n/**\n * @typedef {object} ConnectorDescription\n * @property {string} displayName - the displayName used by the wrapper\n * @property {function} refine - a function to filter the local state\n * @property {function} getSearchParameters - function transforming the local state to a SearchParameters\n * @property {function} getMetadata - metadata of the widget\n * @property {function} transitionState - hook after the state has changed\n * @property {function} getProvidedProps - transform the state into props passed to the wrapped component.\n * Receives (props, widgetStates, searchState, metadata) and returns the local state.\n * @property {function} getId - Receives props and return the id that will be used to identify the widget\n * @property {function} cleanUp - hook when the widget will unmount. Receives (props, searchState) and return a cleaned state.\n * @property {object} propTypes - PropTypes forwarded to the wrapped component.\n * @property {object} defaultProps - default values for the props\n */\n\n/**\n * Connectors are the HOC used to transform React components\n * into InstantSearch widgets.\n * In order to simplify the construction of such connectors\n * `createConnector` takes a description and transform it into\n * a connector.\n * @param {ConnectorDescription} connectorDesc the description of the connector\n * @return {Connector} a function that wraps a component into\n * an instantsearch connected one.\n */\nexport default function createConnector(connectorDesc) {\n  if (!connectorDesc.displayName) {\n    throw new Error('`createConnector` requires you to provide a `displayName` property.');\n  }\n\n  var hasRefine = _has(connectorDesc, 'refine');\n  var hasSearchForFacetValues = _has(connectorDesc, 'searchForFacetValues');\n  var hasSearchParameters = _has(connectorDesc, 'getSearchParameters');\n  var hasMetadata = _has(connectorDesc, 'getMetadata');\n  var hasTransitionState = _has(connectorDesc, 'transitionState');\n  var hasCleanUp = _has(connectorDesc, 'cleanUp');\n  var isWidget = hasSearchParameters || hasMetadata || hasTransitionState;\n\n  return function (Composed) {\n    var _class, _temp, _initialiseProps;\n\n    return _temp = _class = function (_Component) {\n      _inherits(Connector, _Component);\n\n      function Connector(props, context) {\n        _classCallCheck(this, Connector);\n\n        var _this = _possibleConstructorReturn(this, (Connector.__proto__ || Object.getPrototypeOf(Connector)).call(this, props, context));\n\n        _initialiseProps.call(_this);\n\n        var _context$ais = context.ais,\n            store = _context$ais.store,\n            widgetsManager = _context$ais.widgetsManager;\n\n        var canRender = false;\n        _this.state = {\n          props: _this.getProvidedProps(_extends({}, props, { canRender: canRender })),\n          canRender: canRender // use to know if a component is rendered (browser), or not (server).\n        };\n\n        _this.unsubscribe = store.subscribe(function () {\n          if (_this.state.canRender) {\n            _this.setState({\n              props: _this.getProvidedProps(_extends({}, _this.props, {\n                canRender: _this.state.canRender\n              }))\n            });\n          }\n        });\n        if (isWidget) {\n          _this.unregisterWidget = widgetsManager.registerWidget(_this);\n        }\n        if (process.env.NODE_ENV === 'development') {\n          var onlyGetProvidedPropsUsage = !Object.keys(connectorDesc).find(function (key) {\n            return ['getMetadata', 'getSearchParameters', 'refine', 'cleanUp'].indexOf(key) > -1;\n          });\n\n          if (onlyGetProvidedPropsUsage && connectorDesc.displayName.substr(0, 7) !== 'Algolia') {\n            // eslint-disable-next-line no-console\n            console.warn('react-instantsearch: it seems that you are using the `createConnector` api ' + 'only to access the `searchState` and the `searchResults` through `getProvidedProps`.' + 'We are now provided a dedicated API' + ' the `connectStateResults` connector that you should use instead. The `createConnector` API will be ' + 'soon deprecated and will break in future next major versions.' + '\\n\\n' + 'See more at https://community.algolia.com/react-instantsearch/connectors/connectStateResults.html' + '\\n' + 'and https://community.algolia.com/react-instantsearch/guide/Conditional_display.html');\n          }\n        }\n        return _this;\n      }\n\n      _createClass(Connector, [{\n        key: 'getMetadata',\n        value: function getMetadata(nextWidgetsState) {\n          if (hasMetadata) {\n            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);\n          }\n          return {};\n        }\n      }, {\n        key: 'getSearchParameters',\n        value: function getSearchParameters(searchParameters) {\n          if (hasSearchParameters) {\n            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.context.ais.store.getState().widgets);\n          }\n          return null;\n        }\n      }, {\n        key: 'transitionState',\n        value: function transitionState(prevWidgetsState, nextWidgetsState) {\n          if (hasTransitionState) {\n            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);\n          }\n          return nextWidgetsState;\n        }\n      }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n          this.setState({\n            canRender: true\n          });\n        }\n      }, {\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n          if (connectorDesc.getSearchParameters) {\n            this.context.ais.onSearchParameters(connectorDesc.getSearchParameters, this.context, this.props);\n          }\n        }\n      }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n          if (!_isEqual(this.props, nextProps)) {\n            this.setState({\n              props: this.getProvidedProps(nextProps)\n            });\n\n            if (isWidget) {\n              // Since props might have changed, we need to re-run getSearchParameters\n              // and getMetadata with the new props.\n              this.context.ais.widgetsManager.update();\n              if (connectorDesc.transitionState) {\n                this.context.ais.onSearchStateChange(connectorDesc.transitionState.call(this, nextProps, this.context.ais.store.getState().widgets, this.context.ais.store.getState().widgets));\n              }\n            }\n          }\n        }\n      }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n          this.unsubscribe();\n          if (isWidget) {\n            this.unregisterWidget(); // will schedule an update\n            if (hasCleanUp) {\n              var newState = connectorDesc.cleanUp.call(this, this.props, this.context.ais.store.getState().widgets);\n              this.context.ais.store.setState(_extends({}, this.context.ais.store.getState(), {\n                widgets: newState\n              }));\n              this.context.ais.onSearchStateChange(removeEmptyKey(newState));\n            }\n          }\n        }\n      }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          var propsEqual = shallowEqual(this.props, nextProps);\n          if (this.state.props === null || nextState.props === null) {\n            if (this.state.props === nextState.props) {\n              return !propsEqual;\n            }\n            return true;\n          }\n          return !propsEqual || !shallowEqual(this.state.props, nextState.props);\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          var _this2 = this;\n\n          if (this.state.props === null) {\n            return null;\n          }\n\n          var refineProps = hasRefine ? { refine: this.refine, createURL: this.createURL } : {};\n          var searchForFacetValuesProps = hasSearchForFacetValues ? {\n            searchForItems: this.searchForFacetValues,\n            searchForFacetValues: function searchForFacetValues() {\n              if (process.env.NODE_ENV === 'development') {\n                // eslint-disable-next-line no-console\n                console.warn('react-instantsearch: `searchForFacetValues` has been renamed to' + '`searchForItems`, this will break in the next major version.');\n              }\n              _this2.searchForFacetValues.apply(_this2, arguments);\n            }\n          } : {};\n\n          return React.createElement(Composed, _extends({}, this.props, this.state.props, refineProps, searchForFacetValuesProps));\n        }\n      }]);\n\n      return Connector;\n    }(Component), _class.displayName = connectorDesc.displayName + '(' + getDisplayName(Composed) + ')', _class.defaultClassNames = Composed.defaultClassNames, _class.propTypes = connectorDesc.propTypes, _class.defaultProps = connectorDesc.defaultProps, _class.contextTypes = {\n      // @TODO: more precise state manager propType\n      ais: PropTypes.object.isRequired,\n      multiIndexContext: PropTypes.object\n    }, _initialiseProps = function _initialiseProps() {\n      var _this3 = this;\n\n      this.getProvidedProps = function (props) {\n        var store = _this3.context.ais.store;\n\n        var _store$getState = store.getState(),\n            results = _store$getState.results,\n            searching = _store$getState.searching,\n            error = _store$getState.error,\n            widgets = _store$getState.widgets,\n            metadata = _store$getState.metadata,\n            resultsFacetValues = _store$getState.resultsFacetValues,\n            searchingForFacetValues = _store$getState.searchingForFacetValues,\n            isSearchStalled = _store$getState.isSearchStalled;\n\n        var searchResults = {\n          results: results,\n          searching: searching,\n          error: error,\n          searchingForFacetValues: searchingForFacetValues,\n          isSearchStalled: isSearchStalled\n        };\n        return connectorDesc.getProvidedProps.call(_this3, props, widgets, searchResults, metadata, resultsFacetValues);\n      };\n\n      this.refine = function () {\n        var _connectorDesc$refine;\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this3.context.ais.onInternalStateUpdate((_connectorDesc$refine = connectorDesc.refine).call.apply(_connectorDesc$refine, [_this3, _this3.props, _this3.context.ais.store.getState().widgets].concat(args)));\n      };\n\n      this.searchForFacetValues = function () {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        _this3.context.ais.onSearchForFacetValues(connectorDesc.searchForFacetValues.apply(connectorDesc, [_this3.props, _this3.context.ais.store.getState().widgets].concat(args)));\n      };\n\n      this.createURL = function () {\n        var _connectorDesc$refine2;\n\n        for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        return _this3.context.ais.createHrefForState((_connectorDesc$refine2 = connectorDesc.refine).call.apply(_connectorDesc$refine2, [_this3, _this3.props, _this3.context.ais.store.getState().widgets].concat(args)));\n      };\n\n      this.cleanUp = function () {\n        var _connectorDesc$cleanU;\n\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return (_connectorDesc$cleanU = connectorDesc.cleanUp).call.apply(_connectorDesc$cleanU, [_this3].concat(args));\n      };\n    }, _temp;\n  };\n}"]},"metadata":{},"sourceType":"module"}