{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createConnector = require('../core/createConnector');\n\nvar _createConnector2 = _interopRequireDefault(_createConnector);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _indexUtils = require('../core/indexUtils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction getId() {\n  return 'query';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId(props);\n  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, '', function (currentRefinement) {\n    if (currentRefinement) {\n      return currentRefinement;\n    }\n\n    return '';\n  });\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextRefinement);\n\n  var resetPage = true;\n  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return (0, _indexUtils.cleanUpValue)(searchState, context, getId());\n}\n/**\n * connectSearchBox connector provides the logic to build a widget that will\n * let the user search for a query.\n * @name connectSearchBox\n * @kind connector\n * @providedPropType {function} refine - a function to remove a single filter\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {string} currentRefinement - the query to search for.\n * @providedPropType {boolean} isSearchStalled - a flag that indicates if react-is has detected that searches are stalled.\n */\n\n\nexports.default = (0, _createConnector2.default)({\n  displayName: 'AlgoliaSearchBox',\n  propTypes: {\n    defaultRefinement: _propTypes2.default.string\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      currentRefinement: getCurrentRefinement(props, searchState, this.context),\n      isSearchStalled: searchResults.isSearchStalled\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, this.context);\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, this.context);\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQuery(getCurrentRefinement(props, searchState, this.context));\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var _this = this;\n\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, this.context);\n    return {\n      id: id,\n      index: (0, _indexUtils.getIndex)(this.context),\n      items: currentRefinement === null ? [] : [{\n        label: id + ': ' + currentRefinement,\n        value: function value(nextState) {\n          return _refine(props, nextState, '', _this.context);\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/node_modules/react-instantsearch/src/connectors/connectSearchBox.js"],"names":["Object","defineProperty","exports","value","_createConnector","require","_createConnector2","_interopRequireDefault","_propTypes","_propTypes2","_indexUtils","obj","__esModule","default","_defineProperty","key","enumerable","configurable","writable","getId","getCurrentRefinement","props","searchState","context","id","getCurrentRefinementValue","currentRefinement","_refine","nextRefinement","nextValue","resetPage","refineValue","_cleanUp","cleanUpValue","displayName","propTypes","defaultRefinement","string","getProvidedProps","searchResults","isSearchStalled","refine","cleanUp","getSearchParameters","searchParameters","setQuery","getMetadata","_this","index","getIndex","items","label","nextState"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createConnector = require('../core/createConnector');\n\nvar _createConnector2 = _interopRequireDefault(_createConnector);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _indexUtils = require('../core/indexUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction getId() {\n  return 'query';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId(props);\n  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, '', function (currentRefinement) {\n    if (currentRefinement) {\n      return currentRefinement;\n    }\n    return '';\n  });\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId();\n  var nextValue = _defineProperty({}, id, nextRefinement);\n  var resetPage = true;\n  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return (0, _indexUtils.cleanUpValue)(searchState, context, getId());\n}\n\n/**\n * connectSearchBox connector provides the logic to build a widget that will\n * let the user search for a query.\n * @name connectSearchBox\n * @kind connector\n * @providedPropType {function} refine - a function to remove a single filter\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {string} currentRefinement - the query to search for.\n * @providedPropType {boolean} isSearchStalled - a flag that indicates if react-is has detected that searches are stalled.\n */\nexports.default = (0, _createConnector2.default)({\n  displayName: 'AlgoliaSearchBox',\n\n  propTypes: {\n    defaultRefinement: _propTypes2.default.string\n  },\n\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      currentRefinement: getCurrentRefinement(props, searchState, this.context),\n      isSearchStalled: searchResults.isSearchStalled\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, this.context);\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, this.context);\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQuery(getCurrentRefinement(props, searchState, this.context));\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var _this = this;\n\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, this.context);\n    return {\n      id: id,\n      index: (0, _indexUtils.getIndex)(this.context),\n      items: currentRefinement === null ? [] : [{\n        label: id + ': ' + currentRefinement,\n        value: function value(nextState) {\n          return _refine(props, nextState, '', _this.context);\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});"]},"metadata":{},"sourceType":"script"}