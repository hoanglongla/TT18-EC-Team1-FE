{"ast":null,"code":"import moment from 'moment';\nimport { dateFormat } from './FieldFormats';\nexport const validateDate = value => {\n  let errors;\n\n  if (!value) {\n    errors = 'Required!';\n  } else if (moment(value).format(dateFormat) < moment(Date.now()).format(dateFormat)) {\n    errors = 'Invalid date!';\n  }\n\n  return errors;\n};\nexport const validateEmail = value => {\n  let errors;\n\n  if (!value) {\n    errors = 'Required!';\n  } else if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n    errors = 'Invalid email address!';\n  }\n\n  return errors;\n};\nexport const isRequired = value => !value ? 'Required!' : '';","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/components/ScrumBoard/ValidateFields.js"],"names":["moment","dateFormat","validateDate","value","errors","format","Date","now","validateEmail","test","isRequired"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,YAAY,GAAGC,KAAK,IAAI;AACnC,MAAIC,MAAJ;;AAEA,MAAI,CAACD,KAAL,EAAY;AACVC,IAAAA,MAAM,GAAG,WAAT;AACD,GAFD,MAEO,IACLJ,MAAM,CAACG,KAAD,CAAN,CAAcE,MAAd,CAAqBJ,UAArB,IAAmCD,MAAM,CAACM,IAAI,CAACC,GAAL,EAAD,CAAN,CAAmBF,MAAnB,CAA0BJ,UAA1B,CAD9B,EAEL;AACAG,IAAAA,MAAM,GAAG,eAAT;AACD;;AAED,SAAOA,MAAP;AACD,CAZM;AAcP,OAAO,MAAMI,aAAa,GAAGL,KAAK,IAAI;AACpC,MAAIC,MAAJ;;AAEA,MAAI,CAACD,KAAL,EAAY;AACVC,IAAAA,MAAM,GAAG,WAAT;AACD,GAFD,MAEO,IAAI,CAAC,8CAA8CK,IAA9C,CAAmDN,KAAnD,CAAL,EAAgE;AACrEC,IAAAA,MAAM,GAAG,wBAAT;AACD;;AAED,SAAOA,MAAP;AACD,CAVM;AAYP,OAAO,MAAMM,UAAU,GAAGP,KAAK,IAAK,CAACA,KAAD,GAAS,WAAT,GAAuB,EAApD","sourcesContent":["import moment from 'moment';\r\nimport { dateFormat } from './FieldFormats';\r\n\r\nexport const validateDate = value => {\r\n  let errors;\r\n\r\n  if (!value) {\r\n    errors = 'Required!';\r\n  } else if (\r\n    moment(value).format(dateFormat) < moment(Date.now()).format(dateFormat)\r\n  ) {\r\n    errors = 'Invalid date!';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const validateEmail = value => {\r\n  let errors;\r\n\r\n  if (!value) {\r\n    errors = 'Required!';\r\n  } else if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\r\n    errors = 'Invalid email address!';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const isRequired = value => (!value ? 'Required!' : '');\r\n"]},"metadata":{},"sourceType":"module"}