{"ast":null,"code":"var _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\GithubSearch\\\\GithubSearchResult.js\";\nimport React from 'react';\nimport Loader from '@iso/components/utility/loader';\nimport HelperText from '@iso/components/utility/helper-text';\nimport Pagination from '@iso/components/uielements/pagination';\nimport { per_page } from '@iso/redux/githubSearch/sagas';\nimport { GithubResultListStyleWrapper, GithubResultStyleWrapper } from './GithubSearchResult.styles';\n\nfunction SearchList(result) {\n  return /*#__PURE__*/React.createElement(GithubResultListStyleWrapper, {\n    className: \"isoGithubResultList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, result.map(item => {\n    const onClick = () => {\n      window.open(item.html_url, '_blank');\n    };\n\n    const updateDate = new Date(item.updated_at).toDateString();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      className: \"isoSingleRepository\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"titleAndLanguage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: onClick,\n      href: \"# \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, `${item.full_name} `)), item.language ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"language\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, item.language) : '', item.stargazers_count ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"totalStars\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, item.stargazers_count) : ''), item.description ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }, item.description) : '', /*#__PURE__*/React.createElement(\"span\", {\n      className: \"updateDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Updated on \", updateDate));\n  }));\n}\n\nconst GitResult = ({\n  GitSearch,\n  onPageChange\n}) => {\n  const {\n    searcText,\n    result,\n    loading,\n    error,\n    page,\n    total_count\n  } = GitSearch;\n\n  if (!searcText) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error || !total_count) {\n    return /*#__PURE__*/React.createElement(HelperText, {\n      text: \"THERE ARE SOME ERRORS\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (result.length === 0) {\n    return /*#__PURE__*/React.createElement(HelperText, {\n      text: \"No Result Found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const visibleItem = total_count > 1000 ? 1000 : total_count;\n  const pageCount = Math.floor(visibleItem / per_page);\n  return /*#__PURE__*/React.createElement(GithubResultStyleWrapper, {\n    className: \"isoGithubSearchResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"isoTotalRepository\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, `${total_count}`, \" repository results\")), SearchList(result), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"githubSearchPagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    defaultCurrent: page,\n    total: pageCount,\n    onChange: page => {\n      onPageChange(searcText, page);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default GitResult;","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/containers/GithubSearch/GithubSearchResult.js"],"names":["React","Loader","HelperText","Pagination","per_page","GithubResultListStyleWrapper","GithubResultStyleWrapper","SearchList","result","map","item","onClick","window","open","html_url","updateDate","Date","updated_at","toDateString","id","full_name","language","stargazers_count","description","GitResult","GitSearch","onPageChange","searcText","loading","error","page","total_count","length","visibleItem","pageCount","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SACEC,4BADF,EAEEC,wBAFF,QAGO,6BAHP;;AAKA,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,sBACE,oBAAC,4BAAD;AAA8B,IAAA,SAAS,EAAC,qBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,CAACC,GAAP,CAAWC,IAAI,IAAI;AAClB,UAAMC,OAAO,GAAG,MAAM;AACpBC,MAAAA,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,QAAjB,EAA2B,QAA3B;AACD,KAFD;;AAGA,UAAMC,UAAU,GAAG,IAAIC,IAAJ,CAASN,IAAI,CAACO,UAAd,EAA0BC,YAA1B,EAAnB;AACA,wBACE;AAAK,MAAA,GAAG,EAAER,IAAI,CAACS,EAAf;AAAmB,MAAA,SAAS,EAAC,qBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,OAAO,EAAER,OAAZ;AAAqB,MAAA,IAAI,EAAC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,GAAED,IAAI,CAACU,SAAU,GADrB,CADF,CADF,EAOGV,IAAI,CAACW,QAAL,gBACC;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BX,IAAI,CAACW,QAAjC,CADD,GAGC,EAVJ,EAYGX,IAAI,CAACY,gBAAL,gBACC;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BZ,IAAI,CAACY,gBAAnC,CADD,GAGC,EAfJ,CADF,EAmBGZ,IAAI,CAACa,WAAL,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIb,IAAI,CAACa,WAAT,CAAnB,GAA+C,EAnBlD,eAoBE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAyCR,UAAzC,CApBF,CADF;AAwBD,GA7BA,CADH,CADF;AAkCD;;AACD,MAAMS,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AACjD,QAAM;AAAEC,IAAAA,SAAF;AAAanB,IAAAA,MAAb;AAAqBoB,IAAAA,OAArB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,IAArC;AAA2CC,IAAAA;AAA3C,MAA2DN,SAAjE;;AACA,MAAI,CAACE,SAAL,EAAgB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIC,OAAJ,EAAa;AACX,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIC,KAAK,IAAI,CAACE,WAAd,EAA2B;AACzB,wBAAO,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIvB,MAAM,CAACwB,MAAP,KAAkB,CAAtB,EAAyB;AACvB,wBAAO,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,QAAMC,WAAW,GAAGF,WAAW,GAAG,IAAd,GAAqB,IAArB,GAA4BA,WAAhD;AACA,QAAMG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,WAAW,GAAG7B,QAAzB,CAAlB;AACA,sBACE,oBAAC,wBAAD;AAA0B,IAAA,SAAS,EAAC,uBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,GAAE2B,WAAY,EAAtB,wBADF,CADF,EAIGxB,UAAU,CAACC,MAAD,CAJb,eAKE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,cAAc,EAAEsB,IADlB;AAEE,IAAA,KAAK,EAAEI,SAFT;AAGE,IAAA,QAAQ,EAAEJ,IAAI,IAAI;AAChBJ,MAAAA,YAAY,CAACC,SAAD,EAAYG,IAAZ,CAAZ;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AAiBD,CAjCD;;AAmCA,eAAeN,SAAf","sourcesContent":["import React from 'react';\r\nimport Loader from '@iso/components/utility/loader';\r\nimport HelperText from '@iso/components/utility/helper-text';\r\nimport Pagination from '@iso/components/uielements/pagination';\r\nimport { per_page } from '@iso/redux/githubSearch/sagas';\r\nimport {\r\n  GithubResultListStyleWrapper,\r\n  GithubResultStyleWrapper,\r\n} from './GithubSearchResult.styles';\r\n\r\nfunction SearchList(result) {\r\n  return (\r\n    <GithubResultListStyleWrapper className=\"isoGithubResultList\">\r\n      {result.map(item => {\r\n        const onClick = () => {\r\n          window.open(item.html_url, '_blank');\r\n        };\r\n        const updateDate = new Date(item.updated_at).toDateString();\r\n        return (\r\n          <div key={item.id} className=\"isoSingleRepository\">\r\n            <div className=\"titleAndLanguage\">\r\n              <h3>\r\n                <a onClick={onClick} href=\"# \">\r\n                  {`${item.full_name} `}\r\n                </a>\r\n              </h3>\r\n\r\n              {item.language ? (\r\n                <span className=\"language\">{item.language}</span>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {item.stargazers_count ? (\r\n                <span className=\"totalStars\">{item.stargazers_count}</span>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n            {item.description ? <p>{item.description}</p> : ''}\r\n            <span className=\"updateDate\">Updated on {updateDate}</span>\r\n          </div>\r\n        );\r\n      })}\r\n    </GithubResultListStyleWrapper>\r\n  );\r\n}\r\nconst GitResult = ({ GitSearch, onPageChange }) => {\r\n  const { searcText, result, loading, error, page, total_count } = GitSearch;\r\n  if (!searcText) {\r\n    return <div />;\r\n  }\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  if (error || !total_count) {\r\n    return <HelperText text=\"THERE ARE SOME ERRORS\" />;\r\n  }\r\n  if (result.length === 0) {\r\n    return <HelperText text=\"No Result Found\" />;\r\n  }\r\n  const visibleItem = total_count > 1000 ? 1000 : total_count;\r\n  const pageCount = Math.floor(visibleItem / per_page);\r\n  return (\r\n    <GithubResultStyleWrapper className=\"isoGithubSearchResult\">\r\n      <p className=\"isoTotalRepository\">\r\n        <span>{`${total_count}`} repository results</span>\r\n      </p>\r\n      {SearchList(result)}\r\n      <div className=\"githubSearchPagination\">\r\n        <Pagination\r\n          defaultCurrent={page}\r\n          total={pageCount}\r\n          onChange={page => {\r\n            onPageChange(searcText, page);\r\n          }}\r\n        />\r\n      </div>\r\n    </GithubResultStyleWrapper>\r\n  );\r\n};\r\n\r\nexport default GitResult;\r\n"]},"metadata":{},"sourceType":"module"}