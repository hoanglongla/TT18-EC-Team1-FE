{"ast":null,"code":"var getFileNameAndExtension = require('./getFileNameAndExtension');\n\nvar mimeTypes = require('./mimeTypes');\n\nmodule.exports = function getFileType(file) {\n  var fileExtension = file.name ? getFileNameAndExtension(file.name).extension : null;\n  fileExtension = fileExtension ? fileExtension.toLowerCase() : null;\n\n  if (file.type) {\n    // if mime type is set in the file object already, use that\n    return file.type;\n  }\n\n  if (fileExtension && mimeTypes[fileExtension]) {\n    // else, see if we can map extension to a mime type\n    return mimeTypes[fileExtension];\n  } // if all fails, fall back to a generic byte stream type\n\n\n  return 'application/octet-stream';\n};","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/@uppy/utils/lib/getFileType.js"],"names":["getFileNameAndExtension","require","mimeTypes","module","exports","getFileType","file","fileExtension","name","extension","toLowerCase","type"],"mappings":"AAAA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,2BAAD,CAArC;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAC1C,MAAIC,aAAa,GAAGD,IAAI,CAACE,IAAL,GAAYR,uBAAuB,CAACM,IAAI,CAACE,IAAN,CAAvB,CAAmCC,SAA/C,GAA2D,IAA/E;AACAF,EAAAA,aAAa,GAAGA,aAAa,GAAGA,aAAa,CAACG,WAAd,EAAH,GAAiC,IAA9D;;AAEA,MAAIJ,IAAI,CAACK,IAAT,EAAe;AACb;AACA,WAAOL,IAAI,CAACK,IAAZ;AACD;;AAED,MAAIJ,aAAa,IAAIL,SAAS,CAACK,aAAD,CAA9B,EAA+C;AAC7C;AACA,WAAOL,SAAS,CAACK,aAAD,CAAhB;AACD,GAZyC,CAYxC;;;AAGF,SAAO,0BAAP;AACD,CAhBD","sourcesContent":["var getFileNameAndExtension = require('./getFileNameAndExtension');\n\nvar mimeTypes = require('./mimeTypes');\n\nmodule.exports = function getFileType(file) {\n  var fileExtension = file.name ? getFileNameAndExtension(file.name).extension : null;\n  fileExtension = fileExtension ? fileExtension.toLowerCase() : null;\n\n  if (file.type) {\n    // if mime type is set in the file object already, use that\n    return file.type;\n  }\n\n  if (fileExtension && mimeTypes[fileExtension]) {\n    // else, see if we can map extension to a mime type\n    return mimeTypes[fileExtension];\n  } // if all fails, fall back to a generic byte stream type\n\n\n  return 'application/octet-stream';\n};"]},"metadata":{},"sourceType":"script"}