{"ast":null,"code":"var _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\Forms\\\\Transfer\\\\Transfer.js\";\nimport React from 'react';\nimport Transfer from '@iso/components/uielements/transfer';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nexport default function () {\n  const [state, setState] = React.useState({\n    mockData: [],\n    targetKeys: []\n  });\n  React.useEffect(() => {\n    getMock();\n  }, []);\n\n  const getMock = () => {\n    const targetKeys = [];\n    const mockData = [];\n\n    for (let i = 0; i < 20; i++) {\n      const data = {\n        key: i.toString(),\n        title: `content${i + 1}`,\n        description: `description of content${i + 1}`,\n        chosen: Math.random() * 2 > 1\n      };\n\n      if (data.chosen) {\n        targetKeys.push(data.key);\n      }\n\n      mockData.push(data);\n    }\n\n    setState({\n      mockData,\n      targetKeys\n    });\n  };\n\n  const filterOption = (inputValue, option) => {\n    return option.description.indexOf(inputValue) > -1;\n  };\n\n  const handleChange = targetKeys => {\n    setState({ ...state,\n      targetKeys\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(LayoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"forms.transfer.header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    title: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"forms.transfer.Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    }),\n    subtitle: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"forms.transfer.SubTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ContentHolder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Transfer, {\n    dataSource: state.mockData,\n    showSearch: true,\n    filterOption: filterOption,\n    targetKeys: state.targetKeys,\n    onChange: handleChange,\n    render: item => item.title,\n    className: \"isomorphicTransfer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/Forms/Transfer/Transfer.js"],"names":["React","Transfer","PageHeader","Box","LayoutWrapper","ContentHolder","IntlMessages","state","setState","useState","mockData","targetKeys","useEffect","getMock","i","data","key","toString","title","description","chosen","Math","random","push","filterOption","inputValue","option","indexOf","handleChange","item"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Transfer from '@iso/components/uielements/transfer';\r\nimport PageHeader from '@iso/components/utility/pageHeader';\r\nimport Box from '@iso/components/utility/box';\r\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\r\nimport ContentHolder from '@iso/components/utility/contentHolder';\r\nimport IntlMessages from '@iso/components/utility/intlMessages';\r\n\r\nexport default function() {\r\n  const [state, setState] = React.useState({\r\n    mockData: [],\r\n    targetKeys: [],\r\n  });\r\n  React.useEffect(() => {\r\n    getMock();\r\n  }, []);\r\n  const getMock = () => {\r\n    const targetKeys = [];\r\n    const mockData = [];\r\n    for (let i = 0; i < 20; i++) {\r\n      const data = {\r\n        key: i.toString(),\r\n        title: `content${i + 1}`,\r\n        description: `description of content${i + 1}`,\r\n        chosen: Math.random() * 2 > 1,\r\n      };\r\n      if (data.chosen) {\r\n        targetKeys.push(data.key);\r\n      }\r\n      mockData.push(data);\r\n    }\r\n    setState({ mockData, targetKeys });\r\n  };\r\n  const filterOption = (inputValue, option) => {\r\n    return option.description.indexOf(inputValue) > -1;\r\n  };\r\n  const handleChange = targetKeys => {\r\n    setState({ ...state, targetKeys });\r\n  };\r\n  return (\r\n    <LayoutWrapper>\r\n      <PageHeader>{<IntlMessages id=\"forms.transfer.header\" />}</PageHeader>\r\n\r\n      <Box\r\n        title={<IntlMessages id=\"forms.transfer.Title\" />}\r\n        subtitle={<IntlMessages id=\"forms.transfer.SubTitle\" />}\r\n      >\r\n        <ContentHolder>\r\n          <Transfer\r\n            dataSource={state.mockData}\r\n            showSearch\r\n            filterOption={filterOption}\r\n            targetKeys={state.targetKeys}\r\n            onChange={handleChange}\r\n            render={item => item.title}\r\n            className=\"isomorphicTransfer\"\r\n          />\r\n        </ContentHolder>\r\n      </Box>\r\n    </LayoutWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}