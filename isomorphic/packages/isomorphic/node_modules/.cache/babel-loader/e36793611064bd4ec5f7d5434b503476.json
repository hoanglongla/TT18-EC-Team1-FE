{"ast":null,"code":"var _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\Tables\\\\CustomerTable\\\\CustomerTable.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport notification from '@iso/components/Notification';\nimport HelperText from '@iso/components/utility/helper-text';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport Button from '@iso/components/uielements/button';\nimport invoiceActions from '@iso/redux/invoice/actions';\nimport CardWrapper, { Box, StatusTag } from '../../Invoice/Invoice.styles';\nimport TableWrapper from '../../Tables/AntTables/AntTables.styles';\nconst {\n  initData,\n  deleteInvoice\n} = invoiceActions;\nexport default function Invoices() {\n  const [selected, setSelected] = React.useState([]);\n  const {\n    initialInvoices,\n    invoices\n  } = useSelector(state => state.Invoices);\n  const dispatch = useDispatch();\n  const match = useRouteMatch();\n  React.useEffect(() => {\n    if (!initialInvoices) {\n      dispatch(initData());\n    }\n  }, [dispatch, initialInvoices]);\n  const columns = [{\n    title: 'TÃªn',\n    dataIndex: 'number',\n    rowKey: 'number',\n    width: '15%',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }\n    }, text)\n  }, {\n    title: 'Email',\n    dataIndex: 'billFrom',\n    rowKey: 'billFrom',\n    width: '25%',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }\n    }, text)\n  }, {\n    title: 'Status',\n    dataIndex: 'orderStatus',\n    rowKey: 'orderStatus',\n    width: '13%',\n    render: (text, orderStatus) => {\n      let className;\n\n      if (text === 'shipped' || text === 'Shipped' || text === 'SHIPPED') {\n        className = 'shipped';\n      } else if (text === 'delivered' || text === 'Delivered' || text === 'DELIVERED') {\n        className = 'delivered';\n      } else if (text === 'pending' || text === 'Pending' || text === 'PENDING') {\n        className = 'pending';\n      }\n\n      return /*#__PURE__*/React.createElement(StatusTag, {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }\n      }, \"online\");\n    }\n  }, {\n    title: '',\n    dataIndex: 'view',\n    rowKey: 'view',\n    width: '10%',\n    render: (text, invoice) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"isoInvoiceBtnView\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/dashboard/customer_management/${invoice.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      className: \"invoiceViewBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Xem\")), ' ', /*#__PURE__*/React.createElement(Button, {\n      className: \"invoiceDltBtn\" // icon=\"delete\"\n      ,\n      onClick: () => {\n        notification('error', '1 invoice deleted');\n        dispatch(deleteInvoice([invoice.key]));\n        setSelected([]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ion-android-delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    })))\n  }];\n\n  const getnewInvoiceId = () => new Date().getTime(); // const { match, invoices, deleteInvoice } = this.props;\n\n\n  const rowSelection = {\n    hideDefaultSelections: true,\n    selectedRowKeys: selected,\n    onChange: selected => setSelected(selected),\n    selections: [{\n      key: 'all-data',\n      text: 'Select All Invoices',\n      onSelect: () => setSelected(invoices.map(invoice => invoice.key))\n    }, {\n      key: 'no-data',\n      text: 'Unselect all',\n      onSelect: () => setSelected([])\n    }, {\n      key: 'delete-selected',\n      text: 'Delete selected',\n      onSelect: changableRowKeys => {\n        if (selected.length > 0) {\n          dispatch(deleteInvoice(selected));\n          setSelected([]);\n          notification('error', `${selected.length} invoices deleted`);\n        }\n      }\n    }],\n    onSelection: selected => setSelected(selected)\n  };\n  return /*#__PURE__*/React.createElement(LayoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"T\\xE0i kho\\u1EA3n kh\\xE1ch h\\xE0ng\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoInvoiceTableBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `${match.path}/${getnewInvoiceId()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    className: \"mateAddInvoiceBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Th\\xEAm m\\u1EDBi kh\\xE1ch h\\xE0ng\"))), /*#__PURE__*/React.createElement(CardWrapper, {\n    title: \"Invoices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, invoices.length === 0 ? /*#__PURE__*/React.createElement(HelperText, {\n    text: \"No Invoices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoInvoiceTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbars, {\n    style: {\n      width: '100%',\n      height: 'calc(100vh - 70px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableWrapper, {\n    dataSource: invoices,\n    columns: columns,\n    pagination: false,\n    className: \"invoiceListTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/Tables/CustomerTable/CustomerTable.js"],"names":["React","useDispatch","useSelector","Link","useRouteMatch","notification","HelperText","LayoutWrapper","PageHeader","IntlMessages","Scrollbars","Button","invoiceActions","CardWrapper","Box","StatusTag","TableWrapper","initData","deleteInvoice","Invoices","selected","setSelected","useState","initialInvoices","invoices","state","dispatch","match","useEffect","columns","title","dataIndex","rowKey","width","render","text","orderStatus","className","invoice","id","key","getnewInvoiceId","Date","getTime","rowSelection","hideDefaultSelections","selectedRowKeys","onChange","selections","onSelect","map","changableRowKeys","length","onSelection","path","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport notification from '@iso/components/Notification';\r\nimport HelperText from '@iso/components/utility/helper-text';\r\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\r\nimport PageHeader from '@iso/components/utility/pageHeader';\r\nimport IntlMessages from '@iso/components/utility/intlMessages';\r\nimport Scrollbars from '@iso/components/utility/customScrollBar';\r\nimport Button from '@iso/components/uielements/button';\r\nimport invoiceActions from '@iso/redux/invoice/actions';\r\nimport CardWrapper, { Box, StatusTag } from '../../Invoice/Invoice.styles';\r\nimport TableWrapper from '../../Tables/AntTables/AntTables.styles';\r\nconst { initData, deleteInvoice } = invoiceActions;\r\nexport default function Invoices() {\r\n  const [selected, setSelected] = React.useState([]);\r\n  const { initialInvoices, invoices } = useSelector(state => state.Invoices);\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch();\r\n  React.useEffect(() => {\r\n    if (!initialInvoices) {\r\n      dispatch(initData());\r\n    }\r\n  }, [dispatch, initialInvoices]);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'TÃªn',\r\n      dataIndex: 'number',\r\n      rowKey: 'number',\r\n      width: '15%',\r\n      render: text => <span>{text}</span>,\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'billFrom',\r\n      rowKey: 'billFrom',\r\n      width: '25%',\r\n      render: text => <span>{text}</span>,\r\n    },\r\n    \r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'orderStatus',\r\n      rowKey: 'orderStatus',\r\n      width: '13%',\r\n      render: (text, orderStatus) => {\r\n        let className;\r\n        if (text === 'shipped' || text === 'Shipped' || text === 'SHIPPED') {\r\n          className = 'shipped';\r\n        } else if (\r\n          text === 'delivered' ||\r\n          text === 'Delivered' ||\r\n          text === 'DELIVERED'\r\n        ) {\r\n          className = 'delivered';\r\n        } else if (\r\n          text === 'pending' ||\r\n          text === 'Pending' ||\r\n          text === 'PENDING'\r\n        ) {\r\n          className = 'pending';\r\n        }\r\n        return <StatusTag className={className}>online</StatusTag>;\r\n      },\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'view',\r\n      rowKey: 'view',\r\n      width: '10%',\r\n      render: (text, invoice) => (\r\n        <div className=\"isoInvoiceBtnView\">\r\n          <Link to={`/dashboard/customer_management/${invoice.id}`}>\r\n            <Button color=\"primary\" className=\"invoiceViewBtn\">\r\n              Xem\r\n            </Button>\r\n          </Link>{' '}\r\n          <Button\r\n            className=\"invoiceDltBtn\"\r\n            // icon=\"delete\"\r\n            onClick={() => {\r\n              notification('error', '1 invoice deleted');\r\n              dispatch(deleteInvoice([invoice.key]));\r\n              setSelected([]);\r\n            }}\r\n          >\r\n            <i className=\"ion-android-delete\" />\r\n          </Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const getnewInvoiceId = () => new Date().getTime();\r\n  // const { match, invoices, deleteInvoice } = this.props;\r\n  const rowSelection = {\r\n    hideDefaultSelections: true,\r\n    selectedRowKeys: selected,\r\n    onChange: selected => setSelected(selected),\r\n    selections: [\r\n      {\r\n        key: 'all-data',\r\n        text: 'Select All Invoices',\r\n        onSelect: () => setSelected(invoices.map(invoice => invoice.key)),\r\n      },\r\n      {\r\n        key: 'no-data',\r\n        text: 'Unselect all',\r\n        onSelect: () => setSelected([]),\r\n      },\r\n      {\r\n        key: 'delete-selected',\r\n        text: 'Delete selected',\r\n        onSelect: changableRowKeys => {\r\n          if (selected.length > 0) {\r\n            dispatch(deleteInvoice(selected));\r\n            setSelected([]);\r\n            notification('error', `${selected.length} invoices deleted`);\r\n          }\r\n        },\r\n      },\r\n    ],\r\n    onSelection: selected => setSelected(selected),\r\n  };\r\n  return (\r\n    <LayoutWrapper>\r\n      <PageHeader>\r\n        <IntlMessages id=\"TÃ i khoáº£n khÃ¡ch hÃ ng\" />\r\n      </PageHeader>\r\n      <Box>\r\n        <div className=\"isoInvoiceTableBtn\">\r\n          <Link to={`${match.path}/${getnewInvoiceId()}`}>\r\n            <Button type=\"primary\" className=\"mateAddInvoiceBtn\">\r\n              ThÃªm má»i khÃ¡ch hÃ ng\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n\r\n        <CardWrapper title=\"Invoices\">\r\n          {invoices.length === 0 ? (\r\n            <HelperText text=\"No Invoices\" />\r\n          ) : (\r\n            <div className=\"isoInvoiceTable\">\r\n              <Scrollbars\r\n                style={{ width: '100%', height: 'calc(100vh - 70px)' }}\r\n              >\r\n                <TableWrapper\r\n                  \r\n                  dataSource={invoices}\r\n                  columns={columns}\r\n                  pagination={false}\r\n                  className=\"invoiceListTable\"\r\n                />\r\n              </Scrollbars>\r\n            </div>\r\n          )}\r\n        </CardWrapper>\r\n      </Box>\r\n    </LayoutWrapper>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}