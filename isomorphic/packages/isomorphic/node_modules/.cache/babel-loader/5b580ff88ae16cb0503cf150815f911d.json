{"ast":null,"code":"import \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\Tables\\\\CustomerTable\\\\TableView\\\\CustomerView.js\";\nimport React, { useState } from 'react';\nimport { Component } from 'react';\nimport TableWrapper from '../CustomerTable.styles';\nimport categories from \"../../category\";\nimport { backgroundColor, color, marginRight } from 'styled-system';\nimport AddServiceCategoryView from './ModalView/AddServiceCategoryView';\nexport default function () {\n  const [visibleInfo, setVisibleInfo] = React.useState(false);\n\n  const showDrawerInfo = () => {\n    setVisibleInfo(true);\n  };\n\n  const handleCancelDrwerInfo = () => {\n    setVisibleInfo(false);\n  };\n\n  const [visibleDeleteModal, setVisibleDeleteModal] = React.useState(false);\n\n  const showModalDelete = () => {\n    setVisibleDeleteModal(true);\n  };\n\n  const handleOkDeleteModal = () => {\n    setModalText('The modal will be closed after two seconds');\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisibleDeleteModal(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancelDeleteModal = () => {\n    console.log('Clicked cancel button');\n    setVisibleDeleteModal(false);\n  }; //\n\n\n  const [visible, setVisible] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [modalText, setModalText] = React.useState('Content of the modal');\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setModalText('The modal will be closed after two seconds');\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  const columns = [{\n    title: 'TÃªn',\n    dataIndex: 'username',\n    key: 'name',\n    width: \"20%\"\n  }, {\n    title: 'email',\n    dataIndex: 'email',\n    key: 'email',\n    width: \"20%\",\n    ellipsis: true\n  }, {\n    title: '',\n    dataIndex: 'action',\n    width: '15%',\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, record.name === 'initial' && /*#__PURE__*/React.createElement(_Button, {\n      icon: \"plus\",\n      shape: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 43\n      }\n    }), record.name !== 'initial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Button, {\n      icon: \"search\",\n      shape: \"circle\",\n      style: {\n        backgroundColor: \"#008CBA\",\n        marginRight: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(_Button, {\n      icon: \"delete\",\n      shape: \"circle\",\n      type: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    })))\n  }];\n  const myColTitleStyle = {\n    textOverflow: 'ellipsis',\n    overflow: \"hidden\",\n    whiteSpace: 'nowrap'\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    onClick: showModal,\n    style: {\n      marginBottom: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, \"Th\\xEAm th\\u1EC3 lo\\u1EA1i m\\u1EDBi +\"), /*#__PURE__*/React.createElement(TableWrapper, {\n    dataSource: categories.data.data,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(_Modal, {\n    title: \"Th\\xEAm th\\u1EC3 lo\\u1EA1i\",\n    visible: visible,\n    confirmLoading: confirmLoading,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    okText: \"Th\\xEAm\",\n    cancelText: \"H\\u1EE7y\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AddServiceCategoryView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/Tables/CustomerTable/TableView/CustomerView.js"],"names":["React","useState","Component","TableWrapper","categories","backgroundColor","color","marginRight","AddServiceCategoryView","visibleInfo","setVisibleInfo","showDrawerInfo","handleCancelDrwerInfo","visibleDeleteModal","setVisibleDeleteModal","showModalDelete","handleOkDeleteModal","setModalText","setConfirmLoading","setTimeout","handleCancelDeleteModal","console","log","visible","setVisible","confirmLoading","modalText","showModal","handleOk","handleCancel","columns","title","dataIndex","key","width","ellipsis","render","_","record","name","myColTitleStyle","textOverflow","overflow","whiteSpace","marginBottom","data"],"mappings":"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","sourcesContent":["import React , { useState }from 'react';\r\nimport { Component } from 'react';\r\nimport TableWrapper from '../CustomerTable.styles';\r\nimport { Button } from 'antd';\r\nimport categories from \"../../category\"\r\nimport { Drawer,Descriptions,Badge , Modal} from 'antd';\r\n\r\nimport { backgroundColor, color, marginRight } from 'styled-system';\r\nimport AddServiceCategoryView from './ModalView/AddServiceCategoryView';\r\nexport default function() {\r\n  const [visibleInfo, setVisibleInfo] = React.useState(false);\r\n  const showDrawerInfo =()=>{\r\n    setVisibleInfo(true);\r\n  };\r\n  const handleCancelDrwerInfo = () => {\r\n    setVisibleInfo(false);\r\n  };\r\n  const [visibleDeleteModal, setVisibleDeleteModal] = React.useState(false);\r\n  \r\n  const showModalDelete = () => {\r\n    setVisibleDeleteModal(true);\r\n  };\r\n\r\n  const handleOkDeleteModal = () => {\r\n    setModalText('The modal will be closed after two seconds');\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisibleDeleteModal(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleCancelDeleteModal = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisibleDeleteModal(false);\r\n  };\r\n  //\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const [modalText, setModalText] = React.useState('Content of the modal');\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setModalText('The modal will be closed after two seconds');\r\n    setConfirmLoading(true)\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n    \r\n  \r\n  const columns = [\r\n    {\r\n      title: 'TÃªn',\r\n      dataIndex: 'username',\r\n      key: 'name',\r\n      width: \"20%\"  ,\r\n      \r\n    },\r\n    {\r\n      title: 'email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      width: \"20%\" ,\r\n      ellipsis:true\r\n    },\r\n    {\r\n        title: '',\r\n        dataIndex: 'action',\r\n        width: '15%',\r\n        render: (_, record) => (\r\n          <>\r\n            {record.name === 'initial' && <Button icon=\"plus\" shape=\"circle\" />}\r\n            {record.name !== 'initial' && (\r\n              <>\r\n              <Button icon=\"search\" shape=\"circle\" style={{backgroundColor: \"#008CBA\" ,marginRight:\"5px\"}} />\r\n              \r\n              \r\n              <Button icon=\"delete\" shape=\"circle\" type=\"danger\" />\r\n              </>\r\n            )}\r\n          </>\r\n        )\r\n      }\r\n\r\n  ];\r\n  const myColTitleStyle = {\r\n    textOverflow: 'ellipsis',\r\n    overflow: \"hidden\",\r\n    whiteSpace: 'nowrap',\r\n  };\r\n  return (\r\n    <>\r\n    \r\n    <Button type=\"primary\" onClick={showModal} style={{ marginBottom: '3%' }}>\r\n        ThÃªm thá» loáº¡i má»i +\r\n    </Button>\r\n   <TableWrapper dataSource={categories.data.data} columns={columns}   />\r\n    <Modal\r\n    title=\"ThÃªm thá» loáº¡i\"\r\n    visible={visible}\r\n    confirmLoading={confirmLoading}\r\n    onOk={handleOk}\r\n    onCancel={handleCancel}\r\n    okText=\"ThÃªm\"\r\n    cancelText=\"Há»§y\"\r\n    \r\n    >\r\n      <AddServiceCategoryView/>\r\n\r\n    </Modal>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}