{"ast":null,"code":"import \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\components\\\\Card\\\\Card.js\";\nimport React from 'react';\nimport Cards from 'react-credit-cards';\nimport 'react-credit-cards/es/styles-compiled.css';\nimport Form from '../uielements/form';\nimport isoModal from '../Feedback/Modal';\nimport { CardInfoWrapper, InfoFormWrapper } from './CardModal.style';\nimport { InputWrapper } from '../uielements/styles/input.style';\nimport Modals from './Modal.style';\nimport WithDirection from '@iso/lib/helpers/rtl';\nconst WDModal = Modals(isoModal);\nconst Modal = WithDirection(WDModal);\nconst InputField = InputWrapper(_Input);\nexport default function ({\n  modalType,\n  editView,\n  handleCancel,\n  selectedCard,\n  submitCard,\n  updateCard\n}) {\n  const columns = [{\n    title: 'Number',\n    dataIndex: 'number',\n    key: 'number'\n  }, {\n    title: 'Full Name',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Expiry',\n    dataIndex: 'expiry',\n    key: 'expiry'\n  }, {\n    title: 'CVC',\n    dataIndex: 'cvc',\n    key: 'cvc'\n  }];\n\n  const saveButton = () => {\n    submitCard();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    title: modalType === 'edit' ? 'Edit Card' : 'Add Card',\n    visible: editView,\n    onCancel: handleCancel,\n    cancelText: \"Cancel\",\n    onOk: saveButton,\n    okText: modalType === 'edit' ? 'Edit Card' : 'Add Card',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardInfoWrapper, {\n    className: \"isoCardWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    number: selectedCard.number,\n    name: selectedCard.name,\n    expiry: selectedCard.expiry,\n    cvc: selectedCard.cvc,\n    focused: selectedCard.focused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(InfoFormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"isoCardInfoForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, columns.map((column, index) => {\n    const {\n      key,\n      title\n    } = column;\n    return /*#__PURE__*/React.createElement(InputField, {\n      placeholder: title,\n      type: \"text\",\n      className: `isoCardInput ${key}`,\n      onChange: event => {\n        selectedCard[key] = event.target.value;\n        updateCard(selectedCard);\n      },\n      name: key,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/components/Card/Card.js"],"names":["React","Cards","Form","isoModal","CardInfoWrapper","InfoFormWrapper","InputWrapper","Modals","WithDirection","WDModal","Modal","InputField","modalType","editView","handleCancel","selectedCard","submitCard","updateCard","columns","title","dataIndex","key","saveButton","number","name","expiry","cvc","focused","map","column","index","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Input } from 'antd';\r\nimport Cards from 'react-credit-cards';\r\nimport 'react-credit-cards/es/styles-compiled.css';\r\nimport Form from '../uielements/form';\r\nimport isoModal from '../Feedback/Modal';\r\nimport { CardInfoWrapper, InfoFormWrapper } from './CardModal.style';\r\nimport { InputWrapper } from '../uielements/styles/input.style';\r\nimport Modals from './Modal.style';\r\nimport WithDirection from '@iso/lib/helpers/rtl';\r\nconst WDModal = Modals(isoModal);\r\nconst Modal = WithDirection(WDModal);\r\n\r\nconst InputField = InputWrapper(Input);\r\n\r\nexport default function({\r\n  modalType,\r\n  editView,\r\n  handleCancel,\r\n  selectedCard,\r\n  submitCard,\r\n  updateCard,\r\n}) {\r\n  const columns = [\r\n    {\r\n      title: 'Number',\r\n      dataIndex: 'number',\r\n      key: 'number',\r\n    },\r\n    {\r\n      title: 'Full Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Expiry',\r\n      dataIndex: 'expiry',\r\n      key: 'expiry',\r\n    },\r\n    {\r\n      title: 'CVC',\r\n      dataIndex: 'cvc',\r\n      key: 'cvc',\r\n    },\r\n  ];\r\n\r\n  const saveButton = () => {\r\n    submitCard();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={modalType === 'edit' ? 'Edit Card' : 'Add Card'}\r\n      visible={editView}\r\n      onCancel={handleCancel}\r\n      cancelText=\"Cancel\"\r\n      onOk={saveButton}\r\n      okText={modalType === 'edit' ? 'Edit Card' : 'Add Card'}\r\n    >\r\n      <CardInfoWrapper className=\"isoCardWrapper\">\r\n        <Cards\r\n          number={selectedCard.number}\r\n          name={selectedCard.name}\r\n          expiry={selectedCard.expiry}\r\n          cvc={selectedCard.cvc}\r\n          focused={selectedCard.focused}\r\n        />\r\n      </CardInfoWrapper>\r\n      <InfoFormWrapper>\r\n        <Form className=\"isoCardInfoForm\">\r\n          {columns.map((column, index) => {\r\n            const { key, title } = column;\r\n            return (\r\n              <InputField\r\n                placeholder={title}\r\n                type=\"text\"\r\n                className={`isoCardInput ${key}`}\r\n                onChange={event => {\r\n                  selectedCard[key] = event.target.value;\r\n                  updateCard(selectedCard);\r\n                }}\r\n                name={key}\r\n                key={index}\r\n              />\r\n            );\r\n          })}\r\n        </Form>\r\n      </InfoFormWrapper>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}