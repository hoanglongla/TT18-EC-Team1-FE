{"ast":null,"code":"import \"antd/es/config-provider/style/css\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nvar _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\packages\\\\isomorphic\\\\src\\\\AppProvider.js\";\nimport React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport themes from '@iso/config/theme/theme.config';\nimport AppLocale from '@iso/config/translation';\nexport default function AppProvider({\n  children\n}) {\n  const {\n    locale\n  } = useSelector(state => state.LanguageSwitcher.language);\n  const {\n    themeName\n  } = useSelector(state => state.ThemeSwitcher.changeThemes);\n  const currentAppLocale = AppLocale[locale];\n  return /*#__PURE__*/React.createElement(_ConfigProvider, {\n    locale: currentAppLocale.antd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: themes[themeName],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, children)));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/packages/isomorphic/src/AppProvider.js"],"names":["React","IntlProvider","useSelector","ThemeProvider","themes","AppLocale","AppProvider","children","locale","state","LanguageSwitcher","language","themeName","ThemeSwitcher","changeThemes","currentAppLocale","antd","messages"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAaN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,gBAAN,CAAuBC,QAAjC,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBV,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACI,aAAN,CAAoBC,YAA9B,CAAjC;AACA,QAAMC,gBAAgB,GAAGV,SAAS,CAACG,MAAD,CAAlC;AACA,sBACE;AAAgB,IAAA,MAAM,EAAEO,gBAAgB,CAACC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAED,gBAAgB,CAACP,MAD3B;AAEE,IAAA,QAAQ,EAAEO,gBAAgB,CAACE,QAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEb,MAAM,CAACQ,SAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CL,QAA1C,CAJF,CADF,CADF;AAUD","sourcesContent":["import React from 'react';\r\nimport { ConfigProvider } from 'antd';\r\nimport { IntlProvider } from 'react-intl';\r\nimport { useSelector } from 'react-redux';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport themes from '@iso/config/theme/theme.config';\r\nimport AppLocale from '@iso/config/translation';\r\n\r\nexport default function AppProvider({ children }) {\r\n  const { locale } = useSelector(state => state.LanguageSwitcher.language);\r\n  const { themeName } = useSelector(state => state.ThemeSwitcher.changeThemes);\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <ConfigProvider locale={currentAppLocale.antd}>\r\n      <IntlProvider\r\n        locale={currentAppLocale.locale}\r\n        messages={currentAppLocale.messages}\r\n      >\r\n        <ThemeProvider theme={themes[themeName]}>{children}</ThemeProvider>\r\n      </IntlProvider>\r\n    </ConfigProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}