{"ast":null,"code":"var _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\AdvancedUI\\\\Dropzone\\\\Dropzone.js\";\nimport React from 'react';\nimport Dropzone from '@iso/components/uielements/dropzone';\nimport { notification } from '@iso/components';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport DropzoneWrapper from './Dropzone.styles';\nexport default (() => {\n  const componentConfig = {\n    iconFiletypes: ['.jpg', '.png', '.gif'],\n    method: true,\n    showFiletypeIcon: true,\n    uploadMultiple: false,\n    maxFilesize: 2,\n    // MB\n    maxFiles: 2,\n    dictMaxFilesExceeded: 'You can only upload upto 2 images',\n    dictRemoveFile: 'Delete',\n    dictCancelUploadConfirmation: 'Are you sure to cancel upload?',\n    postUrl: 'no-url'\n  };\n  const djsConfig = {\n    autoProcessQueue: false\n  };\n  const eventHandlers = {\n    addedfile: file => notification('success', `${file.name} added`),\n    success: file => notification('success', `${file.name} successfully uploaded`),\n    error: error => notification('error', 'Server is not set in the demo')\n  };\n  return /*#__PURE__*/React.createElement(LayoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Dropzone\"), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ContentHolder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropzoneWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    config: componentConfig,\n    eventHandlers: eventHandlers,\n    djsConfig: djsConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })))));\n});","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/containers/AdvancedUI/Dropzone/Dropzone.js"],"names":["React","Dropzone","notification","PageHeader","Box","LayoutWrapper","ContentHolder","DropzoneWrapper","componentConfig","iconFiletypes","method","showFiletypeIcon","uploadMultiple","maxFilesize","maxFiles","dictMaxFilesExceeded","dictRemoveFile","dictCancelUploadConfirmation","postUrl","djsConfig","autoProcessQueue","eventHandlers","addedfile","file","name","success","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,gBAAe,MAAM;AACnB,QAAMC,eAAe,GAAG;AACtBC,IAAAA,aAAa,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CADO;AAEtBC,IAAAA,MAAM,EAAE,IAFc;AAGtBC,IAAAA,gBAAgB,EAAE,IAHI;AAItBC,IAAAA,cAAc,EAAE,KAJM;AAKtBC,IAAAA,WAAW,EAAE,CALS;AAKN;AAChBC,IAAAA,QAAQ,EAAE,CANY;AAOtBC,IAAAA,oBAAoB,EAAE,mCAPA;AAQtBC,IAAAA,cAAc,EAAE,QARM;AAStBC,IAAAA,4BAA4B,EAAE,gCATR;AAUtBC,IAAAA,OAAO,EAAE;AAVa,GAAxB;AAYA,QAAMC,SAAS,GAAG;AAAEC,IAAAA,gBAAgB,EAAE;AAApB,GAAlB;AACA,QAAMC,aAAa,GAAG;AACpBC,IAAAA,SAAS,EAAEC,IAAI,IAAIrB,YAAY,CAAC,SAAD,EAAa,GAAEqB,IAAI,CAACC,IAAK,QAAzB,CADX;AAEpBC,IAAAA,OAAO,EAAEF,IAAI,IACXrB,YAAY,CAAC,SAAD,EAAa,GAAEqB,IAAI,CAACC,IAAK,wBAAzB,CAHM;AAIpBE,IAAAA,KAAK,EAAEA,KAAK,IAAIxB,YAAY,CAAC,OAAD,EAAU,+BAAV;AAJR,GAAtB;AAMA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAEM,eADV;AAEE,IAAA,aAAa,EAAEa,aAFjB;AAGE,IAAA,SAAS,EAAEF,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAFF,CADF;AAgBD,CApCD","sourcesContent":["import React from 'react';\r\nimport Dropzone from '@iso/components/uielements/dropzone';\r\nimport { notification } from '@iso/components';\r\nimport PageHeader from '@iso/components/utility/pageHeader';\r\nimport Box from '@iso/components/utility/box';\r\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\r\nimport ContentHolder from '@iso/components/utility/contentHolder';\r\nimport DropzoneWrapper from './Dropzone.styles';\r\n\r\nexport default () => {\r\n  const componentConfig = {\r\n    iconFiletypes: ['.jpg', '.png', '.gif'],\r\n    method: true,\r\n    showFiletypeIcon: true,\r\n    uploadMultiple: false,\r\n    maxFilesize: 2, // MB\r\n    maxFiles: 2,\r\n    dictMaxFilesExceeded: 'You can only upload upto 2 images',\r\n    dictRemoveFile: 'Delete',\r\n    dictCancelUploadConfirmation: 'Are you sure to cancel upload?',\r\n    postUrl: 'no-url',\r\n  };\r\n  const djsConfig = { autoProcessQueue: false };\r\n  const eventHandlers = {\r\n    addedfile: file => notification('success', `${file.name} added`),\r\n    success: file =>\r\n      notification('success', `${file.name} successfully uploaded`),\r\n    error: error => notification('error', 'Server is not set in the demo'),\r\n  };\r\n  return (\r\n    <LayoutWrapper>\r\n      <PageHeader>Dropzone</PageHeader>\r\n      <Box>\r\n        <ContentHolder>\r\n          <DropzoneWrapper>\r\n            <Dropzone\r\n              config={componentConfig}\r\n              eventHandlers={eventHandlers}\r\n              djsConfig={djsConfig}\r\n            />\r\n          </DropzoneWrapper>\r\n        </ContentHolder>\r\n      </Box>\r\n    </LayoutWrapper>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}