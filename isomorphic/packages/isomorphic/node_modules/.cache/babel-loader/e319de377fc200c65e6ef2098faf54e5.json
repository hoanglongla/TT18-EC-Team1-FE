{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\components\\\\ScrumBoard\\\\RenderColumnForm\\\\RenderColumnForm.js\";\nimport React from 'react';\nimport { AntInput } from '../AntFields';\nimport { isRequired } from '../ValidateFields';\nimport { Form, Field } from 'formik';\nimport HeadingWithIcon from '../HeadingWithIcon/HeadingWithIcon';\nimport FolderIcon from \"./05-icon.svg\";\nimport RenderColumnWrapper from './RenderColumnForm.style';\n\nconst RenderColumnForm = props => {\n  const {\n    handleSubmit,\n    onCancel,\n    submitCount,\n    values\n  } = props;\n  return /*#__PURE__*/React.createElement(RenderColumnWrapper, {\n    className: \"render-form-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, !props.initials && /*#__PURE__*/React.createElement(HeadingWithIcon, {\n    iconSrc: FolderIcon,\n    heading: 'Column Name',\n    size: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: AntInput,\n    name: \"title\",\n    type: \"text\",\n    defaultValue: values.title,\n    placeholder: \"Column Name\",\n    validate: isRequired,\n    submitCount: submitCount,\n    hasFeedback: true,\n    size: \"large\",\n    formitem: {\n      colon: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_Button, {\n    type: \"default\",\n    onClick: onCancel,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      marginLeft: 10\n    },\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, props.initials && props.initials.editing ? 'Update Column' : 'Save')));\n};\n\nexport default RenderColumnForm;","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/components/ScrumBoard/RenderColumnForm/RenderColumnForm.js"],"names":["React","AntInput","isRequired","Form","Field","HeadingWithIcon","RenderColumnWrapper","RenderColumnForm","props","handleSubmit","onCancel","submitCount","values","initials","FolderIcon","title","colon","marginLeft","editing"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,QAA5B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;AAEA,OAAOC,mBAAP,MAAgC,0BAAhC;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,WAA1B;AAAuCC,IAAAA;AAAvC,MAAkDJ,KAAxD;AACA,sBACE,oBAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,qBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACA,KAAK,CAACK,QAAP,iBACC,oBAAC,eAAD;AACE,IAAA,OAAO,EAAEC,UADX;AAEE,IAAA,OAAO,EAAE,aAFX;AAGE,IAAA,IAAI,EAAE,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAQE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAER,QADb;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,YAAY,EAAEW,MAAM,CAACG,KAJvB;AAKE,IAAA,WAAW,EAAC,aALd;AAME,IAAA,QAAQ,EAAEb,UANZ;AAOE,IAAA,WAAW,EAAES,WAPf;AAQE,IAAA,WAAW,MARb;AASE,IAAA,IAAI,EAAC,OATP;AAUE,IAAA,QAAQ,EAAE;AACRK,MAAAA,KAAK,EAAE;AADC,KAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAeE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEN,QAAhC;AAA0C,IAAA,IAAI,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAkBE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,EAAC,QAFX;AAGE,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE;AAAd,KAHT;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGT,KAAK,CAACK,QAAN,IAAkBL,KAAK,CAACK,QAAN,CAAeK,OAAjC,GAA2C,eAA3C,GAA6D,MANhE,CAlBF,CARF,CADF;AAsCD,CAxCD;;AA0CA,eAAeX,gBAAf","sourcesContent":["import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { AntInput } from '../AntFields';\r\nimport { isRequired } from '../ValidateFields';\r\nimport { Form, Field } from 'formik';\r\nimport HeadingWithIcon from '../HeadingWithIcon/HeadingWithIcon';\r\nimport FolderIcon from './05-icon.svg';\r\nimport RenderColumnWrapper from './RenderColumnForm.style';\r\n\r\nconst RenderColumnForm = props => {\r\n  const { handleSubmit, onCancel, submitCount, values } = props;\r\n  return (\r\n    <RenderColumnWrapper className=\"render-form-wrapper\">\r\n      {!props.initials && (\r\n        <HeadingWithIcon\r\n          iconSrc={FolderIcon}\r\n          heading={'Column Name'}\r\n          size={'20px'}\r\n        />\r\n      )}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Field\r\n          component={AntInput}\r\n          name=\"title\"\r\n          type=\"text\"\r\n          defaultValue={values.title}\r\n          placeholder=\"Column Name\"\r\n          validate={isRequired}\r\n          submitCount={submitCount}\r\n          hasFeedback\r\n          size=\"large\"\r\n          formitem={{\r\n            colon: false,\r\n          }}\r\n        />\r\n        <Button type=\"default\" onClick={onCancel} size=\"large\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          style={{ marginLeft: 10 }}\r\n          size=\"large\"\r\n        >\r\n          {props.initials && props.initials.editing ? 'Update Column' : 'Save'}\r\n        </Button>\r\n      </Form>\r\n    </RenderColumnWrapper>\r\n  );\r\n};\r\n\r\nexport default RenderColumnForm;\r\n"]},"metadata":{},"sourceType":"module"}