{"ast":null,"code":"'use strict';\n\nvar forEach = require('lodash/forEach');\n\nvar filter = require('lodash/filter');\n\nvar map = require('lodash/map');\n\nvar isEmpty = require('lodash/isEmpty');\n\nvar indexOf = require('lodash/indexOf');\n\nfunction filterState(state, filters) {\n  var partialState = {};\n  var attributeFilters = filter(filters, function (f) {\n    return f.indexOf('attribute:') !== -1;\n  });\n  var attributes = map(attributeFilters, function (aF) {\n    return aF.split(':')[1];\n  });\n\n  if (indexOf(attributes, '*') === -1) {\n    forEach(attributes, function (attr) {\n      if (state.isConjunctiveFacet(attr) && state.isFacetRefined(attr)) {\n        if (!partialState.facetsRefinements) partialState.facetsRefinements = {};\n        partialState.facetsRefinements[attr] = state.facetsRefinements[attr];\n      }\n\n      if (state.isDisjunctiveFacet(attr) && state.isDisjunctiveFacetRefined(attr)) {\n        if (!partialState.disjunctiveFacetsRefinements) partialState.disjunctiveFacetsRefinements = {};\n        partialState.disjunctiveFacetsRefinements[attr] = state.disjunctiveFacetsRefinements[attr];\n      }\n\n      if (state.isHierarchicalFacet(attr) && state.isHierarchicalFacetRefined(attr)) {\n        if (!partialState.hierarchicalFacetsRefinements) partialState.hierarchicalFacetsRefinements = {};\n        partialState.hierarchicalFacetsRefinements[attr] = state.hierarchicalFacetsRefinements[attr];\n      }\n\n      var numericRefinements = state.getNumericRefinements(attr);\n\n      if (!isEmpty(numericRefinements)) {\n        if (!partialState.numericRefinements) partialState.numericRefinements = {};\n        partialState.numericRefinements[attr] = state.numericRefinements[attr];\n      }\n    });\n  } else {\n    if (!isEmpty(state.numericRefinements)) {\n      partialState.numericRefinements = state.numericRefinements;\n    }\n\n    if (!isEmpty(state.facetsRefinements)) partialState.facetsRefinements = state.facetsRefinements;\n\n    if (!isEmpty(state.disjunctiveFacetsRefinements)) {\n      partialState.disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements;\n    }\n\n    if (!isEmpty(state.hierarchicalFacetsRefinements)) {\n      partialState.hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements;\n    }\n  }\n\n  var searchParameters = filter(filters, function (f) {\n    return f.indexOf('attribute:') === -1;\n  });\n  forEach(searchParameters, function (parameterKey) {\n    partialState[parameterKey] = state[parameterKey];\n  });\n  return partialState;\n}\n\nmodule.exports = filterState;","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/node_modules/algoliasearch-helper/src/SearchParameters/filterState.js"],"names":["forEach","require","filter","map","isEmpty","indexOf","filterState","state","filters","partialState","attributeFilters","f","attributes","aF","split","attr","isConjunctiveFacet","isFacetRefined","facetsRefinements","isDisjunctiveFacet","isDisjunctiveFacetRefined","disjunctiveFacetsRefinements","isHierarchicalFacet","isHierarchicalFacetRefined","hierarchicalFacetsRefinements","numericRefinements","getNumericRefinements","searchParameters","parameterKey","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar forEach = require('lodash/forEach');\nvar filter = require('lodash/filter');\nvar map = require('lodash/map');\nvar isEmpty = require('lodash/isEmpty');\nvar indexOf = require('lodash/indexOf');\n\nfunction filterState(state, filters) {\n  var partialState = {};\n  var attributeFilters = filter(filters, function(f) { return f.indexOf('attribute:') !== -1; });\n  var attributes = map(attributeFilters, function(aF) { return aF.split(':')[1]; });\n\n  if (indexOf(attributes, '*') === -1) {\n    forEach(attributes, function(attr) {\n      if (state.isConjunctiveFacet(attr) && state.isFacetRefined(attr)) {\n        if (!partialState.facetsRefinements) partialState.facetsRefinements = {};\n        partialState.facetsRefinements[attr] = state.facetsRefinements[attr];\n      }\n\n      if (state.isDisjunctiveFacet(attr) && state.isDisjunctiveFacetRefined(attr)) {\n        if (!partialState.disjunctiveFacetsRefinements) partialState.disjunctiveFacetsRefinements = {};\n        partialState.disjunctiveFacetsRefinements[attr] = state.disjunctiveFacetsRefinements[attr];\n      }\n\n      if (state.isHierarchicalFacet(attr) && state.isHierarchicalFacetRefined(attr)) {\n        if (!partialState.hierarchicalFacetsRefinements) partialState.hierarchicalFacetsRefinements = {};\n        partialState.hierarchicalFacetsRefinements[attr] = state.hierarchicalFacetsRefinements[attr];\n      }\n\n      var numericRefinements = state.getNumericRefinements(attr);\n      if (!isEmpty(numericRefinements)) {\n        if (!partialState.numericRefinements) partialState.numericRefinements = {};\n        partialState.numericRefinements[attr] = state.numericRefinements[attr];\n      }\n    });\n  } else {\n    if (!isEmpty(state.numericRefinements)) {\n      partialState.numericRefinements = state.numericRefinements;\n    }\n    if (!isEmpty(state.facetsRefinements)) partialState.facetsRefinements = state.facetsRefinements;\n    if (!isEmpty(state.disjunctiveFacetsRefinements)) {\n      partialState.disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements;\n    }\n    if (!isEmpty(state.hierarchicalFacetsRefinements)) {\n      partialState.hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements;\n    }\n  }\n\n  var searchParameters = filter(\n    filters,\n    function(f) {\n      return f.indexOf('attribute:') === -1;\n    }\n  );\n\n  forEach(\n    searchParameters,\n    function(parameterKey) {\n      partialState[parameterKey] = state[parameterKey];\n    }\n  );\n\n  return partialState;\n}\n\nmodule.exports = filterState;\n"]},"metadata":{},"sourceType":"script"}