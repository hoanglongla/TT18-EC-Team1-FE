{"ast":null,"code":"var _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\CustomerSinglePage\\\\CustomerSinglePage.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport EditInvoice from './EditInvoice';\nimport ViewInvoice from './ViewInvoice';\nimport Loader from '@iso/components/utility/loader';\nimport invoiceActions from '@iso/redux/invoice/actions';\nconst {\n  initData,\n  selectCurrentInvoice,\n  toggleView\n} = invoiceActions;\nexport default function SingleInvoice() {\n  const invoices = useSelector(state => state.Invoices);\n  const dispatch = useDispatch();\n  const match = useRouteMatch();\n  const {\n    invoiceId\n  } = useParams();\n  const {\n    initialInvoices,\n    currentInvoice,\n    enableEditView\n  } = invoices;\n  React.useEffect(() => {\n    if (!initialInvoices) {\n      dispatch(initData());\n    }\n\n    toggleCreatedInvoice();\n  }); // componentWillReceiveProps(nextProps) {\n  //   this.toggleCreatedInvoice(nextProps);\n  // }\n\n  function toggleCreatedInvoice() {\n    if (initialInvoices && currentInvoice.id !== invoiceId) {\n      dispatch(selectCurrentInvoice(invoiceId));\n    }\n  }\n\n  const redirectPath = match.url.replace(invoiceId, '');\n\n  if (currentInvoice.id !== invoiceId) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  } else if (enableEditView) {\n    return /*#__PURE__*/React.createElement(EditInvoice, Object.assign({\n      toggleView: data => dispatch(toggleView(data))\n    }, invoices, {\n      redirectPath: redirectPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(ViewInvoice, Object.assign({}, invoices, {\n      toggleView: data => dispatch(toggleView(data)),\n      redirectPath: redirectPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/CustomerSinglePage/CustomerSinglePage.js"],"names":["React","useDispatch","useSelector","useRouteMatch","useParams","EditInvoice","ViewInvoice","Loader","invoiceActions","initData","selectCurrentInvoice","toggleView","SingleInvoice","invoices","state","Invoices","dispatch","match","invoiceId","initialInvoices","currentInvoice","enableEditView","useEffect","toggleCreatedInvoice","id","redirectPath","url","replace","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,kBAAzC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,oBAAZ;AAAkCC,EAAAA;AAAlC,IAAiDH,cAAvD;AACA,eAAe,SAASI,aAAT,GAAyB;AACtC,QAAMC,QAAQ,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA5B;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,KAAK,GAAGd,aAAa,EAA3B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAgBd,SAAS,EAA/B;AACA,QAAM;AAAEe,IAAAA,eAAF;AAAmBC,IAAAA,cAAnB;AAAmCC,IAAAA;AAAnC,MAAsDR,QAA5D;AACAb,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACH,eAAL,EAAsB;AACpBH,MAAAA,QAAQ,CAACP,QAAQ,EAAT,CAAR;AACD;;AACDc,IAAAA,oBAAoB;AACrB,GALD,EANsC,CAYtC;AACA;AACA;;AACA,WAASA,oBAAT,GAAgC;AAC9B,QAAIJ,eAAe,IAAIC,cAAc,CAACI,EAAf,KAAsBN,SAA7C,EAAwD;AACtDF,MAAAA,QAAQ,CAACN,oBAAoB,CAACQ,SAAD,CAArB,CAAR;AACD;AACF;;AACD,QAAMO,YAAY,GAAGR,KAAK,CAACS,GAAN,CAAUC,OAAV,CAAkBT,SAAlB,EAA6B,EAA7B,CAArB;;AACA,MAAIE,cAAc,CAACI,EAAf,KAAsBN,SAA1B,EAAqC;AACnC,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO,IAAIG,cAAJ,EAAoB;AACzB,wBACE,oBAAC,WAAD;AACE,MAAA,UAAU,EAAEO,IAAI,IAAIZ,QAAQ,CAACL,UAAU,CAACiB,IAAD,CAAX;AAD9B,OAEMf,QAFN;AAGE,MAAA,YAAY,EAAEY,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAOD,GARM,MAQA;AACL,wBACE,oBAAC,WAAD,oBACMZ,QADN;AAEE,MAAA,UAAU,EAAEe,IAAI,IAAIZ,QAAQ,CAACL,UAAU,CAACiB,IAAD,CAAX,CAF9B;AAGE,MAAA,YAAY,EAAEH,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAOD;AACF","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouteMatch, useParams } from 'react-router-dom';\r\nimport EditInvoice from './EditInvoice';\r\nimport ViewInvoice from './ViewInvoice';\r\nimport Loader from '@iso/components/utility/loader';\r\nimport invoiceActions from '@iso/redux/invoice/actions';\r\nconst { initData, selectCurrentInvoice, toggleView } = invoiceActions;\r\nexport default function SingleInvoice() {\r\n  const invoices = useSelector(state => state.Invoices);\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch();\r\n  const { invoiceId } = useParams();\r\n  const { initialInvoices, currentInvoice, enableEditView } = invoices;\r\n  React.useEffect(() => {\r\n    if (!initialInvoices) {\r\n      dispatch(initData());\r\n    }\r\n    toggleCreatedInvoice();\r\n  });\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   this.toggleCreatedInvoice(nextProps);\r\n  // }\r\n  function toggleCreatedInvoice() {\r\n    if (initialInvoices && currentInvoice.id !== invoiceId) {\r\n      dispatch(selectCurrentInvoice(invoiceId));\r\n    }\r\n  }\r\n  const redirectPath = match.url.replace(invoiceId, '');\r\n  if (currentInvoice.id !== invoiceId) {\r\n    return <Loader />;\r\n  } else if (enableEditView) {\r\n    return (\r\n      <EditInvoice\r\n        toggleView={data => dispatch(toggleView(data))}\r\n        {...invoices}\r\n        redirectPath={redirectPath}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <ViewInvoice\r\n        {...invoices}\r\n        toggleView={data => dispatch(toggleView(data))}\r\n        redirectPath={redirectPath}\r\n      />\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}