{"ast":null,"code":"var _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\ScrumBoard\\\\Board\\\\BoardList\\\\BoardList.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\nimport NoBoardFounds from '../BoardNotFound/BoardNotFound';\nimport BoardListCard from './BoardListCard/BoardListCard';\nimport AppLayout from '../../AppLayout/AppLayout';\nimport { filterProjects } from '@iso/lib/helpers/filterProjects';\nimport { Table } from './BoardList.style';\n\nfunction BoardLists({\n  boards,\n  deleteBoardWatcher,\n  editBoard,\n  history,\n  match,\n  boardsRenderWatcher\n}) {\n  useEffect(() => {\n    boardsRenderWatcher();\n  }, [boardsRenderWatcher]);\n\n  const handleEdit = board => {\n    editBoard(board);\n    history.push(`/dashboard/scrum-board/${board.id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(AppLayout, {\n    history: history,\n    match: match,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, !isEmpty(boards) ? /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, Object.values(boards).map(board => /*#__PURE__*/React.createElement(BoardListCard, {\n    key: board.id,\n    item: board,\n    onDelete: () => deleteBoardWatcher(board.id),\n    onEdit: () => handleEdit(board),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(NoBoardFounds, {\n    history: history,\n    match: match,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default connect(state => ({\n  boards: filterProjects(state.scrumBoard.boards, state.scrumBoard.searchText)\n}), { ...scrumBoardActions\n})(BoardLists);","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/containers/ScrumBoard/Board/BoardList/BoardList.js"],"names":["React","useEffect","connect","isEmpty","scrumBoardActions","NoBoardFounds","BoardListCard","AppLayout","filterProjects","Table","BoardLists","boards","deleteBoardWatcher","editBoard","history","match","boardsRenderWatcher","handleEdit","board","push","id","Object","values","map","state","scrumBoard","searchText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AACA,SAASC,UAAT,CAAoB;AAClBC,EAAAA,MADkB;AAElBC,EAAAA,kBAFkB;AAGlBC,EAAAA,SAHkB;AAIlBC,EAAAA,OAJkB;AAKlBC,EAAAA,KALkB;AAMlBC,EAAAA;AANkB,CAApB,EAOG;AACDf,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,CAACA,mBAAD,CAFM,CAAT;;AAIA,QAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1BL,IAAAA,SAAS,CAACK,KAAD,CAAT;AACAJ,IAAAA,OAAO,CAACK,IAAR,CAAc,0BAAyBD,KAAK,CAACE,EAAG,EAAhD;AACD,GAHD;;AAKA,sBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEN,OAApB;AAA6B,IAAA,KAAK,EAAEC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACZ,OAAO,CAACQ,MAAD,CAAR,gBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,MAAM,CAACC,MAAP,CAAcX,MAAd,EAAsBY,GAAtB,CAA0BL,KAAK,iBAC9B,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACE,EADb;AAEE,IAAA,IAAI,EAAEF,KAFR;AAGE,IAAA,QAAQ,EAAE,MAAMN,kBAAkB,CAACM,KAAK,CAACE,EAAP,CAHpC;AAIE,IAAA,MAAM,EAAE,MAAMH,UAAU,CAACC,KAAD,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADD,gBAYC,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEJ,OAAxB;AAAiC,IAAA,KAAK,EAAEC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADF;AAkBD;;AAED,eAAeb,OAAO,CACpBsB,KAAK,KAAK;AACRb,EAAAA,MAAM,EAAEH,cAAc,CACpBgB,KAAK,CAACC,UAAN,CAAiBd,MADG,EAEpBa,KAAK,CAACC,UAAN,CAAiBC,UAFG;AADd,CAAL,CADe,EAOpB,EAAE,GAAGtB;AAAL,CAPoB,CAAP,CAQbM,UARa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\r\nimport NoBoardFounds from '../BoardNotFound/BoardNotFound';\r\nimport BoardListCard from './BoardListCard/BoardListCard';\r\nimport AppLayout from '../../AppLayout/AppLayout';\r\nimport { filterProjects } from '@iso/lib/helpers/filterProjects';\r\nimport { Table } from './BoardList.style';\r\nfunction BoardLists({\r\n  boards,\r\n  deleteBoardWatcher,\r\n  editBoard,\r\n  history,\r\n  match,\r\n  boardsRenderWatcher,\r\n}) {\r\n  useEffect(() => {\r\n    boardsRenderWatcher();\r\n  }, [boardsRenderWatcher]);\r\n\r\n  const handleEdit = board => {\r\n    editBoard(board);\r\n    history.push(`/dashboard/scrum-board/${board.id}`);\r\n  };\r\n\r\n  return (\r\n    <AppLayout history={history} match={match}>\r\n      {!isEmpty(boards) ? (\r\n        <Table>\r\n          {Object.values(boards).map(board => (\r\n            <BoardListCard\r\n              key={board.id}\r\n              item={board}\r\n              onDelete={() => deleteBoardWatcher(board.id)}\r\n              onEdit={() => handleEdit(board)}\r\n            />\r\n          ))}\r\n        </Table>\r\n      ) : (\r\n        <NoBoardFounds history={history} match={match} />\r\n      )}\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    boards: filterProjects(\r\n      state.scrumBoard.boards,\r\n      state.scrumBoard.searchText\r\n    ),\r\n  }),\r\n  { ...scrumBoardActions }\r\n)(BoardLists);\r\n"]},"metadata":{},"sourceType":"module"}