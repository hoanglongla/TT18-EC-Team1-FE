{"ast":null,"code":"var remoteFileObjToLocal = require('@uppy/utils/lib/remoteFileObjToLocal');\n\nmodule.exports = /*#__PURE__*/function () {\n  function SharedHandler(plugin) {\n    this.plugin = plugin;\n    this.filterItems = this.filterItems.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    this.isChecked = this.isChecked.bind(this);\n    this.loaderWrapper = this.loaderWrapper.bind(this);\n  }\n\n  var _proto = SharedHandler.prototype;\n\n  _proto.filterItems = function filterItems(items) {\n    var state = this.plugin.getPluginState();\n\n    if (!state.filterInput || state.filterInput === '') {\n      return items;\n    }\n\n    return items.filter(function (folder) {\n      return folder.name.toLowerCase().indexOf(state.filterInput.toLowerCase()) !== -1;\n    });\n  }\n  /**\n   * Toggles file/folder checkbox to on/off state while updating files list.\n   *\n   * Note that some extra complexity comes from supporting shift+click to\n   * toggle multiple checkboxes at once, which is done by getting all files\n   * in between last checked file and current one.\n   */\n  ;\n\n  _proto.toggleCheckbox = function toggleCheckbox(e, file) {\n    var _this = this;\n\n    e.stopPropagation();\n    e.preventDefault();\n    e.currentTarget.focus();\n\n    var _this$plugin$getPlugi = this.plugin.getPluginState(),\n        folders = _this$plugin$getPlugi.folders,\n        files = _this$plugin$getPlugi.files;\n\n    var items = this.filterItems(folders.concat(files)); // Shift-clicking selects a single consecutive list of items\n    // starting at the previous click and deselects everything else.\n\n    if (this.lastCheckbox && e.shiftKey) {\n      var _currentSelection;\n\n      var prevIndex = items.indexOf(this.lastCheckbox);\n      var currentIndex = items.indexOf(file);\n\n      if (prevIndex < currentIndex) {\n        _currentSelection = items.slice(prevIndex, currentIndex + 1);\n      } else {\n        _currentSelection = items.slice(currentIndex, prevIndex + 1);\n      } // Check restrictions on each file in currentSelection,\n      // reduce it to only contain files that pass restrictions\n\n\n      _currentSelection = _currentSelection.reduce(function (reducedCurrentSelection, item) {\n        var uppy = _this.plugin.uppy;\n        var validatedRestrictions = uppy.validateRestrictions(remoteFileObjToLocal(item), [].concat(uppy.getFiles(), reducedCurrentSelection));\n\n        if (!validatedRestrictions.result) {\n          uppy.info({\n            message: validatedRestrictions.reason\n          }, 'error', uppy.opts.infoTimeout);\n          return reducedCurrentSelection;\n        }\n\n        return [].concat(reducedCurrentSelection, [item]);\n      });\n      this.plugin.setPluginState({\n        currentSelection: _currentSelection\n      });\n      return;\n    }\n\n    this.lastCheckbox = file;\n\n    var _this$plugin$getPlugi2 = this.plugin.getPluginState(),\n        currentSelection = _this$plugin$getPlugi2.currentSelection;\n\n    if (this.isChecked(file)) {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.filter(function (item) {\n          return item.id !== file.id;\n        })\n      });\n    } else {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.concat([file])\n      });\n    }\n  };\n\n  _proto.isChecked = function isChecked(file) {\n    var _this$plugin$getPlugi3 = this.plugin.getPluginState(),\n        currentSelection = _this$plugin$getPlugi3.currentSelection; // comparing id instead of the file object, because the reference to the object\n    // changes when we switch folders, and the file list is updated\n\n\n    return currentSelection.some(function (item) {\n      return item.id === file.id;\n    });\n  };\n\n  _proto.loaderWrapper = function loaderWrapper(promise, then, catch_) {\n    var _this2 = this;\n\n    promise.then(function (result) {\n      _this2.plugin.setPluginState({\n        loading: false\n      });\n\n      then(result);\n    }).catch(function (err) {\n      _this2.plugin.setPluginState({\n        loading: false\n      });\n\n      catch_(err);\n    });\n    this.plugin.setPluginState({\n      loading: true\n    });\n  };\n\n  return SharedHandler;\n}();","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/@uppy/provider-views/lib/SharedHandler.js"],"names":["remoteFileObjToLocal","require","module","exports","SharedHandler","plugin","filterItems","bind","toggleCheckbox","isChecked","loaderWrapper","_proto","prototype","items","state","getPluginState","filterInput","filter","folder","name","toLowerCase","indexOf","e","file","_this","stopPropagation","preventDefault","currentTarget","focus","_this$plugin$getPlugi","folders","files","concat","lastCheckbox","shiftKey","_currentSelection","prevIndex","currentIndex","slice","reduce","reducedCurrentSelection","item","uppy","validatedRestrictions","validateRestrictions","getFiles","result","info","message","reason","opts","infoTimeout","setPluginState","currentSelection","_this$plugin$getPlugi2","id","_this$plugin$getPlugi3","some","promise","then","catch_","_this2","loading","catch","err"],"mappings":"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","sourcesContent":["var remoteFileObjToLocal = require('@uppy/utils/lib/remoteFileObjToLocal');\n\nmodule.exports = /*#__PURE__*/function () {\n  function SharedHandler(plugin) {\n    this.plugin = plugin;\n    this.filterItems = this.filterItems.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    this.isChecked = this.isChecked.bind(this);\n    this.loaderWrapper = this.loaderWrapper.bind(this);\n  }\n\n  var _proto = SharedHandler.prototype;\n\n  _proto.filterItems = function filterItems(items) {\n    var state = this.plugin.getPluginState();\n\n    if (!state.filterInput || state.filterInput === '') {\n      return items;\n    }\n\n    return items.filter(function (folder) {\n      return folder.name.toLowerCase().indexOf(state.filterInput.toLowerCase()) !== -1;\n    });\n  }\n  /**\n   * Toggles file/folder checkbox to on/off state while updating files list.\n   *\n   * Note that some extra complexity comes from supporting shift+click to\n   * toggle multiple checkboxes at once, which is done by getting all files\n   * in between last checked file and current one.\n   */\n  ;\n\n  _proto.toggleCheckbox = function toggleCheckbox(e, file) {\n    var _this = this;\n\n    e.stopPropagation();\n    e.preventDefault();\n    e.currentTarget.focus();\n\n    var _this$plugin$getPlugi = this.plugin.getPluginState(),\n        folders = _this$plugin$getPlugi.folders,\n        files = _this$plugin$getPlugi.files;\n\n    var items = this.filterItems(folders.concat(files)); // Shift-clicking selects a single consecutive list of items\n    // starting at the previous click and deselects everything else.\n\n    if (this.lastCheckbox && e.shiftKey) {\n      var _currentSelection;\n\n      var prevIndex = items.indexOf(this.lastCheckbox);\n      var currentIndex = items.indexOf(file);\n\n      if (prevIndex < currentIndex) {\n        _currentSelection = items.slice(prevIndex, currentIndex + 1);\n      } else {\n        _currentSelection = items.slice(currentIndex, prevIndex + 1);\n      } // Check restrictions on each file in currentSelection,\n      // reduce it to only contain files that pass restrictions\n\n\n      _currentSelection = _currentSelection.reduce(function (reducedCurrentSelection, item) {\n        var uppy = _this.plugin.uppy;\n        var validatedRestrictions = uppy.validateRestrictions(remoteFileObjToLocal(item), [].concat(uppy.getFiles(), reducedCurrentSelection));\n\n        if (!validatedRestrictions.result) {\n          uppy.info({\n            message: validatedRestrictions.reason\n          }, 'error', uppy.opts.infoTimeout);\n          return reducedCurrentSelection;\n        }\n\n        return [].concat(reducedCurrentSelection, [item]);\n      });\n      this.plugin.setPluginState({\n        currentSelection: _currentSelection\n      });\n      return;\n    }\n\n    this.lastCheckbox = file;\n\n    var _this$plugin$getPlugi2 = this.plugin.getPluginState(),\n        currentSelection = _this$plugin$getPlugi2.currentSelection;\n\n    if (this.isChecked(file)) {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.filter(function (item) {\n          return item.id !== file.id;\n        })\n      });\n    } else {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.concat([file])\n      });\n    }\n  };\n\n  _proto.isChecked = function isChecked(file) {\n    var _this$plugin$getPlugi3 = this.plugin.getPluginState(),\n        currentSelection = _this$plugin$getPlugi3.currentSelection; // comparing id instead of the file object, because the reference to the object\n    // changes when we switch folders, and the file list is updated\n\n\n    return currentSelection.some(function (item) {\n      return item.id === file.id;\n    });\n  };\n\n  _proto.loaderWrapper = function loaderWrapper(promise, then, catch_) {\n    var _this2 = this;\n\n    promise.then(function (result) {\n      _this2.plugin.setPluginState({\n        loading: false\n      });\n\n      then(result);\n    }).catch(function (err) {\n      _this2.plugin.setPluginState({\n        loading: false\n      });\n\n      catch_(err);\n    });\n    this.plugin.setPluginState({\n      loading: true\n    });\n  };\n\n  return SharedHandler;\n}();"]},"metadata":{},"sourceType":"script"}