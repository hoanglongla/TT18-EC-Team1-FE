{"ast":null,"code":"var _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\Todo\\\\TodoList.js\";\nimport React from 'react';\nimport Button from '@iso/components/uielements/button';\nimport Checkbox from '@iso/components/uielements/checkbox';\nimport { RadioButton, RadioGroup } from '@iso/components/uielements/radio';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport { notification, ColorChoser, EditableComponent } from '@iso/components/';\nimport { TodoListWrapper } from './Todo.styles';\n\nfunction filterTodos(todos, search) {\n  const selectedTodos = search === 'All' ? todos : todos.filter(todo => todo.completed === (search === 'Completed'));\n  let completed = 0;\n  selectedTodos.forEach(todo => {\n    if (todo.completed) {\n      completed += 1;\n    }\n  });\n  return {\n    selectedTodos,\n    completed\n  };\n}\n\nexport default function TodoList(props) {\n  const [search, setSearch] = React.useState('All');\n\n  function singleTodo(todo) {\n    const {\n      deleteTodo,\n      colors\n    } = props;\n\n    const onDelete = () => deleteTodo(todo.id);\n\n    const updateTodo = (key, value) => {\n      todo[key] = value;\n      props.edittodo(todo);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"isoTodoList\",\n      key: todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColorChoser, {\n      colors: colors,\n      changeColor: value => updateTodo('color', value),\n      seectedColor: todo.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"isoTodoCheck\",\n      checked: todo.completed,\n      onChange: () => updateTodo('completed', !todo.completed),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"isoTodoContentWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"isoTodoDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, timeDifference(todo.createTime)), /*#__PURE__*/React.createElement(EditableComponent, {\n      value: todo.todo,\n      itemKey: \"todo\",\n      onChange: updateTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"isoTodoDelete\",\n      icon: \"close\",\n      type: \"default\",\n      onClick: onDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function onChange(event) {\n    setSearch(event.target.value);\n  }\n\n  const {\n    selectedTodos,\n    completed\n  } = filterTodos(props.todos, search);\n  return /*#__PURE__*/React.createElement(TodoListWrapper, {\n    className: \"isoTodoContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoTodoStatusTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    value: search,\n    onChange: onChange,\n    className: \"isoTodoStatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RadioButton, {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(RadioButton, {\n    value: \"Uncompleted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Uncompleted\"), /*#__PURE__*/React.createElement(RadioButton, {\n    value: \"Completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Completed\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoTodoListWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, selectedTodos.length > 0 ? selectedTodos.map(note => singleTodo(note)) : /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"isoNoTodoFound\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"No todo found\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoTodoFooter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    className: \"isoTodoCheckAll\",\n    checked: completed === selectedTodos.length,\n    disabled: completed === selectedTodos.length,\n    onChange: () => {\n      notification('success', 'All Todos are Completed!!!', '');\n      props.allCompleted();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Mark all as completed\"), selectedTodos.length > 0 && completed === selectedTodos.length ? /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"isoDeleteAll\",\n    onClick: () => {\n      notification('success', 'All Completed Todos are Deleted', '');\n      props.deleteCompleted();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, `Delete Completed (${completed})`) : ''));\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/containers/Todo/TodoList.js"],"names":["React","Button","Checkbox","RadioButton","RadioGroup","timeDifference","notification","ColorChoser","EditableComponent","TodoListWrapper","filterTodos","todos","search","selectedTodos","filter","todo","completed","forEach","TodoList","props","setSearch","useState","singleTodo","deleteTodo","colors","onDelete","id","updateTodo","key","value","edittodo","color","createTime","onChange","event","target","length","map","note","allCompleted","deleteCompleted"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@iso/components/uielements/button';\r\nimport Checkbox from '@iso/components/uielements/checkbox';\r\nimport { RadioButton, RadioGroup } from '@iso/components/uielements/radio';\r\nimport { timeDifference } from '@iso/lib/helpers/utility';\r\nimport { notification, ColorChoser, EditableComponent } from '@iso/components/';\r\nimport { TodoListWrapper } from './Todo.styles';\r\n\r\nfunction filterTodos(todos, search) {\r\n  const selectedTodos =\r\n    search === 'All'\r\n      ? todos\r\n      : todos.filter(todo => todo.completed === (search === 'Completed'));\r\n  let completed = 0;\r\n  selectedTodos.forEach(todo => {\r\n    if (todo.completed) {\r\n      completed += 1;\r\n    }\r\n  });\r\n  return { selectedTodos, completed };\r\n}\r\nexport default function TodoList(props) {\r\n  const [search, setSearch] = React.useState('All');\r\n\r\n  function singleTodo(todo) {\r\n    const { deleteTodo, colors } = props;\r\n    const onDelete = () => deleteTodo(todo.id);\r\n    const updateTodo = (key, value) => {\r\n      todo[key] = value;\r\n      props.edittodo(todo);\r\n    };\r\n    return (\r\n      <div className=\"isoTodoList\" key={todo.id}>\r\n        <ColorChoser\r\n          colors={colors}\r\n          changeColor={value => updateTodo('color', value)}\r\n          seectedColor={todo.color}\r\n        />\r\n        <Checkbox\r\n          className=\"isoTodoCheck\"\r\n          checked={todo.completed}\r\n          onChange={() => updateTodo('completed', !todo.completed)}\r\n        />\r\n        <div className=\"isoTodoContentWrapper\">\r\n          <span className=\"isoTodoDate\">{timeDifference(todo.createTime)}</span>\r\n          <EditableComponent\r\n            value={todo.todo}\r\n            itemKey=\"todo\"\r\n            onChange={updateTodo}\r\n          />\r\n        </div>\r\n        <Button\r\n          className=\"isoTodoDelete\"\r\n          icon=\"close\"\r\n          type=\"default\"\r\n          onClick={onDelete}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  function onChange(event) {\r\n    setSearch(event.target.value);\r\n  }\r\n  const { selectedTodos, completed } = filterTodos(props.todos, search);\r\n  return (\r\n    <TodoListWrapper className=\"isoTodoContent\">\r\n      <div className=\"isoTodoStatusTab\">\r\n        <RadioGroup\r\n          value={search}\r\n          onChange={onChange}\r\n          className=\"isoTodoStatus\"\r\n        >\r\n          <RadioButton value=\"All\">All</RadioButton>\r\n          <RadioButton value=\"Uncompleted\">Uncompleted</RadioButton>\r\n          <RadioButton value=\"Completed\">Completed</RadioButton>\r\n        </RadioGroup>\r\n      </div>\r\n\r\n      <div className=\"isoTodoListWrapper\">\r\n        {selectedTodos.length > 0 ? (\r\n          selectedTodos.map(note => singleTodo(note))\r\n        ) : (\r\n          <h3 className=\"isoNoTodoFound\">No todo found</h3>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"isoTodoFooter\">\r\n        <Checkbox\r\n          className=\"isoTodoCheckAll\"\r\n          checked={completed === selectedTodos.length}\r\n          disabled={completed === selectedTodos.length}\r\n          onChange={() => {\r\n            notification('success', 'All Todos are Completed!!!', '');\r\n            props.allCompleted();\r\n          }}\r\n        >\r\n          Mark all as completed\r\n        </Checkbox>\r\n\r\n        {selectedTodos.length > 0 && completed === selectedTodos.length ? (\r\n          <Button\r\n            type=\"button\"\r\n            className=\"isoDeleteAll\"\r\n            onClick={() => {\r\n              notification('success', 'All Completed Todos are Deleted', '');\r\n              props.deleteCompleted();\r\n            }}\r\n          >\r\n            {`Delete Completed (${completed})`}\r\n          </Button>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    </TodoListWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}