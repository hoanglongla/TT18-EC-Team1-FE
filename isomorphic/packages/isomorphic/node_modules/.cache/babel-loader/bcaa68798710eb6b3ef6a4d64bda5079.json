{"ast":null,"code":"import \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\BookingManagement\\\\TableViews\\\\AllBookingView.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport TableWrapper from \"../BookingManagement.style\";\nimport categories from '../../Tables/category';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport _ from 'lodash';\nimport { StatusTag } from '../../Invoice/Invoice.styles';\nexport default function () {\n  const invoices = useSelector(state => state.Invoices);\n  const dispatch = useDispatch();\n  const match = useRouteMatch();\n  const {\n    invoiceId\n  } = useParams();\n  const {\n    initialInvoices,\n    currentInvoice,\n    enableEditView\n  } = invoices;\n  const [visibleInfo, setVisibleInfo] = React.useState(false);\n\n  const showDrawerInfo = () => {\n    setVisibleInfo(true);\n  };\n\n  const handleCancelDrwerInfo = () => {\n    setVisibleInfo(false);\n  };\n\n  const [visibleDeleteModal, setVisibleDeleteModal] = React.useState(false);\n\n  const showModalDelete = () => {\n    setVisibleDeleteModal(true);\n  };\n\n  const handleOkDeleteModal = () => {\n    setModalText('The modal will be closed after two seconds');\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisibleDeleteModal(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancelDeleteModal = () => {\n    console.log('Clicked cancel button');\n    setVisibleDeleteModal(false);\n  }; //\n\n\n  const [visible, setVisible] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [modalText, setModalText] = React.useState('Content of the modal');\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setModalText('The modal will be closed after two seconds');\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  const columns = [{\n    title: 'Mã lịch dịch vụ',\n    dataIndex: 'username',\n    key: 'name',\n    width: \"20%\"\n  }, {\n    title: 'Tên Khách hàng',\n    dataIndex: 'email',\n    key: 'email',\n    width: \"20%\",\n    ellipsis: true\n  }, {\n    title: 'Ngày làm',\n    dataIndex: 'email',\n    key: 'email',\n    width: \"20%\",\n    ellipsis: true\n  }, {\n    title: 'Tình trạng',\n    dataIndex: 'bookingStatus',\n    rowKey: 'bookingStatus',\n    width: '13%',\n    render: (text, orderStatus) => {\n      let className;\n\n      if (text === 'shipped' || text === 'Shipped' || text === 'SHIPPED') {\n        className = 'shipped';\n      } else if (text === 'delivered' || text === 'Delivered' || text === 'DELIVERED') {\n        className = 'delivered';\n      } else if (text === 'pending' || text === 'Pending' || text === 'PENDING') {\n        className = 'pending';\n      }\n\n      return /*#__PURE__*/React.createElement(StatusTag, {\n        className: \"delivered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 16\n        }\n      }, \"Ho\\xE0n th\\xE0nh\");\n    }\n  }, {\n    title: '',\n    dataIndex: 'action',\n    width: '15%',\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, record.name === 'initial' && /*#__PURE__*/React.createElement(_Button, {\n      icon: \"plus\",\n      shape: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 43\n      }\n    }), record.name !== 'initial' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      to: `//${record.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      icon: \"search\",\n      shape: \"circle\",\n      style: {\n        backgroundColor: \"#008CBA\",\n        marginRight: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      icon: \"delete\",\n      shape: \"circle\",\n      type: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    })))\n  }];\n  const myColTitleStyle = {\n    textOverflow: 'ellipsis',\n    overflow: \"hidden\",\n    whiteSpace: 'nowrap'\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    onClick: showModal,\n    style: {\n      marginBottom: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, \"Th\\xEAm th\\u1EC3 lo\\u1EA1i m\\u1EDBi +\"), /*#__PURE__*/React.createElement(TableWrapper, {\n    dataSource: categories.data.data,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(_Modal, {\n    title: \"Th\\xEAm th\\u1EC3 lo\\u1EA1i\",\n    visible: visible,\n    confirmLoading: confirmLoading,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    okText: \"Th\\xEAm\",\n    cancelText: \"H\\u1EE7y\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/BookingManagement/TableViews/AllBookingView.js"],"names":["React","useState","useDispatch","useSelector","useParams","TableWrapper","categories","Link","useRouteMatch","_","StatusTag","invoices","state","Invoices","dispatch","match","invoiceId","initialInvoices","currentInvoice","enableEditView","visibleInfo","setVisibleInfo","showDrawerInfo","handleCancelDrwerInfo","visibleDeleteModal","setVisibleDeleteModal","showModalDelete","handleOkDeleteModal","setModalText","setConfirmLoading","setTimeout","handleCancelDeleteModal","console","log","visible","setVisible","confirmLoading","modalText","showModal","handleOk","handleCancel","columns","title","dataIndex","key","width","ellipsis","rowKey","render","text","orderStatus","className","record","name","backgroundColor","marginRight","myColTitleStyle","textOverflow","overflow","whiteSpace","marginBottom","data"],"mappings":"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","sourcesContent":["import React , { useState }from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport TableWrapper from \"../BookingManagement.style\"\r\nimport { Button } from 'antd';\r\nimport categories from '../../Tables/category';\r\nimport { Drawer,Descriptions,Badge , Modal} from 'antd';\r\nimport { Link ,useRouteMatch} from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport { StatusTag } from '../../Invoice/Invoice.styles';\r\n\r\n\r\nexport default function() {\r\n  const invoices = useSelector(state => state.Invoices);\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch();\r\n  const { invoiceId } = useParams();\r\n  const { initialInvoices, currentInvoice, enableEditView } = invoices;\r\n  const [visibleInfo, setVisibleInfo] = React.useState(false);\r\n  const showDrawerInfo =()=>{\r\n    setVisibleInfo(true);\r\n  };\r\n  const handleCancelDrwerInfo = () => {\r\n    setVisibleInfo(false);\r\n  };\r\n  const [visibleDeleteModal, setVisibleDeleteModal] = React.useState(false);\r\n  \r\n  const showModalDelete = () => {\r\n    setVisibleDeleteModal(true);\r\n  };\r\n\r\n  const handleOkDeleteModal = () => {\r\n    setModalText('The modal will be closed after two seconds');\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisibleDeleteModal(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleCancelDeleteModal = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisibleDeleteModal(false);\r\n  };\r\n  //\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const [modalText, setModalText] = React.useState('Content of the modal');\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setModalText('The modal will be closed after two seconds');\r\n    setConfirmLoading(true)\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n    \r\n  \r\n  const columns = [\r\n    {\r\n      title: 'Mã lịch dịch vụ',\r\n      dataIndex: 'username',\r\n      key: 'name',\r\n      width: \"20%\"  ,\r\n      \r\n    },\r\n    {\r\n      title: 'Tên Khách hàng',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      width: \"20%\" ,\r\n      ellipsis:true\r\n    },\r\n    {\r\n      title: 'Ngày làm',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      width: \"20%\" ,\r\n      ellipsis:true\r\n    },\r\n    {\r\n      title: 'Tình trạng',\r\n      dataIndex: 'bookingStatus',\r\n      rowKey: 'bookingStatus',\r\n      width: '13%',\r\n      render: (text, orderStatus) => {\r\n        let className;\r\n        if (text === 'shipped' || text === 'Shipped' || text === 'SHIPPED') {\r\n          className = 'shipped';\r\n        } else if (\r\n          text === 'delivered' ||\r\n          text === 'Delivered' ||\r\n          text === 'DELIVERED'\r\n        ) {\r\n          className = 'delivered';\r\n        } else if (\r\n          text === 'pending' ||\r\n          text === 'Pending' ||\r\n          text === 'PENDING'\r\n        ) {\r\n          className = 'pending';\r\n        }\r\n        return <StatusTag className=\"delivered\">Hoàn thành</StatusTag>;\r\n      },\r\n    },\r\n    {\r\n        title: '',\r\n        dataIndex: 'action',\r\n        width: '15%',\r\n        render: (_, record) => (\r\n          <>\r\n            {record.name === 'initial' && <Button icon=\"plus\" shape=\"circle\" />}\r\n            {record.name !== 'initial' && (\r\n              <>\r\n              \r\n              <Link to={`//${record.name}`}>\r\n              <Button icon=\"search\" shape=\"circle\" style={{backgroundColor: \"#008CBA\" ,marginRight:\"5px\"}} /> \r\n              </Link>\r\n              \r\n              <Button icon=\"delete\" shape=\"circle\" type=\"danger\" />\r\n              </>\r\n            )}\r\n          </>\r\n        )\r\n      }\r\n\r\n  ];\r\n  const myColTitleStyle = {\r\n    textOverflow: 'ellipsis',\r\n    overflow: \"hidden\",\r\n    whiteSpace: 'nowrap',\r\n  };\r\n  return (\r\n    <>\r\n    \r\n    <Button type=\"primary\" onClick={showModal} style={{ marginBottom: '3%' }}>\r\n        Thêm thể loại mới +\r\n    </Button>\r\n   <TableWrapper dataSource={categories.data.data} columns={columns}   />\r\n    <Modal\r\n    title=\"Thêm thể loại\"\r\n    visible={visible}\r\n    confirmLoading={confirmLoading}\r\n    onOk={handleOk}\r\n    onCancel={handleCancel}\r\n    okText=\"Thêm\"\r\n    cancelText=\"Hủy\"\r\n    \r\n    >\r\n      \r\n\r\n    </Modal>\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}