{"ast":null,"code":"var _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\ScrumBoard\\\\Task\\\\TaskList\\\\TaskList.js\";\nimport React, { Component } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport TaskItem from '../Task';\nimport { DropZone, Wrapper } from './TaskList.style';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nclass InnerTaskList extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tasks !== this.props.tasks) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return this.props.tasks.map((task, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: task.id,\n      draggableId: task.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, (dragProvided, dragSnapshot) => /*#__PURE__*/React.createElement(TaskItem, {\n      key: task.id,\n      task: task,\n      columnId: this.props.columnId,\n      isDragging: dragSnapshot.isDragging,\n      isGroupedOver: Boolean(dragSnapshot.combineTargetFor),\n      provided: dragProvided,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst InnerList = ({\n  dropProvided,\n  tasks,\n  columnId\n}) => /*#__PURE__*/React.createElement(DropZone, {\n  ref: dropProvided.innerRef,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Scrollbars, {\n  style: {\n    height: 500\n  },\n  autoHide: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(InnerTaskList, {\n  tasks: tasks,\n  columnId: columnId,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}), dropProvided.placeholder));\n\nconst TaskList = ({\n  ignoreContainerClipping,\n  internalScroll,\n  scrollContainerStyle,\n  isDropDisabled,\n  isCombineEnabled,\n  listId,\n  listType,\n  style,\n  column,\n  tasks,\n  title,\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: listId,\n    type: listType,\n    ignoreContainerClipping: ignoreContainerClipping,\n    isDropDisabled: isDropDisabled,\n    isCombineEnabled: isCombineEnabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, (dropProvided, dropSnapshot) => /*#__PURE__*/React.createElement(Wrapper, Object.assign({\n    style: style,\n    isDraggingOver: dropSnapshot.isDraggingOver,\n    isDropDisabled: isDropDisabled\n  }, dropProvided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), internalScroll ? /*#__PURE__*/React.createElement(InnerList, {\n    tasks: tasks,\n    title: title,\n    columnId: column.id,\n    dropProvided: dropProvided,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(InnerList, {\n    title: title,\n    tasks: tasks,\n    columnId: column.id,\n    dropProvided: dropProvided,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })));\n};\n\nTaskList.defaultProps = {\n  listId: 'LIST'\n};\nexport default TaskList;","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/ScrumBoard/Task/TaskList/TaskList.js"],"names":["React","Component","Droppable","Draggable","TaskItem","DropZone","Wrapper","Scrollbars","InnerTaskList","shouldComponentUpdate","nextProps","tasks","props","render","map","task","index","id","dragProvided","dragSnapshot","columnId","isDragging","Boolean","combineTargetFor","InnerList","dropProvided","innerRef","height","placeholder","TaskList","ignoreContainerClipping","internalScroll","scrollContainerStyle","isDropDisabled","isCombineEnabled","listId","listType","style","column","title","dropSnapshot","isDraggingOver","droppableProps","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport TaskItem from '../Task';\r\nimport { DropZone, Wrapper } from './TaskList.style';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nclass InnerTaskList extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.tasks !== this.props.tasks) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return this.props.tasks.map((task, index) => (\r\n      <Draggable key={task.id} draggableId={task.id} index={index}>\r\n        {(dragProvided, dragSnapshot) => (\r\n          <TaskItem\r\n            key={task.id}\r\n            task={task}\r\n            columnId={this.props.columnId}\r\n            isDragging={dragSnapshot.isDragging}\r\n            isGroupedOver={Boolean(dragSnapshot.combineTargetFor)}\r\n            provided={dragProvided}\r\n          />\r\n        )}\r\n      </Draggable>\r\n    ));\r\n  }\r\n}\r\n\r\nconst InnerList = ({ dropProvided, tasks, columnId }) => (\r\n  <DropZone ref={dropProvided.innerRef}>\r\n    <Scrollbars style={{ height: 500 }} autoHide>\r\n      <InnerTaskList tasks={tasks} columnId={columnId} />\r\n      {dropProvided.placeholder}\r\n    </Scrollbars>\r\n  </DropZone>\r\n);\r\n\r\nconst TaskList = ({\r\n  ignoreContainerClipping,\r\n  internalScroll,\r\n  scrollContainerStyle,\r\n  isDropDisabled,\r\n  isCombineEnabled,\r\n  listId,\r\n  listType,\r\n  style,\r\n  column,\r\n  tasks,\r\n  title,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Droppable\r\n      droppableId={listId}\r\n      type={listType}\r\n      ignoreContainerClipping={ignoreContainerClipping}\r\n      isDropDisabled={isDropDisabled}\r\n      isCombineEnabled={isCombineEnabled}\r\n    >\r\n      {(dropProvided, dropSnapshot) => (\r\n        <Wrapper\r\n          style={style}\r\n          isDraggingOver={dropSnapshot.isDraggingOver}\r\n          isDropDisabled={isDropDisabled}\r\n          {...dropProvided.droppableProps}\r\n        >\r\n          {internalScroll ? (\r\n            <InnerList\r\n              tasks={tasks}\r\n              title={title}\r\n              columnId={column.id}\r\n              dropProvided={dropProvided}\r\n            />\r\n          ) : (\r\n            <InnerList\r\n              title={title}\r\n              tasks={tasks}\r\n              columnId={column.id}\r\n              dropProvided={dropProvided}\r\n            />\r\n          )}\r\n        </Wrapper>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nTaskList.defaultProps = {\r\n  listId: 'LIST',\r\n};\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}