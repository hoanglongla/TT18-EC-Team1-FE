{"ast":null,"code":"var _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\Shuffle\\\\Shuffle.js\";\nimport React from 'react';\nimport FlipMove from 'react-flip-move';\nimport shuffle from 'lodash/shuffle';\nimport throttle from 'lodash/throttle';\nimport articles from './config';\nimport Toggle from './Toggle';\nimport ListItem from './ShuffleList';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport { SortableCardWrapper } from './Shuffle.styles';\nexport default function () {\n  const [state, setState] = React.useState({\n    removedArticles: [],\n    view: 'grid',\n    order: 'asc',\n    sortingMethod: 'chronological',\n    enterLeaveAnimation: 'accordionVertical',\n    articles\n  });\n\n  function toggleList() {\n    setState({ ...state,\n      view: 'list',\n      enterLeaveAnimation: 'accordionVertical'\n    });\n  }\n\n  function toggleGrid() {\n    setState({ ...state,\n      view: 'grid',\n      enterLeaveAnimation: 'accordionHorizontal'\n    });\n  }\n\n  function toggleSort() {\n    const sortAsc = (a, b) => a.timestamp - b.timestamp;\n\n    const sortDesc = (a, b) => b.timestamp - a.timestamp;\n\n    setState({ ...state,\n      order: state.order === 'asc' ? 'desc' : 'asc',\n      sortingMethod: 'chronological',\n      articles: state.articles.sort(state.order === 'asc' ? sortDesc : sortAsc)\n    });\n  }\n\n  function sortShuffle() {\n    setState({ ...state,\n      sortingMethod: 'shuffle',\n      articles: shuffle(state.articles)\n    });\n  }\n\n  function moveArticle(source, dest, id) {\n    const sourceArticles = state[source].slice();\n    let destArticles = state[dest].slice();\n    if (!sourceArticles.length) return; // Find the index of the article clicked.\n    // If no ID is provided, the index is 0\n\n    const i = id ? sourceArticles.findIndex(article => article.id === id) : 0; // If the article is already removed, do nothing.\n\n    if (i === -1) return;\n    destArticles = [].concat(sourceArticles.splice(i, 1), destArticles);\n    setState({ ...state,\n      [source]: sourceArticles,\n      [dest]: destArticles\n    });\n  }\n\n  function sortRotate() {\n    const articles = state.articles.slice();\n    articles.unshift(articles.pop());\n    setState({ ...state,\n      sortingMethod: 'rotate',\n      articles\n    });\n  }\n\n  function renderArticles() {\n    return state.articles.map((article, i) => {\n      return /*#__PURE__*/React.createElement(ListItem, Object.assign({\n        key: article.id,\n        view: state.view,\n        index: i,\n        clickHandler: throttle(() => moveArticle('articles', 'removedArticles', article.id), 800)\n      }, article, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(SortableCardWrapper, {\n    id: \"shuffle\",\n    className: `isomorphicSortableCardsHolder ${state.view}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"isoControlBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoViewBtnGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toggle, {\n    clickHandler: toggleList,\n    text: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"toggle.list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }),\n    icon: \"bars\",\n    active: state.view === 'list',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Toggle, {\n    clickHandler: toggleGrid,\n    text: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"toggle.grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }),\n    icon: \"appstore\",\n    active: state.view === 'grid',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoControlBtnGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toggle, {\n    clickHandler: toggleSort,\n    text: state.order === 'asc' ? /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"toggle.ascending\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"toggle.descending\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }),\n    icon: state.order === 'asc' ? 'up' : 'down',\n    active: state.sortingMethod === 'chronological',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Toggle, {\n    clickHandler: sortShuffle,\n    text: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"toggle.shuffle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }),\n    icon: \"shake\",\n    active: state.sortingMethod === 'shuffle',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Toggle, {\n    clickHandler: sortRotate,\n    text: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"toggle.rotate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }),\n    icon: \"reload\",\n    active: state.sortingMethod === 'rotate',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoSortableCardsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlipMove, {\n    staggerDurationBy: \"30\",\n    duration: 500,\n    enterAnimation: state.enterLeaveAnimation,\n    leaveAnimation: state.enterLeaveAnimation,\n    typeName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, renderArticles(), /*#__PURE__*/React.createElement(\"footer\", {\n    key: \"foot\",\n    className: \"isoAddRemoveControlBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoControlBtnGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toggle, {\n    clickHandler: () => moveArticle('removedArticles', 'articles'),\n    text: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"toggle.addItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }\n    }),\n    icon: \"plus\",\n    active: state.removedArticles.length > 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Toggle, {\n    clickHandler: () => moveArticle('articles', 'removedArticles'),\n    text: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"toggle.removeItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }),\n    icon: \"close\",\n    active: state.articles.length > 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/containers/Shuffle/Shuffle.js"],"names":["React","FlipMove","shuffle","throttle","articles","Toggle","ListItem","IntlMessages","SortableCardWrapper","state","setState","useState","removedArticles","view","order","sortingMethod","enterLeaveAnimation","toggleList","toggleGrid","toggleSort","sortAsc","a","b","timestamp","sortDesc","sort","sortShuffle","moveArticle","source","dest","id","sourceArticles","slice","destArticles","length","i","findIndex","article","concat","splice","sortRotate","unshift","pop","renderArticles","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FlipMove from 'react-flip-move';\r\nimport shuffle from 'lodash/shuffle';\r\nimport throttle from 'lodash/throttle';\r\nimport articles from './config';\r\nimport Toggle from './Toggle';\r\nimport ListItem from './ShuffleList';\r\nimport IntlMessages from '@iso/components/utility/intlMessages';\r\nimport { SortableCardWrapper } from './Shuffle.styles';\r\n\r\nexport default function() {\r\n  const [state, setState] = React.useState({\r\n    removedArticles: [],\r\n    view: 'grid',\r\n    order: 'asc',\r\n    sortingMethod: 'chronological',\r\n    enterLeaveAnimation: 'accordionVertical',\r\n    articles,\r\n  });\r\n\r\n  function toggleList() {\r\n    setState({\r\n      ...state,\r\n      view: 'list',\r\n      enterLeaveAnimation: 'accordionVertical',\r\n    });\r\n  }\r\n\r\n  function toggleGrid() {\r\n    setState({\r\n      ...state,\r\n      view: 'grid',\r\n      enterLeaveAnimation: 'accordionHorizontal',\r\n    });\r\n  }\r\n\r\n  function toggleSort() {\r\n    const sortAsc = (a, b) => a.timestamp - b.timestamp;\r\n    const sortDesc = (a, b) => b.timestamp - a.timestamp;\r\n\r\n    setState({\r\n      ...state,\r\n      order: state.order === 'asc' ? 'desc' : 'asc',\r\n      sortingMethod: 'chronological',\r\n      articles: state.articles.sort(state.order === 'asc' ? sortDesc : sortAsc),\r\n    });\r\n  }\r\n\r\n  function sortShuffle() {\r\n    setState({\r\n      ...state,\r\n      sortingMethod: 'shuffle',\r\n      articles: shuffle(state.articles),\r\n    });\r\n  }\r\n\r\n  function moveArticle(source, dest, id) {\r\n    const sourceArticles = state[source].slice();\r\n    let destArticles = state[dest].slice();\r\n\r\n    if (!sourceArticles.length) return;\r\n\r\n    // Find the index of the article clicked.\r\n    // If no ID is provided, the index is 0\r\n    const i = id ? sourceArticles.findIndex(article => article.id === id) : 0;\r\n\r\n    // If the article is already removed, do nothing.\r\n    if (i === -1) return;\r\n\r\n    destArticles = [].concat(sourceArticles.splice(i, 1), destArticles);\r\n\r\n    setState({\r\n      ...state,\r\n      [source]: sourceArticles,\r\n      [dest]: destArticles,\r\n    });\r\n  }\r\n\r\n  function sortRotate() {\r\n    const articles = state.articles.slice();\r\n    articles.unshift(articles.pop());\r\n\r\n    setState({\r\n      ...state,\r\n      sortingMethod: 'rotate',\r\n      articles,\r\n    });\r\n  }\r\n\r\n  function renderArticles() {\r\n    return state.articles.map((article, i) => {\r\n      return (\r\n        <ListItem\r\n          key={article.id}\r\n          view={state.view}\r\n          index={i}\r\n          clickHandler={throttle(\r\n            () => moveArticle('articles', 'removedArticles', article.id),\r\n            800\r\n          )}\r\n          {...article}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <SortableCardWrapper\r\n      id=\"shuffle\"\r\n      className={`isomorphicSortableCardsHolder ${state.view}`}\r\n    >\r\n      <header className=\"isoControlBar\">\r\n        <div className=\"isoViewBtnGroup\">\r\n          <Toggle\r\n            clickHandler={toggleList}\r\n            text={<IntlMessages id=\"toggle.list\" />}\r\n            icon=\"bars\"\r\n            active={state.view === 'list'}\r\n          />\r\n          <Toggle\r\n            clickHandler={toggleGrid}\r\n            text={<IntlMessages id=\"toggle.grid\" />}\r\n            icon=\"appstore\"\r\n            active={state.view === 'grid'}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"isoControlBtnGroup\">\r\n          <Toggle\r\n            clickHandler={toggleSort}\r\n            text={\r\n              state.order === 'asc' ? (\r\n                <IntlMessages id=\"toggle.ascending\" />\r\n              ) : (\r\n                <IntlMessages id=\"toggle.descending\" />\r\n              )\r\n            }\r\n            icon={state.order === 'asc' ? 'up' : 'down'}\r\n            active={state.sortingMethod === 'chronological'}\r\n          />\r\n          <Toggle\r\n            clickHandler={sortShuffle}\r\n            text={<IntlMessages id=\"toggle.shuffle\" />}\r\n            icon=\"shake\"\r\n            active={state.sortingMethod === 'shuffle'}\r\n          />\r\n          <Toggle\r\n            clickHandler={sortRotate}\r\n            text={<IntlMessages id=\"toggle.rotate\" />}\r\n            icon=\"reload\"\r\n            active={state.sortingMethod === 'rotate'}\r\n          />\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"isoSortableCardsContainer\">\r\n        <FlipMove\r\n          staggerDurationBy=\"30\"\r\n          duration={500}\r\n          enterAnimation={state.enterLeaveAnimation}\r\n          leaveAnimation={state.enterLeaveAnimation}\r\n          typeName=\"ul\"\r\n        >\r\n          {renderArticles()}\r\n\r\n          <footer key=\"foot\" className=\"isoAddRemoveControlBar\">\r\n            <div className=\"isoControlBtnGroup\">\r\n              <Toggle\r\n                clickHandler={() => moveArticle('removedArticles', 'articles')}\r\n                text={<IntlMessages id=\"toggle.addItem\" />}\r\n                icon=\"plus\"\r\n                active={state.removedArticles.length > 0}\r\n              />\r\n              <Toggle\r\n                clickHandler={() => moveArticle('articles', 'removedArticles')}\r\n                text={<IntlMessages id=\"toggle.removeItem\" />}\r\n                icon=\"close\"\r\n                active={state.articles.length > 0}\r\n              />\r\n            </div>\r\n          </footer>\r\n        </FlipMove>\r\n      </div>\r\n    </SortableCardWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}