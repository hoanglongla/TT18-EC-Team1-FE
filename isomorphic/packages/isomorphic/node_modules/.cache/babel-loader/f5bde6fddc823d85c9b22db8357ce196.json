{"ast":null,"code":"import actions from './actions';\nconst initState = {\n  isLoading: false,\n  errorMessage: false,\n  investors: {},\n  modalActive: false,\n  investor: {\n    key: null,\n    id: new Date().getTime(),\n    name: '',\n    company_name: '',\n    job_title: '',\n    investment_count: null,\n    exists_count: null,\n    location: '',\n    deleted_at: null // soft delete\n\n  }\n};\nexport default function reducer(state = initState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case actions.LOAD_FROM_FIRESTORE:\n      return { ...state,\n        isLoading: true,\n        errorMessage: false,\n        modalActive: false\n      };\n\n    case actions.LOAD_FROM_FIRESTORE_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        investors: payload.data,\n        errorMessage: false\n      };\n\n    case actions.LOAD_FROM_FIRESTORE_ERROR:\n      return { ...state,\n        isLoading: false,\n        errorMessage: 'There is a loading problem'\n      };\n\n    case actions.TOGGLE_FIRESTORE_HANDLE_MODAL:\n      return { ...state,\n        modalActive: !state.modalActive,\n        investor: payload.data == null ? initState.investor : payload.data\n      };\n\n    case actions.FIRESTORE_UPDATE:\n      return { ...state,\n        investor: payload.data\n      };\n\n    case actions.RESET_FIRESTORE_DOCUMENTS_ERROR:\n      return { ...state,\n        isLoading: false,\n        errorMessage: 'There is a loading problem'\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/redux/investors/reducers.js"],"names":["actions","initState","isLoading","errorMessage","investors","modalActive","investor","key","id","Date","getTime","name","company_name","job_title","investment_count","exists_count","location","deleted_at","reducer","state","type","payload","LOAD_FROM_FIRESTORE","LOAD_FROM_FIRESTORE_SUCCESS","data","LOAD_FROM_FIRESTORE_ERROR","TOGGLE_FIRESTORE_HANDLE_MODAL","FIRESTORE_UPDATE","RESET_FIRESTORE_DOCUMENTS_ERROR"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,KADK;AAEhBC,EAAAA,YAAY,EAAE,KAFE;AAGhBC,EAAAA,SAAS,EAAE,EAHK;AAIhBC,EAAAA,WAAW,EAAE,KAJG;AAKhBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,IADG;AAERC,IAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAFI;AAGRC,IAAAA,IAAI,EAAE,EAHE;AAIRC,IAAAA,YAAY,EAAE,EAJN;AAKRC,IAAAA,SAAS,EAAE,EALH;AAMRC,IAAAA,gBAAgB,EAAE,IANV;AAORC,IAAAA,YAAY,EAAE,IAPN;AAQRC,IAAAA,QAAQ,EAAE,EARF;AASRC,IAAAA,UAAU,EAAE,IATJ,CASU;;AATV;AALM,CAAlB;AAkBA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGlB,SAAzB,EAAoC;AAAEmB,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApC,EAAuD;AACpE,UAAQD,IAAR;AACE,SAAKpB,OAAO,CAACsB,mBAAb;AACE,aAAO,EACL,GAAGH,KADE;AAELjB,QAAAA,SAAS,EAAE,IAFN;AAGLC,QAAAA,YAAY,EAAE,KAHT;AAILE,QAAAA,WAAW,EAAE;AAJR,OAAP;;AAMF,SAAKL,OAAO,CAACuB,2BAAb;AACE,aAAO,EACL,GAAGJ,KADE;AAELjB,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,SAAS,EAAEiB,OAAO,CAACG,IAHd;AAILrB,QAAAA,YAAY,EAAE;AAJT,OAAP;;AAMF,SAAKH,OAAO,CAACyB,yBAAb;AACE,aAAO,EACL,GAAGN,KADE;AAELjB,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAKF,SAAKH,OAAO,CAAC0B,6BAAb;AACE,aAAO,EACL,GAAGP,KADE;AAELd,QAAAA,WAAW,EAAE,CAACc,KAAK,CAACd,WAFf;AAGLC,QAAAA,QAAQ,EAAEe,OAAO,CAACG,IAAR,IAAgB,IAAhB,GAAuBvB,SAAS,CAACK,QAAjC,GAA4Ce,OAAO,CAACG;AAHzD,OAAP;;AAKF,SAAKxB,OAAO,CAAC2B,gBAAb;AACE,aAAO,EACL,GAAGR,KADE;AAELb,QAAAA,QAAQ,EAAEe,OAAO,CAACG;AAFb,OAAP;;AAIF,SAAKxB,OAAO,CAAC4B,+BAAb;AACE,aAAO,EACL,GAAGT,KADE;AAELjB,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAKF;AACE,aAAOgB,KAAP;AAvCJ;AAyCD","sourcesContent":["import actions from './actions';\r\n\r\nconst initState = {\r\n  isLoading: false,\r\n  errorMessage: false,\r\n  investors: {},\r\n  modalActive: false,\r\n  investor: {\r\n    key: null,\r\n    id: new Date().getTime(),\r\n    name: '',\r\n    company_name: '',\r\n    job_title: '',\r\n    investment_count: null,\r\n    exists_count: null,\r\n    location: '',\r\n    deleted_at: null, // soft delete\r\n  },\r\n};\r\n\r\nexport default function reducer(state = initState, { type, payload }) {\r\n  switch (type) {\r\n    case actions.LOAD_FROM_FIRESTORE:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: false,\r\n        modalActive: false,\r\n      };\r\n    case actions.LOAD_FROM_FIRESTORE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        investors: payload.data,\r\n        errorMessage: false,\r\n      };\r\n    case actions.LOAD_FROM_FIRESTORE_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: 'There is a loading problem',\r\n      };\r\n    case actions.TOGGLE_FIRESTORE_HANDLE_MODAL:\r\n      return {\r\n        ...state,\r\n        modalActive: !state.modalActive,\r\n        investor: payload.data == null ? initState.investor : payload.data,\r\n      };\r\n    case actions.FIRESTORE_UPDATE:\r\n      return {\r\n        ...state,\r\n        investor: payload.data,\r\n      };\r\n    case actions.RESET_FIRESTORE_DOCUMENTS_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: 'There is a loading problem',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}