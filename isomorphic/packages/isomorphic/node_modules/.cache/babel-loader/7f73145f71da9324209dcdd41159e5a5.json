{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/tooltip/style/css\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/badge/style/css\";\nimport _Badge from \"antd/es/badge\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\ScrumBoard\\\\Task\\\\TaskDetails\\\\TaskDetials.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport Comments from '@iso/components/ScrumBoard/Comments/Comments';\nimport HeadingWithIcon from '@iso/components/ScrumBoard/HeadingWithIcon/HeadingWithIcon';\nimport { IconSvg } from '@iso/components/ScrumBoard/IconSvg/IconSvg';\nimport CardDetailsHeader from './TaskDetailsHeader';\nimport { CardDetailsWrapper, AttachmentWrapper, TaskName, TaskDescription, ClockIcon } from '../Task.style';\nimport PlusIcon from \"@iso/assets/images/icon/24.svg\";\nimport TitleIcon from \"@iso/assets/images/icon/05-icon.svg\";\nimport DescriptionIcon from \"@iso/assets/images/icon/06-icon.svg\";\nimport AttachmentIcon from \"@iso/assets/images/icon/01-icon.svg\";\nimport Clock from \"@iso/assets/images/icon/17.svg\";\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\n\nconst TaskDetials = ({\n  task,\n  deleteTaskWatcher,\n  editTask,\n  closeDrawer,\n  openDrawer,\n  columnId\n}) => {\n  return /*#__PURE__*/React.createElement(CardDetailsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardDetailsHeader, {\n    onBtnClick: () => {\n      editTask(task);\n      openDrawer({\n        drawerType: 'CREATE_OR_EDIT_TASK',\n        drawerProps: {\n          initials: { ...task,\n            editing: true\n          },\n          columnId: columnId\n        }\n      });\n    },\n    onIconClick: closeDrawer,\n    onDelete: () => {\n      deleteTaskWatcher({\n        task_id: task.id,\n        column_id: columnId\n      });\n      closeDrawer();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(HeadingWithIcon, {\n    heading: \"Task Name\",\n    iconSrc: TitleIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TaskName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, task.title), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeadingWithIcon, {\n    heading: \"Assigned Members\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, task.assignees.map(assignee => /*#__PURE__*/React.createElement(Fragment, {\n    key: assignee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, !assignee ? /*#__PURE__*/React.createElement(IconSvg, {\n    src: PlusIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(IconSvg, {\n    src: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n    padding: '0',\n    radius: '10% 30% 25%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(_Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeadingWithIcon, {\n    heading: \"Labels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, task.labels.map(label => /*#__PURE__*/React.createElement(_Tooltip, {\n    title: `${label[0].toUpperCase()}${label.slice(1)}`,\n    placement: \"bottom\",\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Badge, {\n    status: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(_Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeadingWithIcon, {\n    heading: \"Due Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ClockIcon, {\n    src: Clock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), moment(task.due_date).format('ddd d, YYYY'))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      clear: 'both',\n      paddingTop: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeadingWithIcon, {\n    heading: \"Description\",\n    iconSrc: DescriptionIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TaskDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, task.description)), /*#__PURE__*/React.createElement(AttachmentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeadingWithIcon, {\n    heading: \"Attachments\",\n    iconSrc: AttachmentIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Comments, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default connect(null, { ...scrumBoardActions\n})(TaskDetials);","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/ScrumBoard/Task/TaskDetails/TaskDetials.js"],"names":["React","Fragment","connect","moment","Comments","HeadingWithIcon","IconSvg","CardDetailsHeader","CardDetailsWrapper","AttachmentWrapper","TaskName","TaskDescription","ClockIcon","scrumBoardActions","TaskDetials","task","deleteTaskWatcher","editTask","closeDrawer","openDrawer","columnId","drawerType","drawerProps","initials","editing","task_id","id","column_id","TitleIcon","title","assignees","map","assignee","PlusIcon","labels","label","toUpperCase","slice","Clock","due_date","format","clear","paddingTop","DescriptionIcon","description","AttachmentIcon"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Badge, Row, Col, Tooltip } from 'antd';\r\nimport moment from 'moment';\r\nimport Comments from '@iso/components/ScrumBoard/Comments/Comments';\r\nimport HeadingWithIcon from '@iso/components/ScrumBoard/HeadingWithIcon/HeadingWithIcon';\r\nimport { IconSvg } from '@iso/components/ScrumBoard/IconSvg/IconSvg';\r\nimport CardDetailsHeader from './TaskDetailsHeader';\r\nimport {\r\n  CardDetailsWrapper,\r\n  AttachmentWrapper,\r\n  TaskName,\r\n  TaskDescription,\r\n  ClockIcon,\r\n} from '../Task.style';\r\nimport PlusIcon from '@iso/assets/images/icon/24.svg';\r\nimport TitleIcon from '@iso/assets/images/icon/05-icon.svg';\r\nimport DescriptionIcon from '@iso/assets/images/icon/06-icon.svg';\r\nimport AttachmentIcon from '@iso/assets/images/icon/01-icon.svg';\r\nimport Clock from '@iso/assets/images/icon/17.svg';\r\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\r\n\r\nconst TaskDetials = ({\r\n  task,\r\n  deleteTaskWatcher,\r\n  editTask,\r\n  closeDrawer,\r\n  openDrawer,\r\n  columnId,\r\n}) => {\r\n  return (\r\n    <CardDetailsWrapper>\r\n      <CardDetailsHeader\r\n        onBtnClick={() => {\r\n          editTask(task);\r\n          openDrawer({\r\n            drawerType: 'CREATE_OR_EDIT_TASK',\r\n            drawerProps: {\r\n              initials: { ...task, editing: true },\r\n              columnId: columnId,\r\n            },\r\n          });\r\n        }}\r\n        onIconClick={closeDrawer}\r\n        onDelete={() => {\r\n          deleteTaskWatcher({\r\n            task_id: task.id,\r\n            column_id: columnId,\r\n          });\r\n          closeDrawer();\r\n        }}\r\n      />\r\n      <HeadingWithIcon heading=\"Task Name\" iconSrc={TitleIcon} />\r\n      <TaskName>{task.title}</TaskName>\r\n      <Row>\r\n        <Col span={8}>\r\n          <HeadingWithIcon heading=\"Assigned Members\" />\r\n          <p>\r\n            {task.assignees.map(assignee => (\r\n              <Fragment key={assignee}>\r\n                {!assignee ? (\r\n                  <IconSvg src={PlusIcon} />\r\n                ) : (\r\n                  <IconSvg\r\n                    src={\r\n                      'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'\r\n                    }\r\n                    padding={'0'}\r\n                    radius={'10% 30% 25%'}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </p>\r\n        </Col>\r\n        <Col span={8}>\r\n          <HeadingWithIcon heading=\"Labels\" />\r\n          <p>\r\n            {task.labels.map(label => (\r\n              <Tooltip\r\n                title={`${label[0].toUpperCase()}${label.slice(1)}`}\r\n                placement=\"bottom\"\r\n                key={label}\r\n              >\r\n                <Badge status={label} />\r\n              </Tooltip>\r\n            ))}\r\n          </p>\r\n        </Col>\r\n        <Col span={8}>\r\n          <HeadingWithIcon heading=\"Due Date\" />\r\n          <ClockIcon src={Clock} />\r\n          {moment(task.due_date).format('ddd d, YYYY')}\r\n        </Col>\r\n      </Row>\r\n      <div style={{ clear: 'both', paddingTop: '30px' }}>\r\n        <HeadingWithIcon heading=\"Description\" iconSrc={DescriptionIcon} />\r\n        <TaskDescription>{task.description}</TaskDescription>\r\n      </div>\r\n      <AttachmentWrapper>\r\n        <HeadingWithIcon heading=\"Attachments\" iconSrc={AttachmentIcon} />\r\n      </AttachmentWrapper>\r\n      <Comments />\r\n    </CardDetailsWrapper>\r\n  );\r\n};\r\nexport default connect(\r\n  null,\r\n  { ...scrumBoardActions }\r\n)(TaskDetials);\r\n"]},"metadata":{},"sourceType":"module"}