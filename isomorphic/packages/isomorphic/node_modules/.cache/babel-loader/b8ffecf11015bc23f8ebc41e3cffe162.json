{"ast":null,"code":"'use strict';\n\nvar reduce = require('lodash/reduce');\n\nvar find = require('lodash/find');\n\nvar startsWith = require('lodash/startsWith');\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\n\n\nmodule.exports = function formatSort(sortBy, defaults) {\n  return reduce(sortBy, function preparePredicate(out, sortInstruction) {\n    var sortInstructions = sortInstruction.split(':');\n\n    if (defaults && sortInstructions.length === 1) {\n      var similarDefault = find(defaults, function (predicate) {\n        return startsWith(predicate, sortInstruction[0]);\n      });\n\n      if (similarDefault) {\n        sortInstructions = similarDefault.split(':');\n      }\n    }\n\n    out[0].push(sortInstructions[0]);\n    out[1].push(sortInstructions[1]);\n    return out;\n  }, [[], []]);\n};","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/node_modules/algoliasearch-helper/src/functions/formatSort.js"],"names":["reduce","require","find","startsWith","module","exports","formatSort","sortBy","defaults","preparePredicate","out","sortInstruction","sortInstructions","split","length","similarDefault","predicate","push"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,aAAD,CAAlB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,mBAAD,CAAxB;AAEA;AACA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,QAA5B,EAAsC;AACrD,SAAOR,MAAM,CAACO,MAAD,EAAS,SAASE,gBAAT,CAA0BC,GAA1B,EAA+BC,eAA/B,EAAgD;AACpE,QAAIC,gBAAgB,GAAGD,eAAe,CAACE,KAAhB,CAAsB,GAAtB,CAAvB;;AACA,QAAIL,QAAQ,IAAII,gBAAgB,CAACE,MAAjB,KAA4B,CAA5C,EAA+C;AAC7C,UAAIC,cAAc,GAAGb,IAAI,CAACM,QAAD,EAAW,UAASQ,SAAT,EAAoB;AACtD,eAAOb,UAAU,CAACa,SAAD,EAAYL,eAAe,CAAC,CAAD,CAA3B,CAAjB;AACD,OAFwB,CAAzB;;AAGA,UAAII,cAAJ,EAAoB;AAClBH,QAAAA,gBAAgB,GAAGG,cAAc,CAACF,KAAf,CAAqB,GAArB,CAAnB;AACD;AACF;;AACDH,IAAAA,GAAG,CAAC,CAAD,CAAH,CAAOO,IAAP,CAAYL,gBAAgB,CAAC,CAAD,CAA5B;AACAF,IAAAA,GAAG,CAAC,CAAD,CAAH,CAAOO,IAAP,CAAYL,gBAAgB,CAAC,CAAD,CAA5B;AACA,WAAOF,GAAP;AACD,GAbY,EAaV,CAAC,EAAD,EAAK,EAAL,CAbU,CAAb;AAcD,CAfD","sourcesContent":["'use strict';\n\nvar reduce = require('lodash/reduce');\nvar find = require('lodash/find');\nvar startsWith = require('lodash/startsWith');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  return reduce(sortBy, function preparePredicate(out, sortInstruction) {\n    var sortInstructions = sortInstruction.split(':');\n    if (defaults && sortInstructions.length === 1) {\n      var similarDefault = find(defaults, function(predicate) {\n        return startsWith(predicate, sortInstruction[0]);\n      });\n      if (similarDefault) {\n        sortInstructions = similarDefault.split(':');\n      }\n    }\n    out[0].push(sortInstructions[0]);\n    out[1].push(sortInstructions[1]);\n    return out;\n  }, [[], []]);\n};\n"]},"metadata":{},"sourceType":"script"}