{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getId = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createConnector = require('../core/createConnector');\n\nvar _createConnector2 = _interopRequireDefault(_createConnector);\n\nvar _indexUtils = require('../core/indexUtils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar getId = exports.getId = function getId(props) {\n  return props.attributes[0];\n};\n\nvar namespace = 'hierarchicalMenu';\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId(props);\n\n  var nextValue = _defineProperty({}, id, nextRefinement || '');\n\n  var resetPage = true;\n  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);\n}\n\nfunction transformValue(values) {\n  return values.reduce(function (acc, item) {\n    if (item.isRefined) {\n      acc.push({\n        label: item.name,\n        // If dealing with a nested \"items\", \"value\" is equal to the previous value concatenated with the current label\n        // If dealing with the first level, \"value\" is equal to the current label\n        value: item.path\n      }); // Create a variable in order to keep the same acc for the recursion, otherwise \"reduce\" returns a new one\n\n      if (item.data) {\n        acc = acc.concat(transformValue(item.data, acc));\n      }\n    }\n\n    return acc;\n  }, []);\n}\n/**\n * The breadcrumb component is s a type of secondary navigation scheme that\n * reveals the userâ€™s location in a website or web application.\n *\n * @name connectBreadcrumb\n * @requirements To use this widget, your attributes must be formatted in a specific way.\n * If you want for example to have a Breadcrumb of categories, objects in your index\n * should be formatted this way:\n *\n * ```json\n * {\n *   \"categories.lvl0\": \"products\",\n *   \"categories.lvl1\": \"products > fruits\",\n *   \"categories.lvl2\": \"products > fruits > citrus\"\n * }\n * ```\n *\n * It's also possible to provide more than one path for each level:\n *\n * ```json\n * {\n *   \"categories.lvl0\": [\"products\", \"goods\"],\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\n * }\n * ```\n *\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n *\n * @kind connector\n * @propType {string} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.\n * @propType {string} {React.Element} [separator=' > '] -  Specifies the level separator used in the data.\n * @propType {string} [rootURL=null] - The root element's URL (the originating page).\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @providedPropType {function} refine - a function to toggle a refinement\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the Breadcrumb can display.\n */\n\n\nexports.default = (0, _createConnector2.default)({\n  displayName: 'AlgoliaBreadcrumb',\n  propTypes: {\n    attributes: function attributes(props, propName, componentName) {\n      var isNotString = function isNotString(val) {\n        return typeof val !== 'string';\n      };\n\n      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {\n        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Expected an Array of Strings');\n      }\n\n      return undefined;\n    },\n    rootURL: _propTypes2.default.string,\n    separator: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),\n    transformItems: _propTypes2.default.func\n  },\n  defaultProps: {\n    rootURL: null,\n    separator: ' > '\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var id = getId(props);\n    var results = (0, _indexUtils.getResults)(searchResults, this.context);\n    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));\n\n    if (!isFacetPresent) {\n      return {\n        items: [],\n        canRefine: false\n      };\n    }\n\n    var values = results.getFacetValues(id);\n    var items = values.data ? transformValue(values.data) : [];\n    var transformedItems = props.transformItems ? props.transformItems(items) : items;\n    return {\n      canRefine: transformedItems.length > 0,\n      items: transformedItems\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, this.context);\n  }\n});","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/react-instantsearch/src/connectors/connectBreadcrumb.js"],"names":["Object","defineProperty","exports","value","getId","undefined","_propTypes","require","_propTypes2","_interopRequireDefault","_createConnector","_createConnector2","_indexUtils","obj","__esModule","default","_defineProperty","key","enumerable","configurable","writable","props","attributes","namespace","_refine","searchState","nextRefinement","context","id","nextValue","resetPage","refineValue","transformValue","values","reduce","acc","item","isRefined","push","label","name","path","data","concat","displayName","propTypes","propName","componentName","isNotString","val","Array","isArray","some","length","Error","rootURL","string","separator","oneOfType","element","transformItems","func","defaultProps","getProvidedProps","searchResults","results","getResults","isFacetPresent","Boolean","getFacetByName","items","canRefine","getFacetValues","transformedItems","refine"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getId = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createConnector = require('../core/createConnector');\n\nvar _createConnector2 = _interopRequireDefault(_createConnector);\n\nvar _indexUtils = require('../core/indexUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar getId = exports.getId = function getId(props) {\n  return props.attributes[0];\n};\n\nvar namespace = 'hierarchicalMenu';\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId(props);\n  var nextValue = _defineProperty({}, id, nextRefinement || '');\n  var resetPage = true;\n  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);\n}\n\nfunction transformValue(values) {\n  return values.reduce(function (acc, item) {\n    if (item.isRefined) {\n      acc.push({\n        label: item.name,\n        // If dealing with a nested \"items\", \"value\" is equal to the previous value concatenated with the current label\n        // If dealing with the first level, \"value\" is equal to the current label\n        value: item.path\n      });\n      // Create a variable in order to keep the same acc for the recursion, otherwise \"reduce\" returns a new one\n      if (item.data) {\n        acc = acc.concat(transformValue(item.data, acc));\n      }\n    }\n    return acc;\n  }, []);\n}\n\n/**\n * The breadcrumb component is s a type of secondary navigation scheme that\n * reveals the userâ€™s location in a website or web application.\n *\n * @name connectBreadcrumb\n * @requirements To use this widget, your attributes must be formatted in a specific way.\n * If you want for example to have a Breadcrumb of categories, objects in your index\n * should be formatted this way:\n *\n * ```json\n * {\n *   \"categories.lvl0\": \"products\",\n *   \"categories.lvl1\": \"products > fruits\",\n *   \"categories.lvl2\": \"products > fruits > citrus\"\n * }\n * ```\n *\n * It's also possible to provide more than one path for each level:\n *\n * ```json\n * {\n *   \"categories.lvl0\": [\"products\", \"goods\"],\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\n * }\n * ```\n *\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n *\n * @kind connector\n * @propType {string} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.\n * @propType {string} {React.Element} [separator=' > '] -  Specifies the level separator used in the data.\n * @propType {string} [rootURL=null] - The root element's URL (the originating page).\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @providedPropType {function} refine - a function to toggle a refinement\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the Breadcrumb can display.\n */\n\nexports.default = (0, _createConnector2.default)({\n  displayName: 'AlgoliaBreadcrumb',\n\n  propTypes: {\n    attributes: function attributes(props, propName, componentName) {\n      var isNotString = function isNotString(val) {\n        return typeof val !== 'string';\n      };\n      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {\n        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Expected an Array of Strings');\n      }\n      return undefined;\n    },\n    rootURL: _propTypes2.default.string,\n    separator: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),\n    transformItems: _propTypes2.default.func\n  },\n\n  defaultProps: {\n    rootURL: null,\n    separator: ' > '\n  },\n\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var id = getId(props);\n    var results = (0, _indexUtils.getResults)(searchResults, this.context);\n\n    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));\n\n    if (!isFacetPresent) {\n      return {\n        items: [],\n        canRefine: false\n      };\n    }\n\n    var values = results.getFacetValues(id);\n\n    var items = values.data ? transformValue(values.data) : [];\n\n    var transformedItems = props.transformItems ? props.transformItems(items) : items;\n\n    return {\n      canRefine: transformedItems.length > 0,\n      items: transformedItems\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, this.context);\n  }\n});"]},"metadata":{},"sourceType":"script"}