{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\Note\\\\Note.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport noteActions from '@iso/redux/notes/actions';\nimport NoteList from './NoteList';\nimport { ColorChoser } from '@iso/components/';\nimport Button from '@iso/components/uielements/button';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport NoteComponentWrapper from './Note.styles';\nimport { Textarea } from '@iso/components/uielements/input';\nconst {\n  changeNote,\n  addNote,\n  editNote,\n  deleteNote,\n  changeColor\n} = noteActions;\nconst {\n  Header,\n  Content\n} = _Layout;\nexport default function Notes() {\n  const {\n    notes,\n    selectedId,\n    colors,\n    seectedColor\n  } = useSelector(state => state.Notes);\n  const dispatch = useDispatch();\n\n  function updateNote(event) {\n    dispatch(editNote(selectedId, event.target.value));\n  }\n\n  const selectedNote = selectedId !== undefined ? notes.filter(note => note.id === selectedId)[0] : null;\n  return /*#__PURE__*/React.createElement(NoteComponentWrapper, {\n    className: \"isomorphicNoteComponent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '340px'\n    },\n    className: \"isoNoteListSidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NoteList, {\n    notes: notes,\n    selectedId: selectedId,\n    changeNote: id => dispatch(changeNote(id)),\n    deleteNote: id => dispatch(deleteNote(id)),\n    colors: colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Layout, {\n    className: \"isoNotepadWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    className: \"isoHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, selectedId !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoColorChooseWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ColorChoser, {\n    colors: colors,\n    changeColor: v => dispatch(changeColor(v)),\n    seectedColor: seectedColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"notes.ChoseColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }))) : '', /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    className: \"isoAddNoteBtn\",\n    onClick: () => dispatch(addNote()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"notes.addNote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Content, {\n    className: \"isoNoteEditingArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, selectedId !== undefined ? /*#__PURE__*/React.createElement(Textarea, {\n    className: \"isoNoteTextbox\",\n    value: selectedNote.note,\n    onChange: updateNote,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }) : '')));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/Note/Note.js"],"names":["React","useSelector","useDispatch","noteActions","NoteList","ColorChoser","Button","IntlMessages","NoteComponentWrapper","Textarea","changeNote","addNote","editNote","deleteNote","changeColor","Header","Content","Notes","notes","selectedId","colors","seectedColor","state","dispatch","updateNote","event","target","value","selectedNote","undefined","filter","note","id","width","v"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport noteActions from '@iso/redux/notes/actions';\r\nimport NoteList from './NoteList';\r\nimport { ColorChoser } from '@iso/components/';\r\nimport Button from '@iso/components/uielements/button';\r\nimport IntlMessages from '@iso/components/utility/intlMessages';\r\nimport NoteComponentWrapper from './Note.styles';\r\nimport { Textarea } from '@iso/components/uielements/input';\r\n\r\nconst { changeNote, addNote, editNote, deleteNote, changeColor } = noteActions;\r\nconst { Header, Content } = Layout;\r\nexport default function Notes() {\r\n  const { notes, selectedId, colors, seectedColor } = useSelector(\r\n    state => state.Notes\r\n  );\r\n  const dispatch = useDispatch();\r\n  function updateNote(event) {\r\n    dispatch(editNote(selectedId, event.target.value));\r\n  }\r\n  const selectedNote =\r\n    selectedId !== undefined\r\n      ? notes.filter(note => note.id === selectedId)[0]\r\n      : null;\r\n  return (\r\n    <NoteComponentWrapper className=\"isomorphicNoteComponent\">\r\n      <div style={{ width: '340px' }} className=\"isoNoteListSidebar\">\r\n        <NoteList\r\n          notes={notes}\r\n          selectedId={selectedId}\r\n          changeNote={id => dispatch(changeNote(id))}\r\n          deleteNote={id => dispatch(deleteNote(id))}\r\n          colors={colors}\r\n        />\r\n      </div>\r\n      <Layout className=\"isoNotepadWrapper\">\r\n        <Header className=\"isoHeader\">\r\n          {selectedId !== undefined ? (\r\n            <div className=\"isoColorChooseWrapper\">\r\n              <ColorChoser\r\n                colors={colors}\r\n                changeColor={v => dispatch(changeColor(v))}\r\n                seectedColor={seectedColor}\r\n              />{' '}\r\n              <span>\r\n                <IntlMessages id=\"notes.ChoseColor\" />\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"isoAddNoteBtn\"\r\n            onClick={() => dispatch(addNote())}\r\n          >\r\n            <IntlMessages id=\"notes.addNote\" />\r\n          </Button>\r\n        </Header>\r\n        <Content className=\"isoNoteEditingArea\">\r\n          {selectedId !== undefined ? (\r\n            <Textarea\r\n              className=\"isoNoteTextbox\"\r\n              value={selectedNote.note}\r\n              onChange={updateNote}\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            ''\r\n          )}\r\n          {/*{selectedId !== undefined ? <span>{`created at ${selectedNote.createTime}`}</span> : ''}*/}\r\n        </Content>\r\n      </Layout>\r\n    </NoteComponentWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}