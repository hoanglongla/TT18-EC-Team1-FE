{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar _require = require('@uppy/provider-views'),\n    ProviderViews = _require.ProviderViews;\n\nmodule.exports = /*#__PURE__*/function (_ProviderViews) {\n  _inheritsLoose(DriveProviderViews, _ProviderViews);\n\n  function DriveProviderViews() {\n    return _ProviderViews.apply(this, arguments) || this;\n  }\n\n  var _proto = DriveProviderViews.prototype;\n\n  _proto.toggleCheckbox = function toggleCheckbox(e, file) {\n    e.stopPropagation();\n    e.preventDefault(); // Shared Drives aren't selectable; for all else, defer to the base ProviderView.\n    // @todo isTeamDrive is left for backward compatibility. We should remove it in the next\n    // major release.\n\n    if (!file.custom.isTeamDrive && !file.custom.isSharedDrive) {\n      _ProviderViews.prototype.toggleCheckbox.call(this, e, file);\n    }\n  };\n\n  return DriveProviderViews;\n}(ProviderViews);","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/node_modules/@uppy/google-drive/lib/DriveProviderViews.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_require","require","ProviderViews","module","exports","_ProviderViews","DriveProviderViews","apply","arguments","_proto","toggleCheckbox","e","file","stopPropagation","preventDefault","custom","isTeamDrive","isSharedDrive","call"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAAED,EAAAA,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,CAACC,SAAzB,CAArB;AAA0DF,EAAAA,QAAQ,CAACE,SAAT,CAAmBG,WAAnB,GAAiCL,QAAjC;;AAA2CM,EAAAA,eAAe,CAACN,QAAD,EAAWC,UAAX,CAAf;AAAwC;;AAE7L,SAASK,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+B;AAAEF,EAAAA,eAAe,GAAGH,MAAM,CAACM,cAAP,IAAyB,SAASH,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+B;AAAED,IAAAA,CAAC,CAACG,SAAF,GAAcF,CAAd;AAAiB,WAAOD,CAAP;AAAW,GAAxG;;AAA0G,SAAOD,eAAe,CAACC,CAAD,EAAIC,CAAJ,CAAtB;AAA+B;;AAE1K,IAAIG,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAtB;AAAA,IACIC,aAAa,GAAGF,QAAQ,CAACE,aAD7B;;AAGAC,MAAM,CAACC,OAAP,GAAiB,aAAa,UAAUC,cAAV,EAA0B;AACtDjB,EAAAA,cAAc,CAACkB,kBAAD,EAAqBD,cAArB,CAAd;;AAEA,WAASC,kBAAT,GAA8B;AAC5B,WAAOD,cAAc,CAACE,KAAf,CAAqB,IAArB,EAA2BC,SAA3B,KAAyC,IAAhD;AACD;;AAED,MAAIC,MAAM,GAAGH,kBAAkB,CAACf,SAAhC;;AAEAkB,EAAAA,MAAM,CAACC,cAAP,GAAwB,SAASA,cAAT,CAAwBC,CAAxB,EAA2BC,IAA3B,EAAiC;AACvDD,IAAAA,CAAC,CAACE,eAAF;AACAF,IAAAA,CAAC,CAACG,cAAF,GAFuD,CAEnC;AACpB;AACA;;AAEA,QAAI,CAACF,IAAI,CAACG,MAAL,CAAYC,WAAb,IAA4B,CAACJ,IAAI,CAACG,MAAL,CAAYE,aAA7C,EAA4D;AAC1DZ,MAAAA,cAAc,CAACd,SAAf,CAAyBmB,cAAzB,CAAwCQ,IAAxC,CAA6C,IAA7C,EAAmDP,CAAnD,EAAsDC,IAAtD;AACD;AACF,GATD;;AAWA,SAAON,kBAAP;AACD,CArB6B,CAqB5BJ,aArB4B,CAA9B","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('@uppy/provider-views'),\n    ProviderViews = _require.ProviderViews;\n\nmodule.exports = /*#__PURE__*/function (_ProviderViews) {\n  _inheritsLoose(DriveProviderViews, _ProviderViews);\n\n  function DriveProviderViews() {\n    return _ProviderViews.apply(this, arguments) || this;\n  }\n\n  var _proto = DriveProviderViews.prototype;\n\n  _proto.toggleCheckbox = function toggleCheckbox(e, file) {\n    e.stopPropagation();\n    e.preventDefault(); // Shared Drives aren't selectable; for all else, defer to the base ProviderView.\n    // @todo isTeamDrive is left for backward compatibility. We should remove it in the next\n    // major release.\n\n    if (!file.custom.isTeamDrive && !file.custom.isSharedDrive) {\n      _ProviderViews.prototype.toggleCheckbox.call(this, e, file);\n    }\n  };\n\n  return DriveProviderViews;\n}(ProviderViews);"]},"metadata":{},"sourceType":"script"}