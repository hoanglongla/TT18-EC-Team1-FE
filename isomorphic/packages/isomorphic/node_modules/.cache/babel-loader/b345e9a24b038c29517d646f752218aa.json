{"ast":null,"code":"var _require = require('preact'),\n    h = _require.h;\n\nvar getAriaLabelOfCheckbox = function getAriaLabelOfCheckbox(props) {\n  if (props.type === 'folder') {\n    if (props.isChecked) {\n      return props.i18n('unselectAllFilesFromFolderNamed', {\n        name: props.title\n      });\n    }\n\n    return props.i18n('selectAllFilesFromFolderNamed', {\n      name: props.title\n    });\n  }\n\n  if (props.isChecked) {\n    return props.i18n('unselectFileNamed', {\n      name: props.title\n    });\n  }\n\n  return props.i18n('selectFileNamed', {\n    name: props.title\n  });\n}; // if folder:\n//   + checkbox (selects all files from folder)\n//   + folder name (opens folder)\n// if file:\n//   + checkbox (selects file)\n//   + file name (selects file)\n\n\nmodule.exports = function (props) {\n  return h(\"li\", {\n    className: props.className,\n    title: props.isDisabled ? props.restrictionReason : null\n  }, !props.isCheckboxDisabled ? h(\"button\", {\n    type: \"button\",\n    className: \"uppy-u-reset uppy-ProviderBrowserItem-fakeCheckbox \" + (props.isChecked ? 'uppy-ProviderBrowserItem-fakeCheckbox--is-checked' : ''),\n    onClick: props.toggleCheckbox // for the <label/>\n    ,\n    id: props.id,\n    role: \"option\",\n    \"aria-label\": getAriaLabelOfCheckbox(props),\n    \"aria-selected\": props.isChecked,\n    \"aria-disabled\": props.isDisabled,\n    disabled: props.isDisabled,\n    \"data-uppy-super-focusable\": true\n  }) : null, props.type === 'file' ? // label for a checkbox\n  h(\"label\", {\n    htmlFor: props.id,\n    className: \"uppy-u-reset uppy-ProviderBrowserItem-inner\"\n  }, h(\"div\", {\n    className: \"uppy-ProviderBrowserItem-iconWrap\"\n  }, props.itemIconEl), props.showTitles && props.title) : // button to open a folder\n  h(\"button\", {\n    type: \"button\",\n    className: \"uppy-u-reset uppy-ProviderBrowserItem-inner\",\n    onClick: props.handleFolderClick,\n    \"aria-label\": props.i18n('openFolderNamed', {\n      name: props.title\n    })\n  }, h(\"div\", {\n    className: \"uppy-ProviderBrowserItem-iconWrap\"\n  }, props.itemIconEl), props.showTitles && h(\"span\", null, props.title)));\n};","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/@uppy/provider-views/lib/Item/components/ListLi.js"],"names":["_require","require","h","getAriaLabelOfCheckbox","props","type","isChecked","i18n","name","title","module","exports","className","isDisabled","restrictionReason","isCheckboxDisabled","onClick","toggleCheckbox","id","role","disabled","htmlFor","itemIconEl","showTitles","handleFolderClick"],"mappings":"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","sourcesContent":["var _require = require('preact'),\n    h = _require.h;\n\nvar getAriaLabelOfCheckbox = function getAriaLabelOfCheckbox(props) {\n  if (props.type === 'folder') {\n    if (props.isChecked) {\n      return props.i18n('unselectAllFilesFromFolderNamed', {\n        name: props.title\n      });\n    }\n\n    return props.i18n('selectAllFilesFromFolderNamed', {\n      name: props.title\n    });\n  }\n\n  if (props.isChecked) {\n    return props.i18n('unselectFileNamed', {\n      name: props.title\n    });\n  }\n\n  return props.i18n('selectFileNamed', {\n    name: props.title\n  });\n}; // if folder:\n//   + checkbox (selects all files from folder)\n//   + folder name (opens folder)\n// if file:\n//   + checkbox (selects file)\n//   + file name (selects file)\n\n\nmodule.exports = function (props) {\n  return h(\"li\", {\n    className: props.className,\n    title: props.isDisabled ? props.restrictionReason : null\n  }, !props.isCheckboxDisabled ? h(\"button\", {\n    type: \"button\",\n    className: \"uppy-u-reset uppy-ProviderBrowserItem-fakeCheckbox \" + (props.isChecked ? 'uppy-ProviderBrowserItem-fakeCheckbox--is-checked' : ''),\n    onClick: props.toggleCheckbox // for the <label/>\n    ,\n    id: props.id,\n    role: \"option\",\n    \"aria-label\": getAriaLabelOfCheckbox(props),\n    \"aria-selected\": props.isChecked,\n    \"aria-disabled\": props.isDisabled,\n    disabled: props.isDisabled,\n    \"data-uppy-super-focusable\": true\n  }) : null, props.type === 'file' ? // label for a checkbox\n  h(\"label\", {\n    htmlFor: props.id,\n    className: \"uppy-u-reset uppy-ProviderBrowserItem-inner\"\n  }, h(\"div\", {\n    className: \"uppy-ProviderBrowserItem-iconWrap\"\n  }, props.itemIconEl), props.showTitles && props.title) : // button to open a folder\n  h(\"button\", {\n    type: \"button\",\n    className: \"uppy-u-reset uppy-ProviderBrowserItem-inner\",\n    onClick: props.handleFolderClick,\n    \"aria-label\": props.i18n('openFolderNamed', {\n      name: props.title\n    })\n  }, h(\"div\", {\n    className: \"uppy-ProviderBrowserItem-iconWrap\"\n  }, props.itemIconEl), props.showTitles && h(\"span\", null, props.title)));\n};"]},"metadata":{},"sourceType":"script"}