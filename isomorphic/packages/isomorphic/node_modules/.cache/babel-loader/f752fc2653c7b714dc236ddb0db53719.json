{"ast":null,"code":"var _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\Chat\\\\ChatRooms.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AddNewUser from './AddNewUser';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport Button from '@iso/components/uielements/button';\nimport HelperText from '@iso/components/utility/helper-text';\nimport chatActions from '@iso/redux/chat/actions';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport { UserListsWrapper, UserLists, SidebarSearchBox, Input, ChatSidebar } from './Messages.styles';\nconst {\n  setSelectedChatroom,\n  toggleMobileList,\n  toggleCompose\n} = chatActions;\n\nfunction filteredChatRooms(chatrooms) {\n  return chatrooms.filter(chatroom => chatroom.lastMessageTime > 0);\n}\n\nexport default function ChatRooms() {\n  const dispatch = useDispatch();\n  const {\n    users,\n    chatRooms,\n    selectedChatRoom\n  } = useSelector(state => state.Chat);\n  const {\n    view\n  } = useSelector(state => state.App);\n  const [currentChatRooms, setCurrentChatRooms] = React.useState(filteredChatRooms(chatRooms));\n  React.useEffect(() => {\n    setCurrentChatRooms(filteredChatRooms(chatRooms));\n  }, [chatRooms]);\n  const currentChatRoom = view === 'DesktopView' ? selectedChatRoom : {};\n\n  const onSearch = event => {\n    const value = event.target.value;\n    let searchedChatRooms = filteredChatRooms(chatRooms);\n\n    if (value.trim()) {\n      searchedChatRooms = searchedChatRooms.filter(chatRoom => chatRoom.otherUserInfo.name.toLowerCase().includes(value.toLowerCase()));\n    }\n\n    setCurrentChatRooms(searchedChatRooms);\n  };\n\n  const singleChatRoom = (chatRoom, index) => {\n    const {\n      otherUserInfo,\n      lastMessage,\n      lastMessageTime\n    } = chatRoom;\n    const {\n      name,\n      profileImageUrl\n    } = otherUserInfo;\n    const selected = currentChatRoom.id === chatRoom.id;\n    const style = {\n      background: selected ? '#f7f7f7' : 'rgba(0,0,0,0)'\n    };\n\n    const selectChatroom = event => {\n      event.stopPropagation();\n\n      if (!selected) {\n        dispatch(setSelectedChatroom(chatRoom));\n      }\n\n      if (toggleMobileList) {\n        dispatch(toggleMobileList(false));\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(UserLists, {\n      key: index,\n      style: style,\n      onClick: selectChatroom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userListsGravatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"#\",\n      style: {\n        width: 45,\n        height: 45\n      },\n      src: profileImageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userListsContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatExcerpt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, lastMessage), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"userListsTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, timeDifference(lastMessageTime)))));\n  };\n\n  return /*#__PURE__*/React.createElement(ChatSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SidebarSearchBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: onSearch,\n    placeholder: \"Search Contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddNewUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(UserListsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbars, {\n    style: {\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, currentChatRooms.length === 0 ? /*#__PURE__*/React.createElement(HelperText, {\n    text: \"No Conversation\",\n    className: \"messageHelperText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }) : currentChatRooms.map(singleChatRoom))), users.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ComposeMessageButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => dispatch(toggleCompose()),\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Compose\")));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/Chat/ChatRooms.js"],"names":["React","useDispatch","useSelector","AddNewUser","Scrollbars","Button","HelperText","chatActions","timeDifference","UserListsWrapper","UserLists","SidebarSearchBox","Input","ChatSidebar","setSelectedChatroom","toggleMobileList","toggleCompose","filteredChatRooms","chatrooms","filter","chatroom","lastMessageTime","ChatRooms","dispatch","users","chatRooms","selectedChatRoom","state","Chat","view","App","currentChatRooms","setCurrentChatRooms","useState","useEffect","currentChatRoom","onSearch","event","value","target","searchedChatRooms","trim","chatRoom","otherUserInfo","name","toLowerCase","includes","singleChatRoom","index","lastMessage","profileImageUrl","selected","id","style","background","selectChatroom","stopPropagation","width","height","length","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport AddNewUser from './AddNewUser';\r\nimport Scrollbars from '@iso/components/utility/customScrollBar';\r\nimport Button from '@iso/components/uielements/button';\r\nimport HelperText from '@iso/components/utility/helper-text';\r\nimport chatActions from '@iso/redux/chat/actions';\r\nimport { timeDifference } from '@iso/lib/helpers/utility';\r\nimport {\r\n  UserListsWrapper,\r\n  UserLists,\r\n  SidebarSearchBox,\r\n  Input,\r\n  ChatSidebar,\r\n} from './Messages.styles';\r\nconst { setSelectedChatroom, toggleMobileList, toggleCompose } = chatActions;\r\nfunction filteredChatRooms(chatrooms) {\r\n  return chatrooms.filter(chatroom => chatroom.lastMessageTime > 0);\r\n}\r\nexport default function ChatRooms() {\r\n  const dispatch = useDispatch();\r\n  const { users, chatRooms, selectedChatRoom } = useSelector(\r\n    state => state.Chat\r\n  );\r\n  const { view } = useSelector(state => state.App);\r\n  const [currentChatRooms, setCurrentChatRooms] = React.useState(\r\n    filteredChatRooms(chatRooms)\r\n  );\r\n  React.useEffect(() => {\r\n    setCurrentChatRooms(filteredChatRooms(chatRooms));\r\n  }, [chatRooms]);\r\n\r\n  const currentChatRoom = view === 'DesktopView' ? selectedChatRoom : {};\r\n\r\n  const onSearch = event => {\r\n    const value = event.target.value;\r\n\r\n    let searchedChatRooms = filteredChatRooms(chatRooms);\r\n    if (value.trim()) {\r\n      searchedChatRooms = searchedChatRooms.filter(chatRoom =>\r\n        chatRoom.otherUserInfo.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n    }\r\n    setCurrentChatRooms(searchedChatRooms);\r\n  };\r\n  const singleChatRoom = (chatRoom, index) => {\r\n    const { otherUserInfo, lastMessage, lastMessageTime } = chatRoom;\r\n    const { name, profileImageUrl } = otherUserInfo;\r\n    const selected = currentChatRoom.id === chatRoom.id;\r\n    const style = {\r\n      background: selected ? '#f7f7f7' : 'rgba(0,0,0,0)',\r\n    };\r\n    const selectChatroom = event => {\r\n      event.stopPropagation();\r\n\r\n      if (!selected) {\r\n        dispatch(setSelectedChatroom(chatRoom));\r\n      }\r\n      if (toggleMobileList) {\r\n        dispatch(toggleMobileList(false));\r\n      }\r\n    };\r\n    return (\r\n      <UserLists key={index} style={style} onClick={selectChatroom}>\r\n        <div className=\"userListsGravatar\">\r\n          <img\r\n            alt=\"#\"\r\n            style={{ width: 45, height: 45 }}\r\n            src={profileImageUrl}\r\n          />\r\n        </div>\r\n        <div className=\"userListsContent\">\r\n          <h4>{name}</h4>\r\n          <div className=\"chatExcerpt\">\r\n            <p>{lastMessage}</p>\r\n            <span className=\"userListsTime\">\r\n              {timeDifference(lastMessageTime)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </UserLists>\r\n    );\r\n  };\r\n  return (\r\n    <ChatSidebar>\r\n      <SidebarSearchBox>\r\n        <Input onChange={onSearch} placeholder=\"Search Contact\" />\r\n        <AddNewUser />\r\n      </SidebarSearchBox>\r\n      <UserListsWrapper>\r\n        <Scrollbars style={{ height: '100%' }}>\r\n          {currentChatRooms.length === 0 ? (\r\n            <HelperText text=\"No Conversation\" className=\"messageHelperText\" />\r\n          ) : (\r\n            currentChatRooms.map(singleChatRoom)\r\n          )}\r\n        </Scrollbars>\r\n      </UserListsWrapper>\r\n\r\n      {users.length > 0 && (\r\n        <div className=\"ComposeMessageButton\">\r\n          <Button onClick={() => dispatch(toggleCompose())} type=\"primary\">\r\n            Compose\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </ChatSidebar>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}