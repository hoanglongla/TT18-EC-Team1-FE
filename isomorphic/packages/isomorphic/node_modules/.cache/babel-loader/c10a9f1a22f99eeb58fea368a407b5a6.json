{"ast":null,"code":"var toArray = require('@uppy/utils/lib/toArray');\n\nvar getActiveOverlayEl = require('./getActiveOverlayEl');\n\nvar FOCUSABLE_ELEMENTS = require('@uppy/utils/lib/FOCUSABLE_ELEMENTS');\n\nfunction focusOnFirstNode(event, nodes) {\n  var node = nodes[0];\n\n  if (node) {\n    node.focus();\n    event.preventDefault();\n  }\n}\n\nfunction focusOnLastNode(event, nodes) {\n  var node = nodes[nodes.length - 1];\n\n  if (node) {\n    node.focus();\n    event.preventDefault();\n  }\n} // ___Why not just use (focusedItemIndex === -1)?\n//    Firefox thinks <ul> is focusable, but we don't have <ul>s in our FOCUSABLE_ELEMENTS. Which means that if we tab into the <ul>, code will think that we are not in the active overlay, and we should focusOnFirstNode() of the currently active overlay!\n//    [Practical check] if we use (focusedItemIndex === -1), instagram provider in firefox will never get focus on its pics in the <ul>.\n\n\nfunction isFocusInOverlay(activeOverlayEl) {\n  return activeOverlayEl.contains(document.activeElement);\n}\n\nfunction trapFocus(event, activeOverlayType, dashboardEl) {\n  var activeOverlayEl = getActiveOverlayEl(dashboardEl, activeOverlayType);\n  var focusableNodes = toArray(activeOverlayEl.querySelectorAll(FOCUSABLE_ELEMENTS));\n  var focusedItemIndex = focusableNodes.indexOf(document.activeElement); // If we pressed tab, and focus is not yet within the current overlay - focus on the first element within the current overlay.\n  // This is a safety measure (for when user returns from another tab e.g.), most plugins will try to focus on some important element as it loads.\n\n  if (!isFocusInOverlay(activeOverlayEl)) {\n    focusOnFirstNode(event, focusableNodes); // If we pressed shift + tab, and we're on the first element of a modal\n  } else if (event.shiftKey && focusedItemIndex === 0) {\n    focusOnLastNode(event, focusableNodes); // If we pressed tab, and we're on the last element of the modal\n  } else if (!event.shiftKey && focusedItemIndex === focusableNodes.length - 1) {\n    focusOnFirstNode(event, focusableNodes);\n  }\n}\n\nmodule.exports = {\n  // Traps focus inside of the currently open overlay (e.g. Dashboard, or e.g. Instagram), never lets focus disappear from the modal.\n  forModal: function forModal(event, activeOverlayType, dashboardEl) {\n    trapFocus(event, activeOverlayType, dashboardEl);\n  },\n  // Traps focus inside of the currently open overlay, unless overlay is null - then let the user tab away.\n  forInline: function forInline(event, activeOverlayType, dashboardEl) {\n    // ___When we're in the bare 'Drop files here, paste, browse or import from' screen\n    if (activeOverlayType === null) {// Do nothing and let the browser handle it, user can tab away from Uppy to other elements on the page\n      // ___When there is some overlay with 'Done' button\n    } else {\n      // Trap the focus inside this overlay!\n      // User can close the overlay (click 'Done') if they want to travel away from Uppy.\n      trapFocus(event, activeOverlayType, dashboardEl);\n    }\n  }\n};","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/node_modules/@uppy/dashboard/lib/utils/trapFocus.js"],"names":["toArray","require","getActiveOverlayEl","FOCUSABLE_ELEMENTS","focusOnFirstNode","event","nodes","node","focus","preventDefault","focusOnLastNode","length","isFocusInOverlay","activeOverlayEl","contains","document","activeElement","trapFocus","activeOverlayType","dashboardEl","focusableNodes","querySelectorAll","focusedItemIndex","indexOf","shiftKey","module","exports","forModal","forInline"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,yBAAD,CAArB;;AAEA,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,sBAAD,CAAhC;;AAEA,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,oCAAD,CAAhC;;AAEA,SAASG,gBAAT,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAwC;AACtC,MAAIC,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAhB;;AAEA,MAAIC,IAAJ,EAAU;AACRA,IAAAA,IAAI,CAACC,KAAL;AACAH,IAAAA,KAAK,CAACI,cAAN;AACD;AACF;;AAED,SAASC,eAAT,CAAyBL,KAAzB,EAAgCC,KAAhC,EAAuC;AACrC,MAAIC,IAAI,GAAGD,KAAK,CAACA,KAAK,CAACK,MAAN,GAAe,CAAhB,CAAhB;;AAEA,MAAIJ,IAAJ,EAAU;AACRA,IAAAA,IAAI,CAACC,KAAL;AACAH,IAAAA,KAAK,CAACI,cAAN;AACD;AACF,C,CAAC;AACF;AACA;;;AAGA,SAASG,gBAAT,CAA0BC,eAA1B,EAA2C;AACzC,SAAOA,eAAe,CAACC,QAAhB,CAAyBC,QAAQ,CAACC,aAAlC,CAAP;AACD;;AAED,SAASC,SAAT,CAAmBZ,KAAnB,EAA0Ba,iBAA1B,EAA6CC,WAA7C,EAA0D;AACxD,MAAIN,eAAe,GAAGX,kBAAkB,CAACiB,WAAD,EAAcD,iBAAd,CAAxC;AACA,MAAIE,cAAc,GAAGpB,OAAO,CAACa,eAAe,CAACQ,gBAAhB,CAAiClB,kBAAjC,CAAD,CAA5B;AACA,MAAImB,gBAAgB,GAAGF,cAAc,CAACG,OAAf,CAAuBR,QAAQ,CAACC,aAAhC,CAAvB,CAHwD,CAGe;AACvE;;AAEA,MAAI,CAACJ,gBAAgB,CAACC,eAAD,CAArB,EAAwC;AACtCT,IAAAA,gBAAgB,CAACC,KAAD,EAAQe,cAAR,CAAhB,CADsC,CACG;AAC1C,GAFD,MAEO,IAAIf,KAAK,CAACmB,QAAN,IAAkBF,gBAAgB,KAAK,CAA3C,EAA8C;AACnDZ,IAAAA,eAAe,CAACL,KAAD,EAAQe,cAAR,CAAf,CADmD,CACX;AACzC,GAFM,MAEA,IAAI,CAACf,KAAK,CAACmB,QAAP,IAAmBF,gBAAgB,KAAKF,cAAc,CAACT,MAAf,GAAwB,CAApE,EAAuE;AAC5EP,IAAAA,gBAAgB,CAACC,KAAD,EAAQe,cAAR,CAAhB;AACD;AACF;;AAEDK,MAAM,CAACC,OAAP,GAAiB;AACf;AACAC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBtB,KAAlB,EAAyBa,iBAAzB,EAA4CC,WAA5C,EAAyD;AACjEF,IAAAA,SAAS,CAACZ,KAAD,EAAQa,iBAAR,EAA2BC,WAA3B,CAAT;AACD,GAJc;AAKf;AACAS,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBvB,KAAnB,EAA0Ba,iBAA1B,EAA6CC,WAA7C,EAA0D;AACnE;AACA,QAAID,iBAAiB,KAAK,IAA1B,EAAgC,CAAC;AAC/B;AACD,KAFD,MAEO;AACL;AACA;AACAD,MAAAA,SAAS,CAACZ,KAAD,EAAQa,iBAAR,EAA2BC,WAA3B,CAAT;AACD;AACF;AAfc,CAAjB","sourcesContent":["var toArray = require('@uppy/utils/lib/toArray');\n\nvar getActiveOverlayEl = require('./getActiveOverlayEl');\n\nvar FOCUSABLE_ELEMENTS = require('@uppy/utils/lib/FOCUSABLE_ELEMENTS');\n\nfunction focusOnFirstNode(event, nodes) {\n  var node = nodes[0];\n\n  if (node) {\n    node.focus();\n    event.preventDefault();\n  }\n}\n\nfunction focusOnLastNode(event, nodes) {\n  var node = nodes[nodes.length - 1];\n\n  if (node) {\n    node.focus();\n    event.preventDefault();\n  }\n} // ___Why not just use (focusedItemIndex === -1)?\n//    Firefox thinks <ul> is focusable, but we don't have <ul>s in our FOCUSABLE_ELEMENTS. Which means that if we tab into the <ul>, code will think that we are not in the active overlay, and we should focusOnFirstNode() of the currently active overlay!\n//    [Practical check] if we use (focusedItemIndex === -1), instagram provider in firefox will never get focus on its pics in the <ul>.\n\n\nfunction isFocusInOverlay(activeOverlayEl) {\n  return activeOverlayEl.contains(document.activeElement);\n}\n\nfunction trapFocus(event, activeOverlayType, dashboardEl) {\n  var activeOverlayEl = getActiveOverlayEl(dashboardEl, activeOverlayType);\n  var focusableNodes = toArray(activeOverlayEl.querySelectorAll(FOCUSABLE_ELEMENTS));\n  var focusedItemIndex = focusableNodes.indexOf(document.activeElement); // If we pressed tab, and focus is not yet within the current overlay - focus on the first element within the current overlay.\n  // This is a safety measure (for when user returns from another tab e.g.), most plugins will try to focus on some important element as it loads.\n\n  if (!isFocusInOverlay(activeOverlayEl)) {\n    focusOnFirstNode(event, focusableNodes); // If we pressed shift + tab, and we're on the first element of a modal\n  } else if (event.shiftKey && focusedItemIndex === 0) {\n    focusOnLastNode(event, focusableNodes); // If we pressed tab, and we're on the last element of the modal\n  } else if (!event.shiftKey && focusedItemIndex === focusableNodes.length - 1) {\n    focusOnFirstNode(event, focusableNodes);\n  }\n}\n\nmodule.exports = {\n  // Traps focus inside of the currently open overlay (e.g. Dashboard, or e.g. Instagram), never lets focus disappear from the modal.\n  forModal: function forModal(event, activeOverlayType, dashboardEl) {\n    trapFocus(event, activeOverlayType, dashboardEl);\n  },\n  // Traps focus inside of the currently open overlay, unless overlay is null - then let the user tab away.\n  forInline: function forInline(event, activeOverlayType, dashboardEl) {\n    // ___When we're in the bare 'Drop files here, paste, browse or import from' screen\n    if (activeOverlayType === null) {// Do nothing and let the browser handle it, user can tab away from Uppy to other elements on the page\n      // ___When there is some overlay with 'Done' button\n    } else {\n      // Trap the focus inside this overlay!\n      // User can close the overlay (click 'Done') if they want to travel away from Uppy.\n      trapFocus(event, activeOverlayType, dashboardEl);\n    }\n  }\n};"]},"metadata":{},"sourceType":"script"}