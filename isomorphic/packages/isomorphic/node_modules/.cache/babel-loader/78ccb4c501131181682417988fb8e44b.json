{"ast":null,"code":"var _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\FirebaseForm\\\\FirebaseForm.js\";\nimport React from 'react';\nimport Button from '@iso/components/uielements/button';\nimport Input from '@iso/components/uielements/input';\nimport Modal from '@iso/components/Feedback/Modal';\nimport notification from '@iso/components/Feedback/Notification';\nimport { signInWithEmail, signUpWithEmailAndPassword, resetPassword } from '@iso/lib/firebase/firebase.authentication.util';\nexport default function (props) {\n  const [state, setState] = React.useState({\n    visible: false,\n    email: 'demo@gmail.com',\n    password: 'demodemo',\n    confirmLoading: false\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  const showModal = () => {\n    setState({ ...state,\n      visible: true\n    });\n  };\n\n  const handleCancel = e => {\n    setState({ ...state,\n      visible: false\n    });\n  };\n\n  const handleLogin = async () => {\n    const {\n      email,\n      password\n    } = state;\n\n    if (!(email && password)) {\n      notification('error', 'Please fill in email. and password');\n      return;\n    }\n\n    setState({ ...state,\n      confirmLoading: true\n    });\n    let user;\n    let message;\n    let data;\n\n    if (props.signup) {\n      try {\n        await signUpWithEmailAndPassword(email, password).then(authUser => {\n          user = authUser.user;\n          console.log(user, 'User');\n        });\n      } catch (error) {\n        message = error.message;\n        console.log(error.message, 'Error');\n      }\n    } else {\n      try {\n        await signInWithEmail(email, password).then(authUser => {\n          user = authUser.user;\n        });\n      } catch (error) {\n        message = error.message;\n        console.log(error.message, 'Error');\n      }\n    }\n\n    if (user) {\n      const token = await user.getIdToken();\n      props.login(token);\n      props.history.push('/dashboard');\n    } else {\n      notification('error', message);\n      setState({ ...state,\n        confirmLoading: false\n      });\n    }\n  };\n\n  const handleResetPassword = () => {\n    const {\n      email\n    } = state;\n\n    if (!email) {\n      notification('error', `Please fill in email.`);\n      return;\n    }\n\n    resetPassword(email).then(() => notification('success', `Password reset email sent to ${email}.`)).catch(error => notification('error', 'Email address not found.'));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: showModal,\n    className: \"btnFirebase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase'), /*#__PURE__*/React.createElement(Modal, {\n    title: props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase',\n    visible: state.visible,\n    confirmLoading: state.confirmLoading,\n    onCancel: handleCancel,\n    onOk: handleLogin,\n    className: \"isoFirebaseLoginModal\",\n    cancelText: \"Cancel\",\n    okText: props.signup ? 'Sign Up' : 'Login',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoInputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    size: \"large\",\n    placeholder: \"Email\",\n    value: state.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoInputWrapper\",\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    size: \"large\",\n    placeholder: \"Password\",\n    value: state.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"isoResetPass\",\n    onClick: handleResetPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Reset Password\"))));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/FirebaseForm/FirebaseForm.js"],"names":["React","Button","Input","Modal","notification","signInWithEmail","signUpWithEmailAndPassword","resetPassword","props","state","setState","useState","visible","email","password","confirmLoading","handleChange","e","name","value","target","showModal","handleCancel","handleLogin","user","message","data","signup","then","authUser","console","log","error","token","getIdToken","login","history","push","handleResetPassword","catch","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@iso/components/uielements/button';\r\nimport Input from '@iso/components/uielements/input';\r\nimport Modal from '@iso/components/Feedback/Modal';\r\nimport notification from '@iso/components/Feedback/Notification';\r\nimport {\r\n  signInWithEmail,\r\n  signUpWithEmailAndPassword,\r\n  resetPassword,\r\n} from '@iso/lib/firebase/firebase.authentication.util';\r\n\r\nexport default function(props) {\r\n  const [state, setState] = React.useState({\r\n    visible: false,\r\n    email: 'demo@gmail.com',\r\n    password: 'demodemo',\r\n    confirmLoading: false,\r\n  });\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const showModal = () => {\r\n    setState({\r\n      ...state,\r\n      visible: true,\r\n    });\r\n  };\r\n  const handleCancel = e => {\r\n    setState({\r\n      ...state,\r\n      visible: false,\r\n    });\r\n  };\r\n  const handleLogin = async () => {\r\n    const { email, password } = state;\r\n    if (!(email && password)) {\r\n      notification('error', 'Please fill in email. and password');\r\n      return;\r\n    }\r\n    setState({\r\n      ...state,\r\n      confirmLoading: true,\r\n    });\r\n    let user;\r\n    let message;\r\n    let data;\r\n    if (props.signup) {\r\n      try {\r\n        await signUpWithEmailAndPassword(email, password).then(authUser => {\r\n          user = authUser.user;\r\n          console.log(user, 'User');\r\n        });\r\n      } catch (error) {\r\n        message = error.message;\r\n        console.log(error.message, 'Error');\r\n      }\r\n    } else {\r\n      try {\r\n        await signInWithEmail(email, password).then(authUser => {\r\n          user = authUser.user;\r\n        });\r\n      } catch (error) {\r\n        message = error.message;\r\n        console.log(error.message, 'Error');\r\n      }\r\n    }\r\n    if (user) {\r\n      const token = await user.getIdToken();\r\n      props.login(token);\r\n      props.history.push('/dashboard');\r\n    } else {\r\n      notification('error', message);\r\n      setState({\r\n        ...state,\r\n        confirmLoading: false,\r\n      });\r\n    }\r\n  };\r\n  const handleResetPassword = () => {\r\n    const { email } = state;\r\n    if (!email) {\r\n      notification('error', `Please fill in email.`);\r\n      return;\r\n    }\r\n    resetPassword(email)\r\n      .then(() =>\r\n        notification('success', `Password reset email sent to ${email}.`)\r\n      )\r\n      .catch(error => notification('error', 'Email address not found.'));\r\n  };\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showModal} className=\"btnFirebase\">\r\n        {props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase'}\r\n      </Button>\r\n      <Modal\r\n        title={props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase'}\r\n        visible={state.visible}\r\n        confirmLoading={state.confirmLoading}\r\n        onCancel={handleCancel}\r\n        onOk={handleLogin}\r\n        className=\"isoFirebaseLoginModal\"\r\n        cancelText=\"Cancel\"\r\n        okText={props.signup ? 'Sign Up' : 'Login'}\r\n      >\r\n        <form>\r\n          <div className=\"isoInputWrapper\">\r\n            <label>Email</label>\r\n            <Input\r\n              name=\"email\"\r\n              size=\"large\"\r\n              placeholder=\"Email\"\r\n              value={state.email}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"isoInputWrapper\" style={{ marginBottom: 10 }}>\r\n            <label>Password</label>\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              size=\"large\"\r\n              placeholder=\"Password\"\r\n              value={state.password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <span className=\"isoResetPass\" onClick={handleResetPassword}>\r\n            Reset Password\r\n          </span>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}