{"ast":null,"code":"import _slicedToArray from \"D:\\\\Team6-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\packages\\\\hotel\\\\src\\\\container\\\\SinglePage\\\\SinglePageView.js\";\n\nimport React, { Fragment, useState } from 'react';\nimport { useLocation } from '@iso/lib/hooks/useLocation';\nimport Sticky from 'react-stickynode';\nimport Row from '@iso/ui/Antd/Grid/Row';\nimport Col from '@iso/ui/Antd/Grid/Col';\nimport Modal from '@iso/ui/Antd/Modal/Modal';\nimport Button from '@iso/ui/Antd/Button/Button';\nimport Container from '@iso/ui/UI/Container/Container';\nimport Loader from '@hotel/components/Loader/Loader';\nimport useWindowSize from '@iso/lib/hooks/useWindowSize';\nimport Infomation from './Description/Description';\nimport Amenities from './Amenities/Amenities';\nimport Location from './Location/Location';\nimport Review from './Review/Review';\nimport Reservation from './Reservation/Reservation';\nimport BottomReservation from './Reservation/BottomReservation';\nimport TopBar from './TopBar/TopBar';\nimport SinglePageWrapper, { PostImage } from './SinglePageView.style';\nimport PostImageGallery from './ImageGallery/ImageGallery';\nimport useDataApi from '@iso/lib/hooks/useDataApi';\nimport isEmpty from 'lodash/isEmpty';\nimport { HotelPostGridLoader } from '@iso/ui/ContentLoader/ContentLoader';\nimport Description1 from './Description1/Description1';\nimport { SINGLE_POST_PAGE } from '../../settings/constant';\nimport { PostsWrapper } from '../Listing/Listing.style';\nimport SectionGrid from '@hotel/components/SectionGrid/SectionGrid.cra';\nimport ListingMap from '../Listing/ListingMap';\n\nvar SinglePage = function SinglePage(_ref) {\n  var match = _ref.match;\n\n  var _useLocation = useLocation(),\n      href = _useLocation.href;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalShowing = _useState2[0],\n      setIsModalShowing = _useState2[1]; // useWindowSize hook\n  // useWindowSize hook\n\n\n  var _useWindowSize = useWindowSize(),\n      width = _useWindowSize.width;\n\n  var url = '/data/hotel-single.json';\n\n  if (!match.params.slug) {\n    url += match.params.slug;\n  }\n\n  var _useDataApi = useDataApi(url),\n      data = _useDataApi.data,\n      loading = _useDataApi.loading;\n\n  if (isEmpty(data) || loading) return /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 40\n    }\n  });\n  var _data$ = data[0],\n      reviews = _data$.reviews,\n      rating = _data$.rating,\n      ratingCount = _data$.ratingCount,\n      price = _data$.price,\n      title = _data$.title,\n      gallery = _data$.gallery,\n      location = _data$.location,\n      content = _data$.content,\n      amenities = _data$.amenities,\n      author = _data$.author;\n  return /*#__PURE__*/React.createElement(SinglePageWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TopBar, {\n    title: title,\n    shareURL: href,\n    author: author,\n    media: gallery,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Description1, {\n    content: content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Review, {\n    reviews: reviews,\n    ratingCount: ratingCount,\n    rating: rating,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SinglePage;","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/packages/hotel/src/container/SinglePage/SinglePageView.js"],"names":["React","Fragment","useState","useLocation","Sticky","Row","Col","Modal","Button","Container","Loader","useWindowSize","Infomation","Amenities","Location","Review","Reservation","BottomReservation","TopBar","SinglePageWrapper","PostImage","PostImageGallery","useDataApi","isEmpty","HotelPostGridLoader","Description1","SINGLE_POST_PAGE","PostsWrapper","SectionGrid","ListingMap","SinglePage","match","href","isModalShowing","setIsModalShowing","width","url","params","slug","data","loading","reviews","rating","ratingCount","price","title","gallery","location","content","amenities","author"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { useLocation } from '@iso/lib/hooks/useLocation';\r\nimport Sticky from 'react-stickynode';\r\nimport Row from '@iso/ui/Antd/Grid/Row';\r\nimport Col from '@iso/ui/Antd/Grid/Col';\r\nimport Modal from '@iso/ui/Antd/Modal/Modal';\r\nimport Button from '@iso/ui/Antd/Button/Button';\r\nimport Container from '@iso/ui/UI/Container/Container';\r\nimport Loader from '@hotel/components/Loader/Loader';\r\nimport useWindowSize from '@iso/lib/hooks/useWindowSize';\r\nimport Infomation from './Description/Description';\r\nimport Amenities from './Amenities/Amenities';\r\nimport Location from './Location/Location';\r\nimport Review from './Review/Review';\r\nimport Reservation from './Reservation/Reservation';\r\nimport BottomReservation from './Reservation/BottomReservation';\r\nimport TopBar from './TopBar/TopBar';\r\nimport SinglePageWrapper, { PostImage } from './SinglePageView.style';\r\nimport PostImageGallery from './ImageGallery/ImageGallery';\r\nimport useDataApi from '@iso/lib/hooks/useDataApi';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { HotelPostGridLoader } from '@iso/ui/ContentLoader/ContentLoader';\r\nimport Description1 from './Description1/Description1';\r\nimport { SINGLE_POST_PAGE } from '../../settings/constant';\r\nimport { PostsWrapper } from '../Listing/Listing.style';\r\nimport SectionGrid from '@hotel/components/SectionGrid/SectionGrid.cra';\r\nimport ListingMap from '../Listing/ListingMap';\r\nconst SinglePage = ({ match }) => {\r\n  const { href } = useLocation();\r\n  const [isModalShowing, setIsModalShowing] = useState(false);\r\n  // useWindowSize hook\r\n  \r\n\r\n  // useWindowSize hook\r\n  const { width } = useWindowSize();\r\n  let url = '/data/hotel-single.json';\r\n  if (!match.params.slug) {\r\n    url += match.params.slug;\r\n  }\r\n  const { data, loading } = useDataApi(url);\r\n  if (isEmpty(data) || loading) return <Loader />;\r\n  const {\r\n    reviews,\r\n    rating,\r\n    ratingCount,\r\n    price,\r\n    title,\r\n    gallery,\r\n    location,\r\n    content,\r\n    amenities,\r\n    author,\r\n  } = data[0];\r\n  \r\n  return (\r\n    <SinglePageWrapper>\r\n      <TopBar title={title} shareURL={href} author={author} media={gallery} />\r\n      \r\n      \r\n      <Description1 content={content} />\r\n      <Review reviews={reviews} ratingCount={ratingCount} rating={rating} />\r\n    </SinglePageWrapper>\r\n  );\r\n};\r\n\r\nexport default SinglePage;\r\n"]},"metadata":{},"sourceType":"module"}