{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\packages\\\\hotel\\\\src\\\\container\\\\Agent\\\\AccountSettings\\\\AgentCreateOrUpdateForm.js\";\n\nimport React, { Fragment } from 'react';\nimport moment from 'moment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport RenderCreateOrUpdateForm from '@hotel/components/Agent/RenderCreateOrUpdateForm';\nimport { dateFormat } from '@iso/lib/helpers/validators/fieldFormats';\nimport { FormTitle } from './AccountSettings.style';\nvar initialValues = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  agentGender: '',\n  phone_number: '',\n  preferredLanguage: '',\n  address: '',\n  describeYourself: '',\n  dateOfBirthday: moment(),\n  genderOptions: ['Male', 'Female', 'Other'],\n  languageOptions: ['English', 'Spanish', 'French', 'Russian']\n};\n\nvar profileBuildValidationSchema = function profileBuildValidationSchema() {\n  var maxDate = moment();\n  var date = new Date(maxDate);\n  return Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Email is Required!'),\n    firstName: Yup.string().required('First Name is Required!'),\n    lastName: Yup.string().required('Last Name is Required!'),\n    phone_number: Yup.number().required('Phone number is Required!'),\n    address: Yup.string().required('Address is Required!'),\n    dateOfBirthday: Yup.date().default(date).max(maxDate, \"Date of Birth should not be equal or later than \".concat(maxDate)).required('Date of Birth date required'),\n    preferredLanguage: Yup.string().oneOf(['English', 'Spanish', 'French', 'Russian']).required('Please choose your preferred language'),\n    agentGender: Yup.string().oneOf(['Male', 'Female', 'Other']).required('Please select Gender information')\n  });\n};\n\nvar handleSubmit = function handleSubmit(formProps) {\n  var firstName = formProps.firstName,\n      lastName = formProps.lastName,\n      email = formProps.email,\n      agentGender = formProps.agentGender,\n      phone_number = formProps.phone_number,\n      preferredLanguage = formProps.preferredLanguage,\n      address = formProps.address,\n      describeYourself = formProps.describeYourself,\n      dateOfBirthday = formProps.dateOfBirthday;\n  var selectedDate = moment(dateOfBirthday).format(dateFormat);\n  alert(\"First Name : \".concat(firstName, \"\\n    Last Name : \").concat(lastName, \"\\n    Email : \").concat(email, \" \\n    Gender : \").concat(agentGender, \"\\n    Date of Birth: \").concat(selectedDate, \"\\n    Phone Number : \").concat(phone_number, \"\\n    Preferred Language: \").concat(preferredLanguage, \"\\n    Address : \").concat(address, \"\\n    About Me: \").concat(describeYourself));\n};\n\nexport default (function () {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, \"Basic Information\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    render: RenderCreateOrUpdateForm,\n    validationSchema: profileBuildValidationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }));\n});","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/packages/hotel/src/container/Agent/AccountSettings/AgentCreateOrUpdateForm.js"],"names":["React","Fragment","moment","Formik","Yup","RenderCreateOrUpdateForm","dateFormat","FormTitle","initialValues","firstName","lastName","email","agentGender","phone_number","preferredLanguage","address","describeYourself","dateOfBirthday","genderOptions","languageOptions","profileBuildValidationSchema","maxDate","date","Date","object","shape","string","required","number","default","max","oneOf","handleSubmit","formProps","selectedDate","format","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,wBAAP,MAAqC,kDAArC;AACA,SAASC,UAAT,QAA2B,0CAA3B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE,EAHa;AAIpBC,EAAAA,WAAW,EAAE,EAJO;AAKpBC,EAAAA,YAAY,EAAE,EALM;AAMpBC,EAAAA,iBAAiB,EAAE,EANC;AAOpBC,EAAAA,OAAO,EAAE,EAPW;AAQpBC,EAAAA,gBAAgB,EAAE,EARE;AASpBC,EAAAA,cAAc,EAAEf,MAAM,EATF;AAUpBgB,EAAAA,aAAa,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAVK;AAWpBC,EAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,EAAiC,SAAjC;AAXG,CAAtB;;AAcA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAM;AACzC,MAAMC,OAAO,GAAGnB,MAAM,EAAtB;AACA,MAAMoB,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAT,CAAb;AACA,SAAOjB,GAAG,CAACoB,MAAJ,GAAaC,KAAb,CAAmB;AACxBd,IAAAA,KAAK,EAAEP,GAAG,CAACsB,MAAJ,GACJf,KADI,CACE,eADF,EAEJgB,QAFI,CAEK,oBAFL,CADiB;AAIxBlB,IAAAA,SAAS,EAAEL,GAAG,CAACsB,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CAJa;AAKxBjB,IAAAA,QAAQ,EAAEN,GAAG,CAACsB,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CALc;AAMxBd,IAAAA,YAAY,EAAET,GAAG,CAACwB,MAAJ,GAAaD,QAAb,CAAsB,2BAAtB,CANU;AAOxBZ,IAAAA,OAAO,EAAEX,GAAG,CAACsB,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CAPe;AAQxBV,IAAAA,cAAc,EAAEb,GAAG,CAACkB,IAAJ,GACbO,OADa,CACLP,IADK,EAEbQ,GAFa,CAGZT,OAHY,4DAIuCA,OAJvC,GAMbM,QANa,CAMJ,6BANI,CARQ;AAexBb,IAAAA,iBAAiB,EAAEV,GAAG,CAACsB,MAAJ,GAChBK,KADgB,CACV,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,EAAiC,SAAjC,CADU,EAEhBJ,QAFgB,CAEP,uCAFO,CAfK;AAkBxBf,IAAAA,WAAW,EAAER,GAAG,CAACsB,MAAJ,GACVK,KADU,CACJ,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CADI,EAEVJ,QAFU,CAED,kCAFC;AAlBW,GAAnB,CAAP;AAsBD,CAzBD;;AA2BA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAAC,SAAS,EAAI;AAChC,MACExB,SADF,GAUIwB,SAVJ,CACExB,SADF;AAAA,MAEEC,QAFF,GAUIuB,SAVJ,CAEEvB,QAFF;AAAA,MAGEC,KAHF,GAUIsB,SAVJ,CAGEtB,KAHF;AAAA,MAIEC,WAJF,GAUIqB,SAVJ,CAIErB,WAJF;AAAA,MAKEC,YALF,GAUIoB,SAVJ,CAKEpB,YALF;AAAA,MAMEC,iBANF,GAUImB,SAVJ,CAMEnB,iBANF;AAAA,MAOEC,OAPF,GAUIkB,SAVJ,CAOElB,OAPF;AAAA,MAQEC,gBARF,GAUIiB,SAVJ,CAQEjB,gBARF;AAAA,MASEC,cATF,GAUIgB,SAVJ,CASEhB,cATF;AAWA,MAAMiB,YAAY,GAAGhC,MAAM,CAACe,cAAD,CAAN,CAAuBkB,MAAvB,CAA8B7B,UAA9B,CAArB;AACA8B,EAAAA,KAAK,wBACa3B,SADb,+BAEWC,QAFX,2BAGOC,KAHP,6BAIQC,WAJR,kCAKcsB,YALd,kCAMcrB,YANd,uCAOmBC,iBAPnB,6BAQSC,OART,6BASSC,gBATT,EAAL;AAWD,CAxBD;;AA0BA,gBAAe;AAAA,sBACb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAER,aADjB;AAEE,IAAA,QAAQ,EAAEwB,YAFZ;AAGE,IAAA,MAAM,EAAE3B,wBAHV;AAIE,IAAA,gBAAgB,EAAEe,4BAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADa;AAAA,CAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport moment from 'moment';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport RenderCreateOrUpdateForm from '@hotel/components/Agent/RenderCreateOrUpdateForm';\r\nimport { dateFormat } from '@iso/lib/helpers/validators/fieldFormats';\r\nimport { FormTitle } from './AccountSettings.style';\r\n\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  agentGender: '',\r\n  phone_number: '',\r\n  preferredLanguage: '',\r\n  address: '',\r\n  describeYourself: '',\r\n  dateOfBirthday: moment(),\r\n  genderOptions: ['Male', 'Female', 'Other'],\r\n  languageOptions: ['English', 'Spanish', 'French', 'Russian'],\r\n};\r\n\r\nconst profileBuildValidationSchema = () => {\r\n  const maxDate = moment();\r\n  const date = new Date(maxDate);\r\n  return Yup.object().shape({\r\n    email: Yup.string()\r\n      .email('Invalid email')\r\n      .required('Email is Required!'),\r\n    firstName: Yup.string().required('First Name is Required!'),\r\n    lastName: Yup.string().required('Last Name is Required!'),\r\n    phone_number: Yup.number().required('Phone number is Required!'),\r\n    address: Yup.string().required('Address is Required!'),\r\n    dateOfBirthday: Yup.date()\r\n      .default(date)\r\n      .max(\r\n        maxDate,\r\n        `Date of Birth should not be equal or later than ${maxDate}`\r\n      )\r\n      .required('Date of Birth date required'),\r\n    preferredLanguage: Yup.string()\r\n      .oneOf(['English', 'Spanish', 'French', 'Russian'])\r\n      .required('Please choose your preferred language'),\r\n    agentGender: Yup.string()\r\n      .oneOf(['Male', 'Female', 'Other'])\r\n      .required('Please select Gender information'),\r\n  });\r\n};\r\n\r\nconst handleSubmit = formProps => {\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    agentGender,\r\n    phone_number,\r\n    preferredLanguage,\r\n    address,\r\n    describeYourself,\r\n    dateOfBirthday,\r\n  } = formProps;\r\n  const selectedDate = moment(dateOfBirthday).format(dateFormat);\r\n  alert(\r\n    `First Name : ${firstName}\r\n    Last Name : ${lastName}\r\n    Email : ${email} \r\n    Gender : ${agentGender}\r\n    Date of Birth: ${selectedDate}\r\n    Phone Number : ${phone_number}\r\n    Preferred Language: ${preferredLanguage}\r\n    Address : ${address}\r\n    About Me: ${describeYourself}`\r\n  );\r\n};\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <FormTitle>Basic Information</FormTitle>\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={handleSubmit}\r\n      render={RenderCreateOrUpdateForm}\r\n      validationSchema={profileBuildValidationSchema}\r\n    />\r\n  </Fragment>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}