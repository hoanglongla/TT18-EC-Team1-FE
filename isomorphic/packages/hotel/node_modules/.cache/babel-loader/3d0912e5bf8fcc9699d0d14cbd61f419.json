{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\hotel\\\\components\\\\SectionGrid\\\\SectionGrid.cra.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@iso/ui/Antd/Button/Button';\nimport Box from '@iso/ui/Box/Box';\nimport Text from '@iso/ui/Text/Text';\nimport ProductCard from '../ProductCard/ProductCard.cra';\n\nvar LoadMore = function LoadMore(_ref) {\n  var handleLoadMore = _ref.handleLoadMore,\n      showButton = _ref.showButton,\n      buttonText = _ref.buttonText,\n      loading = _ref.loading,\n      loadMoreComponent = _ref.loadMoreComponent,\n      loadMoreStyle = _ref.loadMoreStyle;\n  return !!showButton && /*#__PURE__*/React.createElement(Box, Object.assign({\n    className: \"loadmore_wrapper\"\n  }, loadMoreStyle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), loadMoreComponent ? loadMoreComponent : /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    onClick: handleLoadMore,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, buttonText || 'Load More'));\n};\n\nexport default function SectionGrid(_ref2) {\n  var _this2 = this;\n\n  var _ref2$data = _ref2.data,\n      data = _ref2$data === void 0 ? [] : _ref2$data,\n      totalItem = _ref2.totalItem,\n      limit = _ref2.limit,\n      columnWidth = _ref2.columnWidth,\n      paginationComponent = _ref2.paginationComponent,\n      handleLoadMore = _ref2.handleLoadMore,\n      loadMoreComponent = _ref2.loadMoreComponent,\n      placeholder = _ref2.placeholder,\n      loading = _ref2.loading,\n      buttonText = _ref2.buttonText,\n      rowStyle = _ref2.rowStyle,\n      columnStyle = _ref2.columnStyle,\n      loadMoreStyle = _ref2.loadMoreStyle,\n      link = _ref2.link;\n  var n = limit ? Number(limit) : 1;\n  var limits = Array(n).fill(0);\n  var showButton = data.length < totalItem;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, Object.assign({\n    className: \"grid_wrapper\"\n  }, rowStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), data && data.length ? data.map(function (item) {\n    return /*#__PURE__*/React.createElement(Box, Object.assign({\n      className: \"grid_column\",\n      width: columnWidth,\n      key: item.id\n    }, columnStyle, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ProductCard, {\n      link: link,\n      name: item.name,\n      columnWidth: columnWidth,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }));\n  }) : null, loading && limits.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(Box, Object.assign({\n      className: \"grid_column\",\n      width: columnWidth,\n      key: i\n    }, columnStyle, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), placeholder ? placeholder : /*#__PURE__*/React.createElement(Text, {\n      content: \"Loading ...\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 44\n      }\n    }));\n  })), showButton && /*#__PURE__*/React.createElement(LoadMore, {\n    showButton: showButton,\n    handleLoadMore: handleLoadMore,\n    loading: loading,\n    buttonText: buttonText,\n    loadMoreComponent: loadMoreComponent,\n    loadMoreStyle: loadMoreStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), paginationComponent && /*#__PURE__*/React.createElement(Box, {\n    className: \"pagination_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, paginationComponent));\n}\nSectionGrid.propTypes = {\n  data: PropTypes.array.isRequired,\n  totalItem: PropTypes.number,\n  columnWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n  paginationComponent: PropTypes.element,\n  handleLoadMore: PropTypes.func,\n  loadMoreComponent: PropTypes.element,\n  placeholder: PropTypes.element,\n  loading: PropTypes.bool,\n  limit: PropTypes.number,\n  buttonText: PropTypes.string,\n  rowStyle: PropTypes.object,\n  columnStyle: PropTypes.object,\n  loadMoreStyle: PropTypes.object\n};\nSectionGrid.defaultProps = {\n  rowStyle: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n    ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px']\n  },\n  columnStyle: {\n    pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\n    pl: ['10px', '10px', '10px', '10px', '10px', '15px']\n  },\n  loadMoreStyle: {\n    flexBox: true,\n    justifyContent: 'center',\n    mt: '1rem'\n  }\n};","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/hotel/components/SectionGrid/SectionGrid.cra.js"],"names":["React","PropTypes","Button","Box","Text","ProductCard","LoadMore","handleLoadMore","showButton","buttonText","loading","loadMoreComponent","loadMoreStyle","SectionGrid","data","totalItem","limit","columnWidth","paginationComponent","placeholder","rowStyle","columnStyle","link","n","Number","limits","Array","fill","length","map","item","id","name","i","propTypes","array","isRequired","number","oneOfType","string","element","func","bool","object","defaultProps","flexBox","flexWrap","mr","ml","pr","pl","justifyContent","mt"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@iso/ui/Antd/Button/Button';\r\nimport Box from '@iso/ui/Box/Box';\r\nimport Text from '@iso/ui/Text/Text';\r\nimport ProductCard from '../ProductCard/ProductCard.cra';\r\nconst LoadMore = ({\r\n  handleLoadMore,\r\n  showButton,\r\n  buttonText,\r\n  loading,\r\n  loadMoreComponent,\r\n  loadMoreStyle,\r\n}) => {\r\n  return (\r\n    !!showButton && (\r\n      <Box className=\"loadmore_wrapper\" {...loadMoreStyle}>\r\n        {loadMoreComponent ? (\r\n          loadMoreComponent\r\n        ) : (\r\n          <Button loading={loading} onClick={handleLoadMore}>\r\n            {buttonText || 'Load More'}\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    )\r\n  );\r\n};\r\n\r\nexport default function SectionGrid({\r\n  data = [],\r\n  totalItem,\r\n  limit,\r\n  columnWidth,\r\n  paginationComponent,\r\n  handleLoadMore,\r\n  loadMoreComponent,\r\n  placeholder,\r\n  loading,\r\n  buttonText,\r\n  rowStyle,\r\n  columnStyle,\r\n  loadMoreStyle,\r\n  link,\r\n}) {\r\n  const n = limit ? Number(limit) : 1;\r\n  const limits = Array(n).fill(0);\r\n\r\n  let showButton = data.length < totalItem;\r\n\r\n  return (\r\n    <>\r\n      <Box className=\"grid_wrapper\" {...rowStyle}>\r\n        {data && data.length\r\n          ? data.map(item => {\r\n              return (\r\n                <Box\r\n                  className=\"grid_column\"\r\n                  width={columnWidth}\r\n                  key={item.id}\r\n                  {...columnStyle}\r\n                >\r\n                  <ProductCard\r\n                    link={link}\r\n                    name= {item.name}\r\n                    columnWidth={columnWidth}\r\n                  />\r\n                </Box>\r\n              );\r\n            })\r\n          : null}\r\n        {loading &&\r\n          limits.map((item, i) => (\r\n            <Box\r\n              className=\"grid_column\"\r\n              width={columnWidth}\r\n              key={i}\r\n              {...columnStyle}\r\n            >\r\n              {placeholder ? placeholder : <Text content=\"Loading ...\" />}\r\n            </Box>\r\n          ))}\r\n      </Box>\r\n\r\n      {showButton && (\r\n        <LoadMore\r\n          showButton={showButton}\r\n          handleLoadMore={handleLoadMore}\r\n          loading={loading}\r\n          buttonText={buttonText}\r\n          loadMoreComponent={loadMoreComponent}\r\n          loadMoreStyle={loadMoreStyle}\r\n        />\r\n      )}\r\n      {paginationComponent && (\r\n        <Box className=\"pagination_wrapper\">{paginationComponent}</Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nSectionGrid.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  totalItem: PropTypes.number,\r\n  columnWidth: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n    PropTypes.array,\r\n  ]),\r\n  paginationComponent: PropTypes.element,\r\n  handleLoadMore: PropTypes.func,\r\n  loadMoreComponent: PropTypes.element,\r\n  placeholder: PropTypes.element,\r\n  loading: PropTypes.bool,\r\n  limit: PropTypes.number,\r\n  buttonText: PropTypes.string,\r\n  rowStyle: PropTypes.object,\r\n  columnStyle: PropTypes.object,\r\n  loadMoreStyle: PropTypes.object,\r\n};\r\n\r\nSectionGrid.defaultProps = {\r\n  rowStyle: {\r\n    flexBox: true,\r\n    flexWrap: 'wrap',\r\n    mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\r\n    ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\r\n  },\r\n  columnStyle: {\r\n    pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\r\n    pl: ['10px', '10px', '10px', '10px', '10px', '15px'],\r\n  },\r\n  loadMoreStyle: {\r\n    flexBox: true,\r\n    justifyContent: 'center',\r\n    mt: '1rem',\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}