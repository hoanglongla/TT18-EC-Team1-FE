{"ast":null,"code":"import _slicedToArray from \"D:\\\\For study\\\\Github\\\\GitClone\\\\Team6-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\For study\\\\Github\\\\GitClone\\\\Team6-FE\\\\isomorphic\\\\packages\\\\hotel\\\\src\\\\container\\\\Listing\\\\Listing.js\";\nimport React, { useState, Fragment } from 'react';\nimport Sticky from 'react-stickynode';\nimport Toolbar from '@iso/ui/UI/Toolbar/Toolbar';\nimport Switch from '@iso/ui/Antd/Switch/Switch';\nimport CategotySearch from '@hotel/components/Search/CategorySearch/CategotySearch';\nimport { HotelPostGridLoader } from '@iso/ui/ContentLoader/ContentLoader';\nimport SectionGrid from '@hotel/components/SectionGrid/SectionGrid.cra';\nimport ListingMap from './ListingMap';\nimport FilterDrawer from '@hotel/components/Search/MobileSearchView';\nimport useWindowSize from '@iso/lib/hooks/useWindowSize';\nimport useDataApi from '@iso/lib/hooks/useDataApi';\nimport { SINGLE_POST_PAGE } from '../../settings/constant';\nimport ListingWrapper, { PostsWrapper, Label, ShowMapSwitch } from './Listing.style';\nexport default function Listing(_ref) {\n  var location = _ref.location,\n      history = _ref.history;\n  var url = '/data/hotel.json';\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMap = _useState2[0],\n      setShowMap = _useState2[1];\n\n  if (location.search) {\n    url += location.search;\n  }\n\n  var _useDataApi = useDataApi(url),\n      data = _useDataApi.data,\n      loading = _useDataApi.loading,\n      loadMoreData = _useDataApi.loadMoreData,\n      total = _useDataApi.total,\n      limit = _useDataApi.limit;\n\n  var columnWidth = [1 / 2, 1 / 2, 1 / 3, 1 / 4, 1 / 5, 1 / 5, 1 / 6];\n\n  if (showMap) {\n    columnWidth = [1 / 2, 1 / 2, 1 / 2, 1 / 2, 1 / 3];\n  } // useWindowSize hook\n\n\n  var _useWindowSize = useWindowSize(),\n      width = _useWindowSize.width; // map toggle handler\n\n\n  var handleMapToggle = function handleMapToggle() {\n    setShowMap(function (showMap) {\n      return !showMap;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ListingWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    top: 82,\n    innerZ: 999,\n    activeClass: \"isHeaderSticky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    left: width > 991 ? /*#__PURE__*/React.createElement(CategotySearch, {\n      history: history,\n      location: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(FilterDrawer, {\n      history: history,\n      location: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }),\n    right: /*#__PURE__*/React.createElement(ShowMapSwitch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, \"Show map\"), /*#__PURE__*/React.createElement(Switch, {\n      defaultChecked: false,\n      onChange: handleMapToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PostsWrapper, {\n    className: width > 767 && showMap ? 'col-12' : 'col-24',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionGrid, {\n    link: SINGLE_POST_PAGE,\n    columnWidth: columnWidth,\n    data: data,\n    totalItem: total.length,\n    loading: loading,\n    limit: limit,\n    handleLoadMore: loadMoreData,\n    placeholder: /*#__PURE__*/React.createElement(HotelPostGridLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), showMap && /*#__PURE__*/React.createElement(ListingMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["D:/For study/Github/GitClone/Team6-FE/isomorphic/packages/hotel/src/container/Listing/Listing.js"],"names":["React","useState","Fragment","Sticky","Toolbar","Switch","CategotySearch","HotelPostGridLoader","SectionGrid","ListingMap","FilterDrawer","useWindowSize","useDataApi","SINGLE_POST_PAGE","ListingWrapper","PostsWrapper","Label","ShowMapSwitch","Listing","location","history","url","showMap","setShowMap","search","data","loading","loadMoreData","total","limit","columnWidth","width","handleMapToggle","length"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport Sticky from 'react-stickynode';\nimport Toolbar from '@iso/ui/UI/Toolbar/Toolbar';\nimport Switch from '@iso/ui/Antd/Switch/Switch';\nimport CategotySearch from '@hotel/components/Search/CategorySearch/CategotySearch';\nimport { HotelPostGridLoader } from '@iso/ui/ContentLoader/ContentLoader';\nimport SectionGrid from '@hotel/components/SectionGrid/SectionGrid.cra';\nimport ListingMap from './ListingMap';\nimport FilterDrawer from '@hotel/components/Search/MobileSearchView';\nimport useWindowSize from '@iso/lib/hooks/useWindowSize';\nimport useDataApi from '@iso/lib/hooks/useDataApi';\nimport { SINGLE_POST_PAGE } from '../../settings/constant';\n\nimport ListingWrapper, {\n  PostsWrapper,\n  Label,\n  ShowMapSwitch,\n} from './Listing.style';\n\nexport default function Listing({ location, history }) {\n  let url = '/data/hotel.json';\n  const [showMap, setShowMap] = useState(false);\n\n  if (location.search) {\n    url += location.search;\n  }\n  const { data, loading, loadMoreData, total, limit } = useDataApi(url);\n  let columnWidth = [1 / 2, 1 / 2, 1 / 3, 1 / 4, 1 / 5, 1 / 5, 1 / 6];\n\n  if (showMap) {\n    columnWidth = [1 / 2, 1 / 2, 1 / 2, 1 / 2, 1 / 3];\n  }\n\n  // useWindowSize hook\n  const { width } = useWindowSize();\n\n  // map toggle handler\n  const handleMapToggle = () => {\n    setShowMap(showMap => !showMap);\n  };\n\n  return (\n    <ListingWrapper>\n      <Sticky top={82} innerZ={999} activeClass=\"isHeaderSticky\">\n        <Toolbar\n          left={\n            width > 991 ? (\n              <CategotySearch history={history} location={location} />\n            ) : (\n              <FilterDrawer history={history} location={location} />\n            )\n          }\n          right={\n            <ShowMapSwitch>\n              <Label>Show map</Label>\n              <Switch defaultChecked={false} onChange={handleMapToggle} />\n            </ShowMapSwitch>\n          }\n        />\n      </Sticky>\n\n      <Fragment>\n        <PostsWrapper className={width > 767 && showMap ? 'col-12' : 'col-24'}>\n          <SectionGrid\n            link={SINGLE_POST_PAGE}\n            columnWidth={columnWidth}\n            data={data}\n            totalItem={total.length}\n            loading={loading}\n            limit={limit}\n            handleLoadMore={loadMoreData}\n            placeholder={<HotelPostGridLoader />}\n          />\n        </PostsWrapper>\n\n        {showMap && <ListingMap />}\n      </Fragment>\n    </ListingWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}