{"ast":null,"code":"import _slicedToArray from \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport throttle from 'lodash/throttle';\nvar events = new Set();\n\nvar onResize = function onResize() {\n  return events.forEach(function (fn) {\n    return fn();\n  });\n};\n\nvar useWindowSize = function useWindowSize() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$throttleMs = options.throttleMs,\n      throttleMs = _options$throttleMs === void 0 ? 100 : _options$throttleMs;\n\n  var _React$useState = React.useState({\n    width: process.browser && window.innerWidth,\n    height: process.browser && window.innerHeight\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      size = _React$useState2[0],\n      setSize = _React$useState2[1];\n\n  var handle = throttle(function () {\n    setSize({\n      width: process.browser && window.innerWidth,\n      height: process.browser && window.innerHeight\n    });\n  }, throttleMs);\n  React.useEffect(function () {\n    if (events.size === 0) {\n      window.addEventListener('resize', onResize, true);\n    }\n\n    events.add(handle);\n    return function () {\n      events.delete(handle);\n\n      if (events.size === 0) {\n        window.removeEventListener('resize', onResize, true);\n      }\n    };\n  }, []);\n  return size;\n};\n\nexport default useWindowSize;","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/common/library/hooks/useWindowSize.js"],"names":["React","throttle","events","Set","onResize","forEach","fn","useWindowSize","options","throttleMs","useState","width","process","browser","window","innerWidth","height","innerHeight","size","setSize","handle","useEffect","addEventListener","add","delete","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,IAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMF,MAAM,CAACG,OAAP,CAAe,UAAAC,EAAE;AAAA,WAAIA,EAAE,EAAN;AAAA,GAAjB,CAAN;AAAA,CAAjB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAkB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AACtC,4BAA6BA,OAA7B,CAAQC,UAAR;AAAA,MAAQA,UAAR,oCAAqB,GAArB;;AACA,wBAAwBT,KAAK,CAACU,QAAN,CAAe;AACrCC,IAAAA,KAAK,EAAEC,OAAO,CAACC,OAAR,IAAmBC,MAAM,CAACC,UADI;AAErCC,IAAAA,MAAM,EAAEJ,OAAO,CAACC,OAAR,IAAmBC,MAAM,CAACG;AAFG,GAAf,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAKA,MAAMC,MAAM,GAAGnB,QAAQ,CAAC,YAAM;AAC5BkB,IAAAA,OAAO,CAAC;AACNR,MAAAA,KAAK,EAAEC,OAAO,CAACC,OAAR,IAAmBC,MAAM,CAACC,UAD3B;AAENC,MAAAA,MAAM,EAAEJ,OAAO,CAACC,OAAR,IAAmBC,MAAM,CAACG;AAF5B,KAAD,CAAP;AAID,GALsB,EAKpBR,UALoB,CAAvB;AAOAT,EAAAA,KAAK,CAACqB,SAAN,CAAgB,YAAM;AACpB,QAAInB,MAAM,CAACgB,IAAP,KAAgB,CAApB,EAAuB;AACrBJ,MAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkClB,QAAlC,EAA4C,IAA5C;AACD;;AAEDF,IAAAA,MAAM,CAACqB,GAAP,CAAWH,MAAX;AAEA,WAAO,YAAM;AACXlB,MAAAA,MAAM,CAACsB,MAAP,CAAcJ,MAAd;;AAEA,UAAIlB,MAAM,CAACgB,IAAP,KAAgB,CAApB,EAAuB;AACrBJ,QAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCrB,QAArC,EAA+C,IAA/C;AACD;AACF,KAND;AAOD,GAdD,EAcG,EAdH;AAgBA,SAAOc,IAAP;AACD,CA/BD;;AAiCA,eAAeX,aAAf","sourcesContent":["import React from 'react';\r\nimport throttle from 'lodash/throttle';\r\nconst events = new Set();\r\nconst onResize = () => events.forEach(fn => fn());\r\n\r\nconst useWindowSize = (options = {}) => {\r\n  const { throttleMs = 100 } = options;\r\n  const [size, setSize] = React.useState({\r\n    width: process.browser && window.innerWidth,\r\n    height: process.browser && window.innerHeight,\r\n  });\r\n\r\n  const handle = throttle(() => {\r\n    setSize({\r\n      width: process.browser && window.innerWidth,\r\n      height: process.browser && window.innerHeight,\r\n    });\r\n  }, throttleMs);\r\n\r\n  React.useEffect(() => {\r\n    if (events.size === 0) {\r\n      window.addEventListener('resize', onResize, true);\r\n    }\r\n\r\n    events.add(handle);\r\n\r\n    return () => {\r\n      events.delete(handle);\r\n\r\n      if (events.size === 0) {\r\n        window.removeEventListener('resize', onResize, true);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return size;\r\n};\r\n\r\nexport default useWindowSize;\r\n"]},"metadata":{},"sourceType":"module"}