{"ast":null,"code":"import _slicedToArray from \"D:\\\\For study\\\\Github\\\\GitClone\\\\Team6-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"D:\\\\For study\\\\Github\\\\GitClone\\\\Team6-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"field\", \"form\"];\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\For study\\\\Github\\\\GitClone\\\\Team6-FE\\\\isomorphic\\\\shared\\\\hotel\\\\components\\\\Listing\\\\RenderLocationInputForm.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Map from '../Map/Map';\nimport MapWithSearchBox from '../Map/MapSearchBox';\nimport MapLocationBox, { MapDataHelper } from '../Map/MapLocationBox';\nexport var FormMapComponent = function FormMapComponent(_ref) {\n  var field = _ref.field,\n      form = _ref.form,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var tempFormData = [];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      formLocationState = _useState2[0],\n      setFormLocationState = _useState2[1];\n\n  var getUpdateValue = function getUpdateValue(value) {\n    setFormLocationState(value);\n  };\n\n  if (formLocationState) {\n    tempFormData = MapDataHelper(formLocationState);\n  }\n\n  useEffect(function () {\n    form.setFieldValue(field.name, tempFormData[0]);\n  }, [formLocationState]);\n  return /*#__PURE__*/React.createElement(Map, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MapWithSearchBox, Object.assign({\n    draggable: true,\n    updatevalue: function updatevalue(value) {\n      return getUpdateValue(value);\n    }\n  }, field, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(MapLocationBox, {\n    infoValue: formLocationState,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["D:/For study/Github/GitClone/Team6-FE/isomorphic/shared/hotel/components/Listing/RenderLocationInputForm.js"],"names":["React","useState","useEffect","Map","MapWithSearchBox","MapLocationBox","MapDataHelper","FormMapComponent","field","form","props","tempFormData","formLocationState","setFormLocationState","getUpdateValue","value","setFieldValue","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,cAAP,IAAyBC,aAAzB,QAA8C,uBAA9C;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAI1B;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADDC,KACC;;AACJ,MAAIC,YAAY,GAAG,EAAnB;;AACA,kBAAkDV,QAAQ,CAAC,EAAD,CAA1D;AAAA;AAAA,MAAOW,iBAAP;AAAA,MAA0BC,oBAA1B;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC9BF,IAAAA,oBAAoB,CAACE,KAAD,CAApB;AACD,GAFD;;AAIA,MAAIH,iBAAJ,EAAuB;AACrBD,IAAAA,YAAY,GAAGL,aAAa,CAACM,iBAAD,CAA5B;AACD;;AAEDV,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,IAAI,CAACO,aAAL,CAAmBR,KAAK,CAACS,IAAzB,EAA+BN,YAAY,CAAC,CAAD,CAA3C;AACD,GAFQ,EAEN,CAACC,iBAAD,CAFM,CAAT;AAIA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,SAAS,EAAE,IADb;AAEE,IAAA,WAAW,EAAE,qBAAAG,KAAK;AAAA,aAAID,cAAc,CAACC,KAAD,CAAlB;AAAA;AAFpB,KAGMP,KAHN,EAIME,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAOE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEE,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CA9BM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Map from '../Map/Map';\nimport MapWithSearchBox from '../Map/MapSearchBox';\nimport MapLocationBox, { MapDataHelper } from '../Map/MapLocationBox';\n\nexport const FormMapComponent = ({\n  field, // { name, value, onChange, onBlur }\n  form, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc,\n  ...props\n}) => {\n  let tempFormData = [];\n  const [formLocationState, setFormLocationState] = useState([]);\n  const getUpdateValue = value => {\n    setFormLocationState(value);\n  };\n\n  if (formLocationState) {\n    tempFormData = MapDataHelper(formLocationState);\n  }\n\n  useEffect(() => {\n    form.setFieldValue(field.name, tempFormData[0]);\n  }, [formLocationState]);\n\n  return (\n    <Map>\n      <MapWithSearchBox\n        draggable={true}\n        updatevalue={value => getUpdateValue(value)}\n        {...field}\n        {...props}\n      />\n      <MapLocationBox infoValue={formLocationState} />\n    </Map>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}