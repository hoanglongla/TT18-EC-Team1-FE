{"ast":null,"code":"import _objectSpread from \"D:\\\\Team6-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Team6-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\hotel\\\\components\\\\Map\\\\MapSearchBox.js\",\n    _this = this;\n\nimport React, { Fragment, useState, useRef } from 'react';\nimport _ from 'lodash';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose, withProps, lifecycle } from 'recompose';\nimport Input from '@iso/ui/Antd/Input/Input';\nimport MakerImage from './hotelMapMarker.png';\n\nvar _require = require('react-google-maps/lib/components/places/SearchBox'),\n    SearchBox = _require.SearchBox;\n\nvar MapWithSearchBoxComp = compose(withProps({\n  googleMapURL: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\n  loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }),\n  containerElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  }),\n  mapElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  })\n}), withScriptjs, withGoogleMap)(function (props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dragNDropData = _useState2[0],\n      setDragNDropData = _useState2[1];\n\n  var getinputvalue = props.getinputvalue;\n\n  var _useState3 = useState({\n    searchedLocation: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationInput = _useState4[0],\n      setLocationInput = _useState4[1];\n\n  var _useState5 = useState({\n    center: {\n      lat: 40.7128,\n      lng: -74.006\n    },\n    markers: [{\n      position: {\n        lat: 40.7128,\n        lng: -74.006\n      }\n    }],\n    places: []\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      locationDetails = _useState6[0],\n      setLocationDetails = _useState6[1];\n\n  var googleMapRef = useRef({});\n  var SearchBoxRef = useRef({});\n\n  var onPlacesChanged = function onPlacesChanged() {\n    var places = SearchBoxRef.current.getPlaces();\n    var bounds = new window.google.maps.LatLngBounds();\n    console.log(places, bounds);\n    places.forEach(function (place) {\n      if (place.geometry.viewport) {\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n    });\n    var nextMarkers = places.map(function (place) {\n      return {\n        position: place.geometry.location\n      };\n    });\n\n    var nextCenter = _.get(nextMarkers, '0.position', locationDetails.center);\n\n    console.log(nextCenter, 'nextCenter');\n    setLocationDetails({\n      places: places,\n      center: nextCenter,\n      markers: nextMarkers\n    });\n    setLocationInput({\n      searchedLocation: places && places[0] && places[0].formatted_address\n    });\n  };\n\n  var handleOnChange = function handleOnChange(event) {\n    if (event.which == '13') {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setLocationInput({\n      searchedLocation: event.target.value\n    });\n  };\n\n  var handleOnPressEnter = function handleOnPressEnter(event) {\n    if (event.which == '13') {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setLocationInput({\n      searchedLocation: event.target.value\n    });\n  };\n\n  var onDragEndFunc = function onDragEndFunc(marker) {\n    var tempLocArray = [];\n    var geocoder = new window.google.maps.Geocoder();\n    var latlng = {\n      lat: Number(marker.latLng.lat().toFixed(4)),\n      lng: Number(marker.latLng.lng().toFixed(4))\n    };\n    setLocationDetails(_objectSpread(_objectSpread({}, locationDetails), {}, {\n      center: latlng\n    }));\n    geocoder.geocode({\n      latLng: latlng\n    }, function (results, status) {\n      if (results[0] && results[0].formatted_address) {\n        setLocationInput({\n          searchedLocation: results[0] && results[0].formatted_address\n        });\n        var location = {\n          place_id: results[0].place_id,\n          formatted_address: results[0].formatted_address,\n          address_components: results[0].address_components,\n          geometry: results[0].geometry\n        };\n        tempLocArray.push(location);\n      }\n\n      setDragNDropData(tempLocArray);\n    });\n  };\n\n  if (dragNDropData && dragNDropData.length !== 0) {\n    getinputvalue(dragNDropData);\n  } else {\n    getinputvalue(locationDetails.places);\n  }\n\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    ref: googleMapRef,\n    defaultZoom: 15,\n    center: locationDetails.center,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchBox, {\n    ref: SearchBoxRef,\n    controlPosition: window.google.maps.ControlPosition.TOP_LEFT,\n    onPlacesChanged: onPlacesChanged,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Enter your hotel location\",\n    style: {\n      boxSizing: \"border-box\",\n      border: \"1px solid transparent\",\n      width: \"260px\",\n      height: \"40px\",\n      marginTop: \"10px\",\n      padding: \"0 12px\",\n      borderRadius: \"2px\",\n      boxShadow: \"0 3px 6px rgba(0, 0, 0, 0.16)\",\n      fontSize: \"15px\",\n      outline: \"none\",\n      textOverflow: \"ellipses\"\n    },\n    defaultValue: \"\",\n    value: locationInput ? locationInput.searchedLocation : '',\n    onChange: handleOnChange,\n    onPressEnter: handleOnPressEnter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })), locationDetails.markers.map(function (marker, index) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      icon: MakerImage,\n      key: index,\n      position: marker.position,\n      draggable: true,\n      onDragEnd: function onDragEnd(marker) {\n        return onDragEndFunc(marker);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    });\n  }));\n});\n\nvar MapWithSearchBox = function MapWithSearchBox(props) {\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mapValue = _useState8[0],\n      setMapValue = _useState8[1];\n\n  var updatevalue = props.updatevalue;\n\n  var updateFunc = function updateFunc(value) {\n    setMapValue(value);\n  };\n\n  updatevalue(mapValue);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MapWithSearchBoxComp, Object.assign({\n    getinputvalue: function getinputvalue(value) {\n      return updateFunc(value);\n    }\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default MapWithSearchBox;","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/hotel/components/Map/MapSearchBox.js"],"names":["React","Fragment","useState","useRef","_","withScriptjs","withGoogleMap","GoogleMap","Marker","compose","withProps","lifecycle","Input","MakerImage","require","SearchBox","MapWithSearchBoxComp","googleMapURL","process","env","REACT_APP_GOOGLE_MAP_API_KEY","loadingElement","height","containerElement","mapElement","props","dragNDropData","setDragNDropData","getinputvalue","searchedLocation","locationInput","setLocationInput","center","lat","lng","markers","position","places","locationDetails","setLocationDetails","googleMapRef","SearchBoxRef","onPlacesChanged","current","getPlaces","bounds","window","google","maps","LatLngBounds","console","log","forEach","place","geometry","viewport","union","extend","location","nextMarkers","map","nextCenter","get","formatted_address","handleOnChange","event","which","preventDefault","stopPropagation","target","value","handleOnPressEnter","onDragEndFunc","marker","tempLocArray","geocoder","Geocoder","latlng","Number","latLng","toFixed","geocode","results","status","place_id","address_components","push","length","ControlPosition","TOP_LEFT","boxSizing","border","width","marginTop","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","index","MapWithSearchBox","mapValue","setMapValue","updatevalue","updateFunc"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from 'react-google-maps';\r\nimport { compose, withProps, lifecycle } from 'recompose';\r\nimport Input from '@iso/ui/Antd/Input/Input';\r\nimport MakerImage from './hotelMapMarker.png';\r\nconst {\r\n  SearchBox,\r\n} = require('react-google-maps/lib/components/places/SearchBox');\r\n\r\nconst MapWithSearchBoxComp = compose(\r\n  withProps({\r\n    googleMapURL: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: `400px` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />,\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props => {\r\n  const [dragNDropData, setDragNDropData] = useState([]);\r\n  const { getinputvalue } = props;\r\n  const [locationInput, setLocationInput] = useState({ searchedLocation: '' });\r\n  const [locationDetails, setLocationDetails] = useState({\r\n    center: {\r\n      lat: 40.7128,\r\n      lng: -74.006,\r\n    },\r\n    markers: [\r\n      {\r\n        position: {\r\n          lat: 40.7128,\r\n          lng: -74.006,\r\n        },\r\n      },\r\n    ],\r\n    places: [],\r\n  });\r\n  const googleMapRef = useRef({});\r\n  const SearchBoxRef = useRef({});\r\n  const onPlacesChanged = () => {\r\n    const places = SearchBoxRef.current.getPlaces();\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    console.log(places, bounds);\r\n    places.forEach(place => {\r\n      if (place.geometry.viewport) {\r\n        bounds.union(place.geometry.viewport);\r\n      } else {\r\n        bounds.extend(place.geometry.location);\r\n      }\r\n    });\r\n    const nextMarkers = places.map(place => ({\r\n      position: place.geometry.location,\r\n    }));\r\n    const nextCenter = _.get(nextMarkers, '0.position', locationDetails.center);\r\n    console.log(nextCenter, 'nextCenter');\r\n\r\n    setLocationDetails({\r\n      places,\r\n      center: nextCenter,\r\n      markers: nextMarkers,\r\n    });\r\n    setLocationInput({\r\n      searchedLocation: places && places[0] && places[0].formatted_address,\r\n    });\r\n  };\r\n\r\n  const handleOnChange = event => {\r\n    if (event.which == '13') {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    setLocationInput({ searchedLocation: event.target.value });\r\n  };\r\n\r\n  const handleOnPressEnter = event => {\r\n    if (event.which == '13') {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    setLocationInput({ searchedLocation: event.target.value });\r\n  };\r\n\r\n  const onDragEndFunc = marker => {\r\n    let tempLocArray = [];\r\n    var geocoder = new window.google.maps.Geocoder();\r\n    const latlng = {\r\n      lat: Number(marker.latLng.lat().toFixed(4)),\r\n      lng: Number(marker.latLng.lng().toFixed(4)),\r\n    };\r\n\r\n    setLocationDetails({\r\n      ...locationDetails,\r\n      center: latlng,\r\n    });\r\n\r\n    geocoder.geocode({ latLng: latlng }, function(results, status) {\r\n      if (results[0] && results[0].formatted_address) {\r\n        setLocationInput({\r\n          searchedLocation: results[0] && results[0].formatted_address,\r\n        });\r\n        const location = {\r\n          place_id: results[0].place_id,\r\n          formatted_address: results[0].formatted_address,\r\n          address_components: results[0].address_components,\r\n          geometry: results[0].geometry,\r\n        };\r\n        tempLocArray.push(location);\r\n      }\r\n      setDragNDropData(tempLocArray);\r\n    });\r\n  };\r\n\r\n  if (dragNDropData && dragNDropData.length !== 0) {\r\n    getinputvalue(dragNDropData);\r\n  } else {\r\n    getinputvalue(locationDetails.places);\r\n  }\r\n\r\n  return (\r\n    <GoogleMap\r\n      ref={googleMapRef}\r\n      defaultZoom={15}\r\n      center={locationDetails.center}\r\n    >\r\n      <SearchBox\r\n        ref={SearchBoxRef}\r\n        controlPosition={window.google.maps.ControlPosition.TOP_LEFT}\r\n        onPlacesChanged={onPlacesChanged}\r\n      >\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Enter your hotel location\"\r\n          style={{\r\n            boxSizing: `border-box`,\r\n            border: `1px solid transparent`,\r\n            width: `260px`,\r\n            height: `40px`,\r\n            marginTop: `10px`,\r\n            padding: `0 12px`,\r\n            borderRadius: `2px`,\r\n            boxShadow: `0 3px 6px rgba(0, 0, 0, 0.16)`,\r\n            fontSize: `15px`,\r\n            outline: `none`,\r\n            textOverflow: `ellipses`,\r\n          }}\r\n          defaultValue=\"\"\r\n          value={locationInput ? locationInput.searchedLocation : ''}\r\n          onChange={handleOnChange}\r\n          onPressEnter={handleOnPressEnter}\r\n        />\r\n      </SearchBox>\r\n      {locationDetails.markers.map((marker, index) => {\r\n        return (\r\n          <Marker\r\n            icon={MakerImage}\r\n            key={index}\r\n            position={marker.position}\r\n            draggable\r\n            onDragEnd={marker => onDragEndFunc(marker)}\r\n          />\r\n        );\r\n      })}\r\n    </GoogleMap>\r\n  );\r\n});\r\n\r\nconst MapWithSearchBox = props => {\r\n  const [mapValue, setMapValue] = useState([]);\r\n  const { updatevalue } = props;\r\n  const updateFunc = value => {\r\n    setMapValue(value);\r\n  };\r\n  updatevalue(mapValue);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MapWithSearchBoxComp\r\n        getinputvalue={value => updateFunc(value)}\r\n        {...props}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MapWithSearchBox;\r\n"]},"metadata":{},"sourceType":"module"}