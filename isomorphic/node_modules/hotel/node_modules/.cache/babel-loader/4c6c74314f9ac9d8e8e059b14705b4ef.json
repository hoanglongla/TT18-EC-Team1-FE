{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\common\\\\UI\\\\DatePicker\\\\ReactDates.js\";\nvar _excluded = [\"className\", \"item\", \"startDateId\", \"endDateId\", \"startDatePlaceholderText\", \"endDatePlaceholderText\", \"disabled\", \"showClearDates\", \"isRTL\", \"orientation\", \"anchorDirection\", \"withPortal\", \"withFullScreenPortal\", \"small\", \"block\", \"numberOfMonths\", \"regular\", \"noBorder\"];\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactDatesStyleWrapper } from './ReactDates.style';\n/*\r\n * For Localization enable this code [example : French language as \"fr\"]\r\n */\n// import moment from 'moment';\n// import 'moment/locale/fr';\n\nvar DateRangePickerBox = /*#__PURE__*/function (_Component) {\n  _inherits(DateRangePickerBox, _Component);\n\n  var _super = _createSuper(DateRangePickerBox);\n\n  function DateRangePickerBox(props) {\n    var _this;\n\n    _classCallCheck(this, DateRangePickerBox);\n\n    _this = _super.call(this, props);\n\n    _this.onDateChangeFunc = function (_ref) {\n      var startDate = _ref.startDate,\n          endDate = _ref.endDate;\n      var dateFormat = _this.state.dateFormat;\n\n      _this.setState({\n        startDate: startDate,\n        endDate: endDate\n      });\n\n      if (startDate !== null && endDate !== null) {\n        _this.props.updateSearchData({\n          setStartDate: startDate.format(dateFormat),\n          setEndDate: endDate.format(dateFormat)\n        });\n      }\n    };\n\n    _this.onFocusChangeFunc = function (focusedInput) {\n      return _this.setState({\n        focusedInput: focusedInput\n      });\n    };\n\n    var separator = _this.props.item && _this.props.item.separator ? _this.props.item.separator : '/';\n\n    var _dateFormat = _this.props.item && _this.props.item.format ? _this.props.item.format : 'llll';\n\n    _this.state = {\n      focusedInput: null,\n      startDate: _this.props.startDate ? _this.props.startDate : null,\n      endDate: _this.props.endDate ? _this.props.endDate : null,\n      dateFormat: _dateFormat,\n      separator: separator\n    };\n    _this.onDateChangeFunc = _this.onDateChangeFunc.bind(_assertThisInitialized(_this));\n    _this.onFocusChangeFunc = _this.onFocusChangeFunc.bind(_assertThisInitialized(_this));\n    /*\r\n     * For Localization enable this code [example : French language as \"fr\"]\r\n     */\n    // moment.locale('fr');\n\n    return _this;\n  }\n\n  _createClass(DateRangePickerBox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          focusedInput = _this$state.focusedInput,\n          startDate = _this$state.startDate,\n          endDate = _this$state.endDate; // DateRangePickerBox props list\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          item = _this$props.item,\n          startDateId = _this$props.startDateId,\n          endDateId = _this$props.endDateId,\n          startDatePlaceholderText = _this$props.startDatePlaceholderText,\n          endDatePlaceholderText = _this$props.endDatePlaceholderText,\n          disabled = _this$props.disabled,\n          showClearDates = _this$props.showClearDates,\n          isRTL = _this$props.isRTL,\n          orientation = _this$props.orientation,\n          anchorDirection = _this$props.anchorDirection,\n          withPortal = _this$props.withPortal,\n          withFullScreenPortal = _this$props.withFullScreenPortal,\n          small = _this$props.small,\n          block = _this$props.block,\n          numberOfMonths = _this$props.numberOfMonths,\n          regular = _this$props.regular,\n          noBorder = _this$props.noBorder,\n          rest = _objectWithoutProperties(_this$props, _excluded); // Add all classs to an array **************\n\n\n      var addAllClasses = ['date_picker']; // className prop checking **************\n\n      if (className) {\n        addAllClasses.push(className);\n      } // React-Dates DateRangePicker Props List\n\n\n      var defaultCalenderProps = {\n        startDateId: startDateId ? startDateId : 'start_unique_id',\n        endDateId: endDateId ? endDateId : 'end_date_unique_id',\n        startDate: startDate,\n        endDate: endDate,\n        focusedInput: focusedInput,\n        onFocusChange: this.onFocusChangeFunc,\n        onDatesChange: this.onDateChangeFunc,\n        startDatePlaceholderText: startDatePlaceholderText,\n        endDatePlaceholderText: endDatePlaceholderText,\n        disabled: disabled,\n        isRTL: isRTL,\n        showClearDates: showClearDates ? showClearDates : false,\n        orientation: orientation,\n        anchorDirection: anchorDirection,\n        withPortal: withPortal,\n        withFullScreenPortal: withFullScreenPortal,\n        small: small,\n        numberOfMonths: numberOfMonths ? numberOfMonths : 2,\n        block: block,\n        regular: regular,\n        noBorder: noBorder\n      };\n      return /*#__PURE__*/React.createElement(ReactDatesStyleWrapper, {\n        className: addAllClasses.join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DateRangePicker, Object.assign({}, defaultCalenderProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return DateRangePickerBox;\n}(Component);\n\nDateRangePickerBox.propTypes = {\n  /** startDateId of the date-picker field */\n  startDateId: PropTypes.string.isRequired,\n\n  /** endDateId of the date-picker field */\n  endDateId: PropTypes.string.isRequired,\n  //\n\n  /** startDatePlaceholderText of the date-picker field */\n  startDatePlaceholderText: PropTypes.string,\n\n  /** endDatePlaceholderText of the date-picker field */\n  endDatePlaceholderText: PropTypes.string,\n\n  /** disabled of the date-picker field */\n  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['START_DATE', 'END_DATE'])]),\n\n  /** showClearDates of the date-picker field */\n  showClearDates: PropTypes.bool,\n\n  /** isRTL of the date-picker field */\n  isRTL: PropTypes.bool,\n\n  /** orientation of the date-picker field */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /** anchorDirection of the date-picker field */\n  anchorDirection: PropTypes.oneOf(['left', 'right']),\n\n  /** withPortal of the date-picker field */\n  withPortal: PropTypes.bool,\n\n  /** withFullScreenPortal of the date-picker field */\n  withFullScreenPortal: PropTypes.bool,\n\n  /** small of the date-picker field */\n  small: PropTypes.bool,\n\n  /** numberOfMonths of the date-picker field */\n  numberOfMonths: PropTypes.number,\n\n  /** block of the date-picker field */\n  block: PropTypes.bool,\n\n  /** regular of the date-picker field */\n  regular: PropTypes.bool,\n\n  /** noBorder of the date-picker field */\n  noBorder: PropTypes.bool,\n\n  /** updateSearchData of the date-picker field to send component data to parent component */\n  updateSearchData: PropTypes.func\n};\nexport default DateRangePickerBox;","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/common/UI/DatePicker/ReactDates.js"],"names":["DateRangePicker","React","Component","PropTypes","ReactDatesStyleWrapper","DateRangePickerBox","props","onDateChangeFunc","startDate","endDate","dateFormat","state","setState","updateSearchData","setStartDate","format","setEndDate","onFocusChangeFunc","focusedInput","separator","item","bind","className","startDateId","endDateId","startDatePlaceholderText","endDatePlaceholderText","disabled","showClearDates","isRTL","orientation","anchorDirection","withPortal","withFullScreenPortal","small","block","numberOfMonths","regular","noBorder","rest","addAllClasses","push","defaultCalenderProps","onFocusChange","onDatesChange","join","propTypes","string","isRequired","oneOfType","bool","oneOf","number","func"],"mappings":";;;;;;;;AAAA,OAAO,wBAAP;AACA,SAASA,eAAT,QAAgC,aAAhC;AACA,OAAO,qCAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA;AACA;AACA;AACA;AACA;;IAEMC,kB;;;;;AACJ,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAyBnBC,gBAzBmB,GAyBA,gBAA4B;AAAA,UAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,UAAdC,OAAc,QAAdA,OAAc;AAC7C,UAAQC,UAAR,GAAuB,MAAKC,KAA5B,CAAQD,UAAR;;AACA,YAAKE,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAATA,SAAF;AAAaC,QAAAA,OAAO,EAAPA;AAAb,OAAd;;AACA,UAAID,SAAS,KAAK,IAAd,IAAsBC,OAAO,KAAK,IAAtC,EAA4C;AAC1C,cAAKH,KAAL,CAAWO,gBAAX,CAA4B;AAC1BC,UAAAA,YAAY,EAAEN,SAAS,CAACO,MAAV,CAAiBL,UAAjB,CADY;AAE1BM,UAAAA,UAAU,EAAEP,OAAO,CAACM,MAAR,CAAeL,UAAf;AAFc,SAA5B;AAID;AACF,KAlCkB;;AAAA,UAoCnBO,iBApCmB,GAoCC,UAAAC,YAAY,EAAI;AAClC,aAAO,MAAKN,QAAL,CAAc;AAAEM,QAAAA,YAAY,EAAZA;AAAF,OAAd,CAAP;AACD,KAtCkB;;AAEjB,QAAMC,SAAS,GACb,MAAKb,KAAL,CAAWc,IAAX,IAAmB,MAAKd,KAAL,CAAWc,IAAX,CAAgBD,SAAnC,GACI,MAAKb,KAAL,CAAWc,IAAX,CAAgBD,SADpB,GAEI,GAHN;;AAIA,QAAMT,WAAU,GACd,MAAKJ,KAAL,CAAWc,IAAX,IAAmB,MAAKd,KAAL,CAAWc,IAAX,CAAgBL,MAAnC,GACI,MAAKT,KAAL,CAAWc,IAAX,CAAgBL,MADpB,GAEI,MAHN;;AAIA,UAAKJ,KAAL,GAAa;AACXO,MAAAA,YAAY,EAAE,IADH;AAEXV,MAAAA,SAAS,EAAE,MAAKF,KAAL,CAAWE,SAAX,GAAuB,MAAKF,KAAL,CAAWE,SAAlC,GAA8C,IAF9C;AAGXC,MAAAA,OAAO,EAAE,MAAKH,KAAL,CAAWG,OAAX,GAAqB,MAAKH,KAAL,CAAWG,OAAhC,GAA0C,IAHxC;AAIXC,MAAAA,UAAU,EAAVA,WAJW;AAKXS,MAAAA,SAAS,EAATA;AALW,KAAb;AAOA,UAAKZ,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBc,IAAtB,+BAAxB;AACA,UAAKJ,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBI,IAAvB,+BAAzB;AACA;AACJ;AACA;AACI;;AAtBiB;AAuBlB;;;;WAiBD,kBAAS;AACP,wBAA6C,KAAKV,KAAlD;AAAA,UAAQO,YAAR,eAAQA,YAAR;AAAA,UAAsBV,SAAtB,eAAsBA,SAAtB;AAAA,UAAiCC,OAAjC,eAAiCA,OAAjC,CADO,CAEP;;AACA,wBAoBI,KAAKH,KApBT;AAAA,UACEgB,SADF,eACEA,SADF;AAAA,UAEEF,IAFF,eAEEA,IAFF;AAAA,UAGEG,WAHF,eAGEA,WAHF;AAAA,UAIEC,SAJF,eAIEA,SAJF;AAAA,UAKEC,wBALF,eAKEA,wBALF;AAAA,UAMEC,sBANF,eAMEA,sBANF;AAAA,UAOEC,QAPF,eAOEA,QAPF;AAAA,UAQEC,cARF,eAQEA,cARF;AAAA,UASEC,KATF,eASEA,KATF;AAAA,UAUEC,WAVF,eAUEA,WAVF;AAAA,UAWEC,eAXF,eAWEA,eAXF;AAAA,UAYEC,UAZF,eAYEA,UAZF;AAAA,UAaEC,oBAbF,eAaEA,oBAbF;AAAA,UAcEC,KAdF,eAcEA,KAdF;AAAA,UAeEC,KAfF,eAeEA,KAfF;AAAA,UAgBEC,cAhBF,eAgBEA,cAhBF;AAAA,UAiBEC,OAjBF,eAiBEA,OAjBF;AAAA,UAkBEC,QAlBF,eAkBEA,QAlBF;AAAA,UAmBKC,IAnBL,oDAHO,CAyBP;;;AACA,UAAMC,aAAa,GAAG,CAAC,aAAD,CAAtB,CA1BO,CA2BP;;AACA,UAAIlB,SAAJ,EAAe;AACbkB,QAAAA,aAAa,CAACC,IAAd,CAAmBnB,SAAnB;AACD,OA9BM,CAgCP;;;AACA,UAAMoB,oBAAoB,GAAG;AAC3BnB,QAAAA,WAAW,EAAEA,WAAW,GAAGA,WAAH,GAAiB,iBADd;AAE3BC,QAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAH,GAAe,oBAFR;AAG3BhB,QAAAA,SAAS,EAATA,SAH2B;AAI3BC,QAAAA,OAAO,EAAPA,OAJ2B;AAK3BS,QAAAA,YAAY,EAAZA,YAL2B;AAM3ByB,QAAAA,aAAa,EAAE,KAAK1B,iBANO;AAO3B2B,QAAAA,aAAa,EAAE,KAAKrC,gBAPO;AAQ3BkB,QAAAA,wBAAwB,EAAxBA,wBAR2B;AAS3BC,QAAAA,sBAAsB,EAAtBA,sBAT2B;AAU3BC,QAAAA,QAAQ,EAARA,QAV2B;AAW3BE,QAAAA,KAAK,EAALA,KAX2B;AAY3BD,QAAAA,cAAc,EAAEA,cAAc,GAAGA,cAAH,GAAoB,KAZvB;AAa3BE,QAAAA,WAAW,EAAXA,WAb2B;AAc3BC,QAAAA,eAAe,EAAfA,eAd2B;AAe3BC,QAAAA,UAAU,EAAVA,UAf2B;AAgB3BC,QAAAA,oBAAoB,EAApBA,oBAhB2B;AAiB3BC,QAAAA,KAAK,EAALA,KAjB2B;AAkB3BE,QAAAA,cAAc,EAAEA,cAAc,GAAGA,cAAH,GAAoB,CAlBvB;AAmB3BD,QAAAA,KAAK,EAALA,KAnB2B;AAoB3BE,QAAAA,OAAO,EAAPA,OApB2B;AAqB3BC,QAAAA,QAAQ,EAARA;AArB2B,OAA7B;AAwBA,0BACE,oBAAC,sBAAD;AAAwB,QAAA,SAAS,EAAEE,aAAa,CAACK,IAAd,CAAmB,GAAnB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD,oBAAqBH,oBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;;;EAvG8BxC,S;;AA0GjCG,kBAAkB,CAACyC,SAAnB,GAA+B;AAC7B;AACAvB,EAAAA,WAAW,EAAEpB,SAAS,CAAC4C,MAAV,CAAiBC,UAFD;;AAG7B;AACAxB,EAAAA,SAAS,EAAErB,SAAS,CAAC4C,MAAV,CAAiBC,UAJC;AAIW;;AACxC;AACAvB,EAAAA,wBAAwB,EAAEtB,SAAS,CAAC4C,MANP;;AAO7B;AACArB,EAAAA,sBAAsB,EAAEvB,SAAS,CAAC4C,MARL;;AAS7B;AACApB,EAAAA,QAAQ,EAAExB,SAAS,CAAC8C,SAAV,CAAoB,CAC5B9C,SAAS,CAAC+C,IADkB,EAE5B/C,SAAS,CAACgD,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,CAF4B,CAApB,CAVmB;;AAe7B;AACAvB,EAAAA,cAAc,EAAEzB,SAAS,CAAC+C,IAhBG;;AAiB7B;AACArB,EAAAA,KAAK,EAAE1B,SAAS,CAAC+C,IAlBY;;AAmB7B;AACApB,EAAAA,WAAW,EAAE3B,SAAS,CAACgD,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,CApBgB;;AAqB7B;AACApB,EAAAA,eAAe,EAAE5B,SAAS,CAACgD,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CAtBY;;AAuB7B;AACAnB,EAAAA,UAAU,EAAE7B,SAAS,CAAC+C,IAxBO;;AAyB7B;AACAjB,EAAAA,oBAAoB,EAAE9B,SAAS,CAAC+C,IA1BH;;AA2B7B;AACAhB,EAAAA,KAAK,EAAE/B,SAAS,CAAC+C,IA5BY;;AA6B7B;AACAd,EAAAA,cAAc,EAAEjC,SAAS,CAACiD,MA9BG;;AA+B7B;AACAjB,EAAAA,KAAK,EAAEhC,SAAS,CAAC+C,IAhCY;;AAiC7B;AACAb,EAAAA,OAAO,EAAElC,SAAS,CAAC+C,IAlCU;;AAmC7B;AACAZ,EAAAA,QAAQ,EAAEnC,SAAS,CAAC+C,IApCS;;AAqC7B;AACArC,EAAAA,gBAAgB,EAAEV,SAAS,CAACkD;AAtCC,CAA/B;AAyCA,eAAehD,kBAAf","sourcesContent":["import 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ReactDatesStyleWrapper } from './ReactDates.style';\r\n/*\r\n * For Localization enable this code [example : French language as \"fr\"]\r\n */\r\n// import moment from 'moment';\r\n// import 'moment/locale/fr';\r\n\r\nclass DateRangePickerBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const separator =\r\n      this.props.item && this.props.item.separator\r\n        ? this.props.item.separator\r\n        : '/';\r\n    const dateFormat =\r\n      this.props.item && this.props.item.format\r\n        ? this.props.item.format\r\n        : 'llll';\r\n    this.state = {\r\n      focusedInput: null,\r\n      startDate: this.props.startDate ? this.props.startDate : null,\r\n      endDate: this.props.endDate ? this.props.endDate : null,\r\n      dateFormat,\r\n      separator,\r\n    };\r\n    this.onDateChangeFunc = this.onDateChangeFunc.bind(this);\r\n    this.onFocusChangeFunc = this.onFocusChangeFunc.bind(this);\r\n    /*\r\n     * For Localization enable this code [example : French language as \"fr\"]\r\n     */\r\n    // moment.locale('fr');\r\n  }\r\n\r\n  onDateChangeFunc = ({ startDate, endDate }) => {\r\n    const { dateFormat } = this.state;\r\n    this.setState({ startDate, endDate });\r\n    if (startDate !== null && endDate !== null) {\r\n      this.props.updateSearchData({\r\n        setStartDate: startDate.format(dateFormat),\r\n        setEndDate: endDate.format(dateFormat),\r\n      });\r\n    }\r\n  };\r\n\r\n  onFocusChangeFunc = focusedInput => {\r\n    return this.setState({ focusedInput });\r\n  };\r\n\r\n  render() {\r\n    const { focusedInput, startDate, endDate } = this.state;\r\n    // DateRangePickerBox props list\r\n    const {\r\n      className,\r\n      item,\r\n      startDateId,\r\n      endDateId,\r\n      startDatePlaceholderText,\r\n      endDatePlaceholderText,\r\n      disabled,\r\n      showClearDates,\r\n      isRTL,\r\n      orientation,\r\n      anchorDirection,\r\n      withPortal,\r\n      withFullScreenPortal,\r\n      small,\r\n      block,\r\n      numberOfMonths,\r\n      regular,\r\n      noBorder,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    // Add all classs to an array **************\r\n    const addAllClasses = ['date_picker'];\r\n    // className prop checking **************\r\n    if (className) {\r\n      addAllClasses.push(className);\r\n    }\r\n\r\n    // React-Dates DateRangePicker Props List\r\n    const defaultCalenderProps = {\r\n      startDateId: startDateId ? startDateId : 'start_unique_id',\r\n      endDateId: endDateId ? endDateId : 'end_date_unique_id',\r\n      startDate,\r\n      endDate,\r\n      focusedInput,\r\n      onFocusChange: this.onFocusChangeFunc,\r\n      onDatesChange: this.onDateChangeFunc,\r\n      startDatePlaceholderText,\r\n      endDatePlaceholderText,\r\n      disabled,\r\n      isRTL,\r\n      showClearDates: showClearDates ? showClearDates : false,\r\n      orientation,\r\n      anchorDirection,\r\n      withPortal,\r\n      withFullScreenPortal,\r\n      small,\r\n      numberOfMonths: numberOfMonths ? numberOfMonths : 2,\r\n      block,\r\n      regular,\r\n      noBorder,\r\n    };\r\n\r\n    return (\r\n      <ReactDatesStyleWrapper className={addAllClasses.join(' ')}>\r\n        <DateRangePicker {...defaultCalenderProps} />\r\n      </ReactDatesStyleWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nDateRangePickerBox.propTypes = {\r\n  /** startDateId of the date-picker field */\r\n  startDateId: PropTypes.string.isRequired,\r\n  /** endDateId of the date-picker field */\r\n  endDateId: PropTypes.string.isRequired, //\r\n  /** startDatePlaceholderText of the date-picker field */\r\n  startDatePlaceholderText: PropTypes.string,\r\n  /** endDatePlaceholderText of the date-picker field */\r\n  endDatePlaceholderText: PropTypes.string,\r\n  /** disabled of the date-picker field */\r\n  disabled: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.oneOf(['START_DATE', 'END_DATE']),\r\n  ]),\r\n\r\n  /** showClearDates of the date-picker field */\r\n  showClearDates: PropTypes.bool,\r\n  /** isRTL of the date-picker field */\r\n  isRTL: PropTypes.bool,\r\n  /** orientation of the date-picker field */\r\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\r\n  /** anchorDirection of the date-picker field */\r\n  anchorDirection: PropTypes.oneOf(['left', 'right']),\r\n  /** withPortal of the date-picker field */\r\n  withPortal: PropTypes.bool,\r\n  /** withFullScreenPortal of the date-picker field */\r\n  withFullScreenPortal: PropTypes.bool,\r\n  /** small of the date-picker field */\r\n  small: PropTypes.bool,\r\n  /** numberOfMonths of the date-picker field */\r\n  numberOfMonths: PropTypes.number,\r\n  /** block of the date-picker field */\r\n  block: PropTypes.bool,\r\n  /** regular of the date-picker field */\r\n  regular: PropTypes.bool,\r\n  /** noBorder of the date-picker field */\r\n  noBorder: PropTypes.bool,\r\n  /** updateSearchData of the date-picker field to send component data to parent component */\r\n  updateSearchData: PropTypes.func,\r\n};\r\n\r\nexport default DateRangePickerBox;\r\n"]},"metadata":{},"sourceType":"module"}