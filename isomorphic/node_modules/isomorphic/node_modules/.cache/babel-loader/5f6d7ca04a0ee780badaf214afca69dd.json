{"ast":null,"code":"var _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\LanguageSwitcher\\\\LanguageSwitcher.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport actions from '@iso/redux/languageSwitcher/actions';\nimport config from './config';\nconst {\n  changeLanguage\n} = actions;\nexport default function LanguageSwitcher() {\n  const {\n    language\n  } = useSelector(state => state.LanguageSwitcher);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"themeSwitchBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"languageSwitcher.label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"themeSwitchBtnWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, config.options.map(option => {\n    const {\n      languageId,\n      icon\n    } = option;\n    const customClass = languageId === language.languageId ? 'selectedTheme languageSwitch' : 'languageSwitch';\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: customClass,\n      key: languageId,\n      onClick: () => {\n        dispatch(changeLanguage(languageId));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: icon,\n      alt: \"flag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/containers/LanguageSwitcher/LanguageSwitcher.js"],"names":["React","useDispatch","useSelector","IntlMessages","actions","config","changeLanguage","LanguageSwitcher","language","state","dispatch","options","map","option","languageId","icon","customClass"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAqBF,OAA3B;AAEA,eAAe,SAASG,gBAAT,GAA4B;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAeN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACF,gBAAhB,CAAhC;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,MAAM,CAACM,OAAP,CAAeC,GAAf,CAAmBC,MAAM,IAAI;AAC5B,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAuBF,MAA7B;AACA,UAAMG,WAAW,GACfF,UAAU,KAAKN,QAAQ,CAACM,UAAxB,GACI,8BADJ,GAEI,gBAHN;AAKA,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEE,WAFb;AAGE,MAAA,GAAG,EAAEF,UAHP;AAIE,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,QAAQ,CAACJ,cAAc,CAACQ,UAAD,CAAf,CAAR;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD,GAnBA,CADH,CAJF,CADF;AA6BD","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport IntlMessages from '@iso/components/utility/intlMessages';\r\nimport actions from '@iso/redux/languageSwitcher/actions';\r\nimport config from './config';\r\n\r\nconst { changeLanguage } = actions;\r\n\r\nexport default function LanguageSwitcher() {\r\n  const { language } = useSelector(state => state.LanguageSwitcher);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"themeSwitchBlock\">\r\n      <h4>\r\n        <IntlMessages id=\"languageSwitcher.label\" />\r\n      </h4>\r\n      <div className=\"themeSwitchBtnWrapper\">\r\n        {config.options.map(option => {\r\n          const { languageId, icon } = option;\r\n          const customClass =\r\n            languageId === language.languageId\r\n              ? 'selectedTheme languageSwitch'\r\n              : 'languageSwitch';\r\n\r\n          return (\r\n            <button\r\n              type=\"button\"\r\n              className={customClass}\r\n              key={languageId}\r\n              onClick={() => {\r\n                dispatch(changeLanguage(languageId));\r\n              }}\r\n            >\r\n              <img src={icon} alt=\"flag\" />\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}