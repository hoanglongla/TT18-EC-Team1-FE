{"ast":null,"code":"var _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\components\\\\YoutubeSearch\\\\Result.js\";\nimport React from 'react';\nimport Loader from '../utility/loader';\nimport HelperText from '../utility/helper-text';\nimport Button from '../uielements/button';\nimport PlayYoutubeVideo from './PlayYoutubeVideo';\nimport { YoutubeSearchListStyleWrapper, YoutubeSearchStyleWrapper } from './YoutubeSearch.style';\n\nfunction SearchList(result, handleSelectedVideo) {\n  return /*#__PURE__*/React.createElement(YoutubeSearchListStyleWrapper, {\n    className: \"isoYoutubeResultList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, result.map(item => {\n    const {\n      publishedAt,\n      title,\n      description,\n      channelTitle,\n      thumbnails,\n      channelId\n    } = item.snippet;\n    const id = item.id.videoId;\n    const updateDate = new Date(publishedAt).toDateString();\n\n    const onClick = event => {\n      event.preventDefault();\n      handleSelectedVideo(item);\n    };\n\n    const onChannelClick = event => {\n      event.preventDefault();\n      event.stopPropagation();\n      window.open(`https://www.youtube.com/channel/${channelId}`, '_blank');\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      className: \"isoSingleVideoResult\",\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"videoThumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"#\",\n      src: thumbnails.default.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"videoDescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"videoName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"# \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, `${title} `)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ChannelNameAndDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: onChannelClick,\n      className: \"channelTitle\",\n      href: \"# \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, `${channelTitle} `), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"uploadDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, updateDate)), description ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 30\n      }\n    }, description) : ''));\n  }));\n}\n\nfunction YoutubeResult({\n  YoutubeSearch,\n  onPageChange\n}) {\n  const [selectedVideo, setSelectrdVideo] = React.useState(null);\n\n  const handleCancel = () => {\n    handleSelectedVideo(null);\n  };\n\n  const handleSelectedVideo = selectedVideo => {\n    setSelectrdVideo(selectedVideo);\n  };\n\n  const {\n    searcText,\n    result,\n    loading,\n    error,\n    nextPageToken,\n    prevPageToken,\n    total_count\n  } = YoutubeSearch;\n\n  if (!searcText) {\n    return null;\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error || !total_count) {\n    return /*#__PURE__*/React.createElement(HelperText, {\n      text: \"THERE ARE SOME ERRORS\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (result.length === 0) {\n    return /*#__PURE__*/React.createElement(HelperText, {\n      text: \"No Result Found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(YoutubeSearchStyleWrapper, {\n    className: \"isoYoutubeSearchResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"isoTotalResultFind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, `${total_count}`, \" videos found\")), selectedVideo ? /*#__PURE__*/React.createElement(PlayYoutubeVideo, {\n    selectedVideo: selectedVideo,\n    handleCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }) : '', SearchList(result, handleSelectedVideo), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"youtubeSearchPagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, prevPageToken ? /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onPageChange(searcText, prevPageToken),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Previous\") : '', nextPageToken ? /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onPageChange(searcText, nextPageToken),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Next\") : ''));\n}\n\nexport default YoutubeResult;","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/components/YoutubeSearch/Result.js"],"names":["React","Loader","HelperText","Button","PlayYoutubeVideo","YoutubeSearchListStyleWrapper","YoutubeSearchStyleWrapper","SearchList","result","handleSelectedVideo","map","item","publishedAt","title","description","channelTitle","thumbnails","channelId","snippet","id","videoId","updateDate","Date","toDateString","onClick","event","preventDefault","onChannelClick","stopPropagation","window","open","default","url","YoutubeResult","YoutubeSearch","onPageChange","selectedVideo","setSelectrdVideo","useState","handleCancel","searcText","loading","error","nextPageToken","prevPageToken","total_count","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Loader from '../utility/loader';\r\nimport HelperText from '../utility/helper-text';\r\nimport Button from '../uielements/button';\r\nimport PlayYoutubeVideo from './PlayYoutubeVideo';\r\nimport {\r\n  YoutubeSearchListStyleWrapper,\r\n  YoutubeSearchStyleWrapper,\r\n} from './YoutubeSearch.style';\r\n\r\nfunction SearchList(result, handleSelectedVideo) {\r\n  return (\r\n    <YoutubeSearchListStyleWrapper className=\"isoYoutubeResultList\">\r\n      {result.map(item => {\r\n        const {\r\n          publishedAt,\r\n          title,\r\n          description,\r\n          channelTitle,\r\n          thumbnails,\r\n          channelId,\r\n        } = item.snippet;\r\n        const id = item.id.videoId;\r\n        const updateDate = new Date(publishedAt).toDateString();\r\n        const onClick = event => {\r\n          event.preventDefault();\r\n          handleSelectedVideo(item);\r\n        };\r\n        const onChannelClick = event => {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          window.open(`https://www.youtube.com/channel/${channelId}`, '_blank');\r\n        };\r\n        return (\r\n          <div key={id} className=\"isoSingleVideoResult\" onClick={onClick}>\r\n            <div className=\"videoThumb\">\r\n              <img alt=\"#\" src={thumbnails.default.url} />\r\n            </div>\r\n\r\n            <div className=\"videoDescription\">\r\n              <h3 className=\"videoName\">\r\n                <a href=\"# \">{`${title} `}</a>\r\n              </h3>\r\n\r\n              <div className=\"ChannelNameAndDate\">\r\n                <a onClick={onChannelClick} className=\"channelTitle\" href=\"# \">\r\n                  {`${channelTitle} `}\r\n                </a>\r\n                <span className=\"uploadDate\">{updateDate}</span>\r\n              </div>\r\n\r\n              {description ? <p>{description}</p> : ''}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </YoutubeSearchListStyleWrapper>\r\n  );\r\n}\r\nfunction YoutubeResult({ YoutubeSearch, onPageChange }) {\r\n  const [selectedVideo, setSelectrdVideo] = React.useState(null);\r\n\r\n  const handleCancel = () => {\r\n    handleSelectedVideo(null);\r\n  };\r\n  const handleSelectedVideo = selectedVideo => {\r\n    setSelectrdVideo(selectedVideo);\r\n  };\r\n\r\n  const {\r\n    searcText,\r\n    result,\r\n    loading,\r\n    error,\r\n    nextPageToken,\r\n    prevPageToken,\r\n    total_count,\r\n  } = YoutubeSearch;\r\n  if (!searcText) {\r\n    return null;\r\n  }\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  if (error || !total_count) {\r\n    return <HelperText text=\"THERE ARE SOME ERRORS\" />;\r\n  }\r\n  if (result.length === 0) {\r\n    return <HelperText text=\"No Result Found\" />;\r\n  }\r\n  return (\r\n    <YoutubeSearchStyleWrapper className=\"isoYoutubeSearchResult\">\r\n      <p className=\"isoTotalResultFind\">\r\n        <span>{`${total_count}`} videos found</span>\r\n      </p>\r\n\r\n      {selectedVideo ? (\r\n        <PlayYoutubeVideo\r\n          selectedVideo={selectedVideo}\r\n          handleCancel={handleCancel}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n      {SearchList(result, handleSelectedVideo)}\r\n\r\n      <div className=\"youtubeSearchPagination\">\r\n        {prevPageToken ? (\r\n          <Button onClick={() => onPageChange(searcText, prevPageToken)}>\r\n            Previous\r\n          </Button>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {nextPageToken ? (\r\n          <Button onClick={() => onPageChange(searcText, nextPageToken)}>\r\n            Next\r\n          </Button>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    </YoutubeSearchStyleWrapper>\r\n  );\r\n}\r\n\r\nexport default YoutubeResult;\r\n"]},"metadata":{},"sourceType":"module"}