{"ast":null,"code":"var _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\components\\\\Mail\\\\MailList.js\";\nimport React from 'react';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport { tags, tagColor } from './MailTags.js';\nimport MailListWrapper from './MailList.style';\nimport { direction } from '@iso/lib/helpers/rtl';\nexport default function mailList(mails, selectMail, selectedMail, toggleListVisible) {\n  const renderSingleMail = (mail, key) => {\n    const onClick = () => {\n      selectMail(mail.id);\n\n      if (toggleListVisible) {\n        toggleListVisible();\n      }\n    };\n\n    const isSelected = selectedMail === mail.id;\n    const recpName = mail.name;\n    const signature = {\n      splitLet: recpName.match(/\\b(\\w)/g).join('').split('', 2)\n    };\n    const activeClass = isSelected ? 'activeMail' : '';\n    const unreadClass = !mail.read ? 'unreadMail' : '';\n    const tagOption = mail.tags ? tagColor[tags.findIndex(tags => tags === mail.tags)] : 'transparent';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `list${key}`,\n      onClick: onClick,\n      className: `${activeClass} ${unreadClass} isoMailList`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"isoLabelIndicator\",\n      style: direction === 'rtl' ? {\n        borderRightColor: tagOption\n      } : {\n        borderTopColor: tagOption\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"isoRecipentsImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, mail.img ? /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"#\",\n      src: mail.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, signature.splitLet)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"isoMailInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"infoHead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"isoRecipents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, mail.name), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"isoReceiveDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, timeDifference(mail.date))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"isoSubject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, mail.subject)));\n  };\n\n  return /*#__PURE__*/React.createElement(MailListWrapper, {\n    className: \"isoMailListWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, mails.map((mail, index) => renderSingleMail(mail, index)));\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/components/Mail/MailList.js"],"names":["React","timeDifference","tags","tagColor","MailListWrapper","direction","mailList","mails","selectMail","selectedMail","toggleListVisible","renderSingleMail","mail","key","onClick","id","isSelected","recpName","name","signature","splitLet","match","join","split","activeClass","unreadClass","read","tagOption","findIndex","borderRightColor","borderTopColor","img","date","subject","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,eAA/B;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AAEA,eAAe,SAASC,QAAT,CACbC,KADa,EAEbC,UAFa,EAGbC,YAHa,EAIbC,iBAJa,EAKb;AACA,QAAMC,gBAAgB,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AACtC,UAAMC,OAAO,GAAG,MAAM;AACpBN,MAAAA,UAAU,CAACI,IAAI,CAACG,EAAN,CAAV;;AACA,UAAIL,iBAAJ,EAAuB;AACrBA,QAAAA,iBAAiB;AAClB;AACF,KALD;;AAMA,UAAMM,UAAU,GAAGP,YAAY,KAAKG,IAAI,CAACG,EAAzC;AACA,UAAME,QAAQ,GAAGL,IAAI,CAACM,IAAtB;AACA,UAAMC,SAAS,GAAG;AAChBC,MAAAA,QAAQ,EAAEH,QAAQ,CACfI,KADO,CACD,SADC,EAEPC,IAFO,CAEF,EAFE,EAGPC,KAHO,CAGD,EAHC,EAGG,CAHH;AADM,KAAlB;AAMA,UAAMC,WAAW,GAAGR,UAAU,GAAG,YAAH,GAAkB,EAAhD;AACA,UAAMS,WAAW,GAAG,CAACb,IAAI,CAACc,IAAN,GAAa,YAAb,GAA4B,EAAhD;AACA,UAAMC,SAAS,GAAGf,IAAI,CAACV,IAAL,GACdC,QAAQ,CAACD,IAAI,CAAC0B,SAAL,CAAe1B,IAAI,IAAIA,IAAI,KAAKU,IAAI,CAACV,IAArC,CAAD,CADM,GAEd,aAFJ;AAGA,wBACE;AACE,MAAA,GAAG,EAAG,OAAMW,GAAI,EADlB;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,SAAS,EAAG,GAAEU,WAAY,IAAGC,WAAY,cAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,KAAK,EACHpB,SAAS,KAAK,KAAd,GACI;AAAEwB,QAAAA,gBAAgB,EAAEF;AAApB,OADJ,GAEI;AAAEG,QAAAA,cAAc,EAAEH;AAAlB,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAaE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,IAAI,CAACmB,GAAL,gBACC;AAAK,MAAA,GAAG,EAAC,GAAT;AAAa,MAAA,GAAG,EAAEnB,IAAI,CAACmB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOZ,SAAS,CAACC,QAAjB,CAJJ,CAbF,eAqBE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BR,IAAI,CAACM,IAAlC,CADF,eAEE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCjB,cAAc,CAACW,IAAI,CAACoB,IAAN,CAAhD,CAFF,CADF,eAKE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BpB,IAAI,CAACqB,OAAhC,CALF,CArBF,CADF;AA+BD,GAnDD;;AAoDA,sBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,oBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,KAAK,CAAC2B,GAAN,CAAU,CAACtB,IAAD,EAAOuB,KAAP,KAAiBxB,gBAAgB,CAACC,IAAD,EAAOuB,KAAP,CAA3C,CADH,CADF;AAKD","sourcesContent":["import React from 'react';\r\nimport { timeDifference } from '@iso/lib/helpers/utility';\r\nimport { tags, tagColor } from './MailTags.js';\r\nimport MailListWrapper from './MailList.style';\r\nimport { direction } from '@iso/lib/helpers/rtl';\r\n\r\nexport default function mailList(\r\n  mails,\r\n  selectMail,\r\n  selectedMail,\r\n  toggleListVisible\r\n) {\r\n  const renderSingleMail = (mail, key) => {\r\n    const onClick = () => {\r\n      selectMail(mail.id);\r\n      if (toggleListVisible) {\r\n        toggleListVisible();\r\n      }\r\n    };\r\n    const isSelected = selectedMail === mail.id;\r\n    const recpName = mail.name;\r\n    const signature = {\r\n      splitLet: recpName\r\n        .match(/\\b(\\w)/g)\r\n        .join('')\r\n        .split('', 2),\r\n    };\r\n    const activeClass = isSelected ? 'activeMail' : '';\r\n    const unreadClass = !mail.read ? 'unreadMail' : '';\r\n    const tagOption = mail.tags\r\n      ? tagColor[tags.findIndex(tags => tags === mail.tags)]\r\n      : 'transparent';\r\n    return (\r\n      <div\r\n        key={`list${key}`}\r\n        onClick={onClick}\r\n        className={`${activeClass} ${unreadClass} isoMailList`}\r\n      >\r\n        <span\r\n          className=\"isoLabelIndicator\"\r\n          style={\r\n            direction === 'rtl'\r\n              ? { borderRightColor: tagOption }\r\n              : { borderTopColor: tagOption }\r\n          }\r\n        />\r\n        <div className=\"isoRecipentsImg\">\r\n          {mail.img ? (\r\n            <img alt=\"#\" src={mail.img} />\r\n          ) : (\r\n            <span>{signature.splitLet}</span>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"isoMailInfo\">\r\n          <div className=\"infoHead\">\r\n            <p className=\"isoRecipents\">{mail.name}</p>\r\n            <span className=\"isoReceiveDate\">{timeDifference(mail.date)}</span>\r\n          </div>\r\n          <p className=\"isoSubject\">{mail.subject}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <MailListWrapper className=\"isoMailListWrapper\">\r\n      {mails.map((mail, index) => renderSingleMail(mail, index))}\r\n    </MailListWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}