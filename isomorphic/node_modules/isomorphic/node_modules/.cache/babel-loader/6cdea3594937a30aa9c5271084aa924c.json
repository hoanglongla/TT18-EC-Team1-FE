{"ast":null,"code":"var _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\components\\\\Mail\\\\ComposeAutoComplete.js\";\nimport React from 'react';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport AutoComplete from './ComposeAutoComplete.style';\n\nfunction createSuggestions(item) {\n  if (item && item.length > 0) {\n    return item.map(element => ({\n      id: `${element.id}`,\n      text: `${element.name}<${element.email}>`\n    }));\n  }\n\n  return [];\n}\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13\n};\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tags: [],\n      suggestions: createSuggestions(props.allMails) || []\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n  }\n\n  handleDelete(i) {\n    const {\n      tags\n    } = this.state;\n    this.setState({\n      tags: tags.filter((tag, index) => index !== i)\n    });\n  }\n\n  handleAddition(tag) {\n    this.setState(state => ({\n      tags: [...state.tags, tag]\n    }));\n  }\n\n  handleDrag(tag, currPos, newPos) {\n    const tags = [...this.state.tags];\n    const newTags = tags.slice();\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag); // re-render\n\n    this.setState({\n      tags: newTags\n    });\n  }\n\n  render() {\n    const {\n      tags,\n      suggestions\n    } = this.state;\n    return /*#__PURE__*/React.createElement(AutoComplete, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactTags, {\n      tags: tags,\n      suggestions: suggestions,\n      handleDelete: this.handleDelete,\n      handleAddition: this.handleAddition,\n      handleDrag: this.handleDrag,\n      delimiters: delimiters,\n      placeholder: this.props.placeholder,\n      minQueryLength: 1,\n      autofocus: this.props.autofocus || false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/components/Mail/ComposeAutoComplete.js"],"names":["React","WithContext","ReactTags","AutoComplete","createSuggestions","item","length","map","element","id","text","name","email","KeyCodes","comma","enter","delimiters","App","Component","constructor","props","state","tags","suggestions","allMails","handleDelete","bind","handleAddition","handleDrag","i","setState","filter","tag","index","currPos","newPos","newTags","slice","splice","render","placeholder","autofocus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { WithContext as ReactTags } from 'react-tag-input';\r\nimport AutoComplete from './ComposeAutoComplete.style';\r\n\r\nfunction createSuggestions(item) {\r\n  if (item && item.length > 0) {\r\n    return item.map(element => ({\r\n      id: `${element.id}`,\r\n      text: `${element.name}<${element.email}>`,\r\n    }));\r\n  }\r\n  return [];\r\n}\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13,\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tags: [],\r\n      suggestions: createSuggestions(props.allMails) || [],\r\n    };\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleAddition = this.handleAddition.bind(this);\r\n    this.handleDrag = this.handleDrag.bind(this);\r\n  }\r\n  handleDelete(i) {\r\n    const { tags } = this.state;\r\n    this.setState({\r\n      tags: tags.filter((tag, index) => index !== i),\r\n    });\r\n  }\r\n\r\n  handleAddition(tag) {\r\n    this.setState(state => ({ tags: [...state.tags, tag] }));\r\n  }\r\n\r\n  handleDrag(tag, currPos, newPos) {\r\n    const tags = [...this.state.tags];\r\n    const newTags = tags.slice();\r\n\r\n    newTags.splice(currPos, 1);\r\n    newTags.splice(newPos, 0, tag);\r\n\r\n    // re-render\r\n    this.setState({ tags: newTags });\r\n  }\r\n\r\n  render() {\r\n    const { tags, suggestions } = this.state;\r\n    return (\r\n      <AutoComplete>\r\n        <ReactTags\r\n          tags={tags}\r\n          suggestions={suggestions}\r\n          handleDelete={this.handleDelete}\r\n          handleAddition={this.handleAddition}\r\n          handleDrag={this.handleDrag}\r\n          delimiters={delimiters}\r\n          placeholder={this.props.placeholder}\r\n          minQueryLength={1}\r\n          autofocus={this.props.autofocus || false}\r\n        />\r\n      </AutoComplete>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}