{"ast":null,"code":"import clone from 'clone';\nimport { newInvoice } from './config';\nimport actions from './actions';\nconst initState = {\n  invoices: [],\n  initialInvoices: false,\n  currentInvoice: {},\n  editableInvoice: {},\n  isNewInvoice: false,\n  enableEditView: false\n};\nexport default function cardReducer(state = initState, {\n  type,\n  ...action\n}) {\n  switch (type) {\n    case actions.UPDATE_INVOICE:\n      {\n        const currentInvoice = action.invoice ? action.invoice : state.currentInvoice;\n        return { ...state,\n          invoices: action.invoices,\n          currentInvoice: clone(currentInvoice),\n          initialInvoices: true,\n          isNewInvoice: false,\n          enableEditView: false\n        };\n      }\n\n    case actions.SELECT_CURRENT_INVOICE:\n      {\n        const invoices = state.invoices;\n        const index = invoices.map(invoice => invoice.id).indexOf(action.id);\n        const isNewInvoice = index === -1;\n        const currentInvoice = isNewInvoice ? {\n          id: action.id,\n          number: `#${action.id}`,\n          key: action.id,\n          ...newInvoice\n        } : invoices[index];\n        const enableEditView = isNewInvoice;\n        return { ...state,\n          currentInvoice,\n          isNewInvoice,\n          enableEditView,\n          editableInvoice: clone(currentInvoice)\n        };\n      }\n\n    case actions.TOGGLE_VIEW:\n      return { ...state,\n        enableEditView: action.view,\n        editableInvoice: clone(state.currentInvoice)\n      };\n\n    case actions.UPDATE_EDIT_INVOICE:\n      return { ...state,\n        editableInvoice: clone(action.invoice)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/redux/invoice/reducer.js"],"names":["clone","newInvoice","actions","initState","invoices","initialInvoices","currentInvoice","editableInvoice","isNewInvoice","enableEditView","cardReducer","state","type","action","UPDATE_INVOICE","invoice","SELECT_CURRENT_INVOICE","index","map","id","indexOf","number","key","TOGGLE_VIEW","view","UPDATE_EDIT_INVOICE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AAEhBC,EAAAA,eAAe,EAAE,KAFD;AAGhBC,EAAAA,cAAc,EAAE,EAHA;AAIhBC,EAAAA,eAAe,EAAE,EAJD;AAKhBC,EAAAA,YAAY,EAAE,KALE;AAMhBC,EAAAA,cAAc,EAAE;AANA,CAAlB;AASA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGR,SAA7B,EAAwC;AAAES,EAAAA,IAAF;AAAQ,KAAGC;AAAX,CAAxC,EAA6D;AAC1E,UAAQD,IAAR;AACE,SAAKV,OAAO,CAACY,cAAb;AAA6B;AAC3B,cAAMR,cAAc,GAAGO,MAAM,CAACE,OAAP,GACnBF,MAAM,CAACE,OADY,GAEnBJ,KAAK,CAACL,cAFV;AAGA,eAAO,EACL,GAAGK,KADE;AAELP,UAAAA,QAAQ,EAAES,MAAM,CAACT,QAFZ;AAGLE,UAAAA,cAAc,EAAEN,KAAK,CAACM,cAAD,CAHhB;AAILD,UAAAA,eAAe,EAAE,IAJZ;AAKLG,UAAAA,YAAY,EAAE,KALT;AAMLC,UAAAA,cAAc,EAAE;AANX,SAAP;AAQD;;AACD,SAAKP,OAAO,CAACc,sBAAb;AAAqC;AACnC,cAAMZ,QAAQ,GAAGO,KAAK,CAACP,QAAvB;AACA,cAAMa,KAAK,GAAGb,QAAQ,CAACc,GAAT,CAAaH,OAAO,IAAIA,OAAO,CAACI,EAAhC,EAAoCC,OAApC,CAA4CP,MAAM,CAACM,EAAnD,CAAd;AACA,cAAMX,YAAY,GAAGS,KAAK,KAAK,CAAC,CAAhC;AACA,cAAMX,cAAc,GAAGE,YAAY,GAC/B;AACEW,UAAAA,EAAE,EAAEN,MAAM,CAACM,EADb;AAEEE,UAAAA,MAAM,EAAG,IAAGR,MAAM,CAACM,EAAG,EAFxB;AAGEG,UAAAA,GAAG,EAAET,MAAM,CAACM,EAHd;AAIE,aAAGlB;AAJL,SAD+B,GAO/BG,QAAQ,CAACa,KAAD,CAPZ;AAQA,cAAMR,cAAc,GAAGD,YAAvB;AACA,eAAO,EACL,GAAGG,KADE;AAELL,UAAAA,cAFK;AAGLE,UAAAA,YAHK;AAILC,UAAAA,cAJK;AAKLF,UAAAA,eAAe,EAAEP,KAAK,CAACM,cAAD;AALjB,SAAP;AAOD;;AACD,SAAKJ,OAAO,CAACqB,WAAb;AACE,aAAO,EACL,GAAGZ,KADE;AAELF,QAAAA,cAAc,EAAEI,MAAM,CAACW,IAFlB;AAGLjB,QAAAA,eAAe,EAAEP,KAAK,CAACW,KAAK,CAACL,cAAP;AAHjB,OAAP;;AAKF,SAAKJ,OAAO,CAACuB,mBAAb;AACE,aAAO,EACL,GAAGd,KADE;AAELJ,QAAAA,eAAe,EAAEP,KAAK,CAACa,MAAM,CAACE,OAAR;AAFjB,OAAP;;AAIF;AACE,aAAOJ,KAAP;AA/CJ;AAiDD","sourcesContent":["import clone from 'clone';\r\nimport { newInvoice } from './config';\r\nimport actions from './actions';\r\n\r\nconst initState = {\r\n  invoices: [],\r\n  initialInvoices: false,\r\n  currentInvoice: {},\r\n  editableInvoice: {},\r\n  isNewInvoice: false,\r\n  enableEditView: false,\r\n};\r\n\r\nexport default function cardReducer(state = initState, { type, ...action }) {\r\n  switch (type) {\r\n    case actions.UPDATE_INVOICE: {\r\n      const currentInvoice = action.invoice\r\n        ? action.invoice\r\n        : state.currentInvoice;\r\n      return {\r\n        ...state,\r\n        invoices: action.invoices,\r\n        currentInvoice: clone(currentInvoice),\r\n        initialInvoices: true,\r\n        isNewInvoice: false,\r\n        enableEditView: false,\r\n      };\r\n    }\r\n    case actions.SELECT_CURRENT_INVOICE: {\r\n      const invoices = state.invoices;\r\n      const index = invoices.map(invoice => invoice.id).indexOf(action.id);\r\n      const isNewInvoice = index === -1;\r\n      const currentInvoice = isNewInvoice\r\n        ? {\r\n            id: action.id,\r\n            number: `#${action.id}`,\r\n            key: action.id,\r\n            ...newInvoice,\r\n          }\r\n        : invoices[index];\r\n      const enableEditView = isNewInvoice;\r\n      return {\r\n        ...state,\r\n        currentInvoice,\r\n        isNewInvoice,\r\n        enableEditView,\r\n        editableInvoice: clone(currentInvoice),\r\n      };\r\n    }\r\n    case actions.TOGGLE_VIEW:\r\n      return {\r\n        ...state,\r\n        enableEditView: action.view,\r\n        editableInvoice: clone(state.currentInvoice),\r\n      };\r\n    case actions.UPDATE_EDIT_INVOICE:\r\n      return {\r\n        ...state,\r\n        editableInvoice: clone(action.invoice),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}