{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"D:\\\\TT18-EC-Team1-FE\\\\isomorphic\\\\shared\\\\isomorphic\\\\containers\\\\BookingSinglePage\\\\EditInvoice.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { EditTable } from \"@iso/components/Invoice/InvoiceTable\";\nimport OrderStatus from \"@iso/components/Invoice/OrderStatus\";\nimport notification from \"@iso/components/Notification\";\nimport Button from \"@iso/components/uielements/button\";\nimport Input, { Textarea } from \"@iso/components/uielements/input\";\nimport DatePicker from \"@iso/components/uielements/datePicker\";\nimport Box from \"@iso/components/utility/box\";\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper\";\nimport InvoicePageWrapper from \"./SingleInvoice.styles\";\nimport { stringToPosetiveInt } from \"@iso/lib/helpers/utility\";\nimport { orderStatusOptions } from \"../Invoice/config\";\nimport invoiceActions from \"@iso/redux/invoice/actions\";\nimport { InformationWrapper } from \"./BookingSinglePage.style\";\nimport InvoiceAddress from \"@iso/components/Invoice/Address\";\nconst {\n  updateInvoice,\n  editInvoice\n} = invoiceActions;\n\nconst updateValues = invoice => {\n  const {\n    invoiceList\n  } = invoice;\n  let subTotal = 0;\n  invoiceList.forEach((item, index) => {\n    const price = item.costs * item.qty;\n    invoice.invoiceList[index].price = price;\n    invoice.invoiceList[index].key = index + 1;\n    subTotal += price;\n  });\n  invoice.subTotal = subTotal;\n  invoice.vatPrice = Math.floor(invoice.vatRate * subTotal * 0.01);\n  invoice.totalCost = invoice.vatPrice + subTotal;\n  return invoice;\n};\n\nconst checkInvoice = invoice => {\n  const emptyKeys = [\"number\", \"billTo\", \"billToAddress\", \"billFrom\", \"billFromAddress\", \"currency\"];\n  const emptyKeysErrors = [\"Invoice Number\", \"Bill To\", \"Bill To Address\", \"Bill From\", \"Bill From Address\", \"Currency\"];\n\n  for (let i = 0; i < emptyKeys.length; i++) {\n    if (!invoice[emptyKeys[i]]) {\n      return `Please fill in ${emptyKeysErrors[i]}`;\n    }\n  }\n\n  for (let i = 0; i < invoice.invoiceList.length; i++) {\n    if (!invoice.invoiceList[i].itemName) {\n      return `Please fill in item name of ${i + 1} item`;\n    }\n\n    if (invoice.invoiceList[i].costs === 0) {\n      return `cost of ${i + 1} item should be positive`;\n    }\n\n    if (invoice.invoiceList[i].qty === 0) {\n      return `quantity of ${i + 1} item should be positive`;\n    }\n  }\n\n  return \"\";\n};\n\nexport default function (props) {\n  const dispatch = useDispatch();\n  const {\n    editableInvoice,\n    isNewInvoice,\n    redirectPath,\n    toggleView\n  } = props;\n\n  const onSave = () => {\n    const error = checkInvoice(editableInvoice);\n\n    if (error) {\n      notification(\"error\", error);\n    } else {\n      const successMessage = isNewInvoice ? \"A new Invoice added\" : \"Invoice Updated\";\n      notification(\"success\", successMessage);\n      dispatch(updateInvoice(editableInvoice));\n    }\n  };\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    const data = { ...editableInvoice,\n      [name]: value\n    };\n    dispatch(editInvoice(data));\n  }\n\n  return /*#__PURE__*/React.createElement(LayoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InvoicePageWrapper, {\n    className: \"editView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, isNewInvoice ? /*#__PURE__*/React.createElement(Link, {\n    to: redirectPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, \"Cancel\"))) : /*#__PURE__*/React.createElement(Button, {\n    onClick: () => toggleView(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: onSave,\n    className: \"saveBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Save\"))), /*#__PURE__*/React.createElement(InformationWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    type: \"inner\",\n    title: `Mã lịch hẹn - ${editableInvoice.number}`,\n    style: {\n      width: \"30%\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"orderStatusSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, \"T\\xECnh tr\\u1EA1ng \\u0111\\u1EB7t h\\u1EB9n:\"), \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"orderStatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(OrderStatus, {\n    value: editableInvoice.orderStatus,\n    name: \"orderStatus\",\n    onChange: handleChange,\n    orderStatusOptions: orderStatusOptions,\n    className: \"RightStatusDropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"orderDateSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, \"Ng\\xE0y \\u0111\\u1EB7t: \")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"orderDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, moment(new Date(editableInvoice.orderDate)).format(\"MMMM Do YYYY\"))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"orderDateSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, \"Ng\\xE0y h\\u1EB9n:\"), \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"orderDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    allowClear: false,\n    value: moment(new Date(editableInvoice.orderDate)),\n    onChange: val => {\n      editableInvoice.orderDate = val.toDate().getTime();\n      dispatch(editInvoice(editableInvoice));\n    },\n    format: \"MMMM Do YYYY\",\n    animateYearScrolling: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(_Card, {\n    type: \"inner\",\n    title: \"Kh\\xE1ch h\\xE0ng\",\n    style: {\n      width: \"30%\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InvoiceAddress, {\n    companyName: editableInvoice.billFrom,\n    companyAddress: editableInvoice.billFromAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(_Card, {\n    type: \"inner\",\n    title: \"Ph\\u1EE5c v\\u1EE5\",\n    style: {\n      width: \"30%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"Title\",\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, \"Chi nh\\xE1nh\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Bill To\",\n    value: editableInvoice.billTo,\n    name: \"billTo\",\n    onChange: handleChange,\n    className: \"BillFormTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"Title\",\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, \"Nh\\xE2n vi\\xEAn ph\\u1EE5c v\\u1EE5\"), /*#__PURE__*/React.createElement(Select, {\n    showSearch: true,\n    style: {\n      width: 200\n    },\n    placeholder: \"Select a person\",\n    optionFilterProp: \"children\",\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onSearch: onSearch,\n    filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"jack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"Jack\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"lucy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, \"Lucy\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"tom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, \"Tom\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BillingInformation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"OrderInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"LeftSideContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, \"Invoice Info\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Number\",\n    name: \"number\",\n    value: editableInvoice.number,\n    onChange: handleChange,\n    className: \"LeftSideContentInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RightSideContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RightSideStatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"RightSideStatusSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, \"Order Status: \"), /*#__PURE__*/React.createElement(OrderStatus, {\n    value: editableInvoice.orderStatus,\n    name: \"orderStatus\",\n    onChange: handleChange,\n    orderStatusOptions: orderStatusOptions,\n    className: \"RightStatusDropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RightSideDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"Order date:\", \" \", /*#__PURE__*/React.createElement(DatePicker, {\n    allowClear: false,\n    value: moment(new Date(editableInvoice.orderDate)),\n    onChange: val => {\n      editableInvoice.orderDate = val.toDate().getTime();\n      dispatch(editInvoice(editableInvoice));\n    },\n    format: \"MMMM Do YYYY\",\n    animateYearScrolling: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BillingInformation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"LeftSideContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Bill From\",\n    value: editableInvoice.billFrom,\n    name: \"billForm\",\n    onChange: handleChange,\n    className: \"BillFormTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    placeholder: \"Bill From Address\",\n    value: editableInvoice.billFromAddress,\n    rows: 5,\n    name: \"billFromAddress\",\n    onChange: handleChange,\n    className: \"BillFormAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RightSideContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Bill To\",\n    value: editableInvoice.billTo,\n    name: \"billTo\",\n    onChange: handleChange,\n    className: \"BillFormTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    placeholder: \"Bill To Address\",\n    value: editableInvoice.billToAddress,\n    rows: 5,\n    name: \"billToAddress\",\n    onChange: handleChange,\n    className: \"BillFormAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InvoiceTable editInvoiceTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EditTable, {\n    editableInvoice: editableInvoice,\n    editInvoice: e => dispatch(editInvoice(e)),\n    updateValues: updateValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InvoiceTableBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      editableInvoice.invoiceList.push({\n        key: editableInvoice.invoiceList.length + 1,\n        itemName: \"\",\n        costs: 0,\n        qty: 0,\n        price: 0\n      });\n      dispatch(editInvoice(editableInvoice));\n    },\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, \"Add Item\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TotalBill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"TotalBillTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 19\n    }\n  }, \"Sub-total : \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 19\n    }\n  }, `${editableInvoice.currency}${editableInvoice.subTotal}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vatRateCalc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vatRateCalcSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 19\n    }\n  }, \" Total Vat : \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vatRateCalcWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: editableInvoice.vatRate,\n    addonAfter: \"%\",\n    onChange: event => {\n      editableInvoice.vatRate = stringToPosetiveInt(event.target.value, editableInvoice.vatRate);\n      dispatch(editInvoice(updateValues(editableInvoice)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }, `${editableInvoice.currency}${editableInvoice.vatPrice}`))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"currencySignWithTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"grandTotalSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 19\n    }\n  }, \"Grand Total \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"currencySignWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: editableInvoice.currency,\n    onChange: handleChange,\n    name: \"currency\",\n    className: \"currencySign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"currencySignSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  }, editableInvoice.totalCost))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ButtonWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/containers/BookingSinglePage/EditInvoice.js"],"names":["React","Link","useDispatch","moment","EditTable","OrderStatus","notification","Button","Input","Textarea","DatePicker","Box","LayoutWrapper","InvoicePageWrapper","stringToPosetiveInt","orderStatusOptions","invoiceActions","InformationWrapper","InvoiceAddress","updateInvoice","editInvoice","updateValues","invoice","invoiceList","subTotal","forEach","item","index","price","costs","qty","key","vatPrice","Math","floor","vatRate","totalCost","checkInvoice","emptyKeys","emptyKeysErrors","i","length","itemName","props","dispatch","editableInvoice","isNewInvoice","redirectPath","toggleView","onSave","error","successMessage","handleChange","event","name","value","target","data","number","width","marginRight","orderStatus","Date","orderDate","format","val","toDate","getTime","billFrom","billFromAddress","marginTop","billTo","onChange","onFocus","onBlur","onSearch","input","option","children","toLowerCase","indexOf","billToAddress","e","push","currency"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { EditTable } from \"@iso/components/Invoice/InvoiceTable\";\r\nimport OrderStatus from \"@iso/components/Invoice/OrderStatus\";\r\nimport notification from \"@iso/components/Notification\";\r\nimport Button from \"@iso/components/uielements/button\";\r\nimport Input, { Textarea } from \"@iso/components/uielements/input\";\r\nimport DatePicker from \"@iso/components/uielements/datePicker\";\r\nimport Box from \"@iso/components/utility/box\";\r\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper\";\r\nimport InvoicePageWrapper from \"./SingleInvoice.styles\";\r\nimport { stringToPosetiveInt } from \"@iso/lib/helpers/utility\";\r\nimport { orderStatusOptions } from \"../Invoice/config\";\r\nimport invoiceActions from \"@iso/redux/invoice/actions\";\r\nimport { Card } from \"antd\";\r\nimport { InformationWrapper } from \"./BookingSinglePage.style\";\r\nimport InvoiceAddress from \"@iso/components/Invoice/Address\";\r\nconst { updateInvoice, editInvoice } = invoiceActions;\r\nconst updateValues = (invoice) => {\r\n  const { invoiceList } = invoice;\r\n  let subTotal = 0;\r\n  invoiceList.forEach((item, index) => {\r\n    const price = item.costs * item.qty;\r\n    invoice.invoiceList[index].price = price;\r\n    invoice.invoiceList[index].key = index + 1;\r\n    subTotal += price;\r\n  });\r\n  invoice.subTotal = subTotal;\r\n  invoice.vatPrice = Math.floor(invoice.vatRate * subTotal * 0.01);\r\n  invoice.totalCost = invoice.vatPrice + subTotal;\r\n  return invoice;\r\n};\r\nconst checkInvoice = (invoice) => {\r\n  const emptyKeys = [\r\n    \"number\",\r\n    \"billTo\",\r\n    \"billToAddress\",\r\n    \"billFrom\",\r\n    \"billFromAddress\",\r\n    \"currency\",\r\n  ];\r\n  const emptyKeysErrors = [\r\n    \"Invoice Number\",\r\n    \"Bill To\",\r\n    \"Bill To Address\",\r\n    \"Bill From\",\r\n    \"Bill From Address\",\r\n    \"Currency\",\r\n  ];\r\n  for (let i = 0; i < emptyKeys.length; i++) {\r\n    if (!invoice[emptyKeys[i]]) {\r\n      return `Please fill in ${emptyKeysErrors[i]}`;\r\n    }\r\n  }\r\n  for (let i = 0; i < invoice.invoiceList.length; i++) {\r\n    if (!invoice.invoiceList[i].itemName) {\r\n      return `Please fill in item name of ${i + 1} item`;\r\n    }\r\n    if (invoice.invoiceList[i].costs === 0) {\r\n      return `cost of ${i + 1} item should be positive`;\r\n    }\r\n    if (invoice.invoiceList[i].qty === 0) {\r\n      return `quantity of ${i + 1} item should be positive`;\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport default function(props) {\r\n  const dispatch = useDispatch();\r\n  const { editableInvoice, isNewInvoice, redirectPath, toggleView } = props;\r\n  const onSave = () => {\r\n    const error = checkInvoice(editableInvoice);\r\n    if (error) {\r\n      notification(\"error\", error);\r\n    } else {\r\n      const successMessage = isNewInvoice\r\n        ? \"A new Invoice added\"\r\n        : \"Invoice Updated\";\r\n      notification(\"success\", successMessage);\r\n      dispatch(updateInvoice(editableInvoice));\r\n    }\r\n  };\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    const data = {\r\n      ...editableInvoice,\r\n      [name]: value,\r\n    };\r\n    dispatch(editInvoice(data));\r\n  }\r\n  return (\r\n    <LayoutWrapper>\r\n      <Box>\r\n        <InvoicePageWrapper className=\"editView\">\r\n          <div className=\"PageHeader\">\r\n            {isNewInvoice ? (\r\n              <Link to={redirectPath}>\r\n                <Button color=\"primary\">\r\n                  <span>Cancel</span>\r\n                </Button>\r\n              </Link>\r\n            ) : (\r\n              <Button onClick={() => toggleView(false)}>\r\n                <span>Cancel</span>\r\n              </Button>\r\n            )}\r\n\r\n            <Button type=\"primary\" onClick={onSave} className=\"saveBtn\">\r\n              <span>Save</span>\r\n            </Button>\r\n          </div>\r\n          <InformationWrapper>\r\n            <Card\r\n              type=\"inner\"\r\n              title={`Mã lịch hẹn - ${editableInvoice.number}`}\r\n              style={{ width: \"30%\", marginRight: \"10px\" }}\r\n            >\r\n              <p>\r\n                <span className=\"orderStatusSpan\">\r\n                  <b>Tình trạng đặt hẹn:</b>{\" \"}\r\n                </span>\r\n                <span className=\"orderStatus\">\r\n                  <OrderStatus\r\n                    value={editableInvoice.orderStatus}\r\n                    name=\"orderStatus\"\r\n                    onChange={handleChange}\r\n                    orderStatusOptions={orderStatusOptions}\r\n                    className=\"RightStatusDropdown\"\r\n                  />\r\n                </span>\r\n              </p>\r\n              <p>\r\n                <span className=\"orderDateSpan\">\r\n                  <b>Ngày đặt: </b>\r\n                </span>\r\n                <span className=\"orderDate\">\r\n                  {moment(new Date(editableInvoice.orderDate)).format(\r\n                    \"MMMM Do YYYY\"\r\n                  )}\r\n                </span>\r\n              </p>\r\n              <p>\r\n                <span className=\"orderDateSpan\">\r\n                  <b>Ngày hẹn:</b>{\" \"}\r\n                </span>\r\n                <span className=\"orderDate\">\r\n                  <DatePicker\r\n                    allowClear={false}\r\n                    value={moment(new Date(editableInvoice.orderDate))}\r\n                    onChange={(val) => {\r\n                      editableInvoice.orderDate = val.toDate().getTime();\r\n                      dispatch(editInvoice(editableInvoice));\r\n                    }}\r\n                    format=\"MMMM Do YYYY\"\r\n                    animateYearScrolling={true}\r\n                  />\r\n                </span>\r\n              </p>\r\n            </Card>\r\n\r\n            <Card\r\n              type=\"inner\"\r\n              title=\"Khách hàng\"\r\n              style={{ width: \"30%\", marginRight: \"10px\" }}\r\n            >\r\n              <InvoiceAddress\r\n                companyName={editableInvoice.billFrom}\r\n                companyAddress={editableInvoice.billFromAddress}\r\n              />\r\n            </Card>\r\n\r\n            <Card type=\"inner\" title=\"Phục vụ\" style={{ width: \"30%\" }}>\r\n              <h3 className=\"Title\" style={{ marginTop: \"10px\" }}>\r\n                Chi nhánh\r\n              </h3>\r\n              <Input\r\n                placeholder=\"Bill To\"\r\n                value={editableInvoice.billTo}\r\n                name=\"billTo\"\r\n                onChange={handleChange}\r\n                className=\"BillFormTitle\"\r\n              />\r\n              <h3 className=\"Title\" style={{ marginTop: \"10px\" }}>\r\n                Nhân viên phục vụ\r\n              </h3>\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select a person\"\r\n                optionFilterProp=\"children\"\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n              >\r\n                <Option value=\"jack\">Jack</Option>\r\n                <Option value=\"lucy\">Lucy</Option>\r\n                <Option value=\"tom\">Tom</Option>\r\n              </Select>\r\n            </Card>\r\n          </InformationWrapper>\r\n          <div className=\"BillingInformation\"></div>\r\n          <div className=\"PageContent\">\r\n            <div className=\"OrderInfo\">\r\n              <div className=\"LeftSideContent\">\r\n                <h3 className=\"Title\">Invoice Info</h3>\r\n                <Input\r\n                  placeholder=\"Number\"\r\n                  name=\"number\"\r\n                  value={editableInvoice.number}\r\n                  onChange={handleChange}\r\n                  className=\"LeftSideContentInput\"\r\n                />\r\n              </div>\r\n              <div className=\"RightSideContent\">\r\n                <div className=\"RightSideStatus\">\r\n                  <span className=\"RightSideStatusSpan\">Order Status: </span>\r\n                  <OrderStatus\r\n                    value={editableInvoice.orderStatus}\r\n                    name=\"orderStatus\"\r\n                    onChange={handleChange}\r\n                    orderStatusOptions={orderStatusOptions}\r\n                    className=\"RightStatusDropdown\"\r\n                  />\r\n                </div>\r\n                <div className=\"RightSideDate\">\r\n                  Order date:{\" \"}\r\n                  <DatePicker\r\n                    allowClear={false}\r\n                    value={moment(new Date(editableInvoice.orderDate))}\r\n                    onChange={(val) => {\r\n                      editableInvoice.orderDate = val.toDate().getTime();\r\n                      dispatch(editInvoice(editableInvoice));\r\n                    }}\r\n                    format=\"MMMM Do YYYY\"\r\n                    animateYearScrolling={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"BillingInformation\">\r\n              <div className=\"LeftSideContent\">\r\n                <Input\r\n                  placeholder=\"Bill From\"\r\n                  value={editableInvoice.billFrom}\r\n                  name=\"billForm\"\r\n                  onChange={handleChange}\r\n                  className=\"BillFormTitle\"\r\n                />\r\n                <Textarea\r\n                  placeholder=\"Bill From Address\"\r\n                  value={editableInvoice.billFromAddress}\r\n                  rows={5}\r\n                  name=\"billFromAddress\"\r\n                  onChange={handleChange}\r\n                  className=\"BillFormAddress\"\r\n                />\r\n              </div>\r\n              <div className=\"RightSideContent\">\r\n                <Input\r\n                  placeholder=\"Bill To\"\r\n                  value={editableInvoice.billTo}\r\n                  name=\"billTo\"\r\n                  onChange={handleChange}\r\n                  className=\"BillFormTitle\"\r\n                />\r\n                <Textarea\r\n                  placeholder=\"Bill To Address\"\r\n                  value={editableInvoice.billToAddress}\r\n                  rows={5}\r\n                  name=\"billToAddress\"\r\n                  onChange={handleChange}\r\n                  className=\"BillFormAddress\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"InvoiceTable editInvoiceTable\">\r\n              <EditTable\r\n                editableInvoice={editableInvoice}\r\n                editInvoice={(e) => dispatch(editInvoice(e))}\r\n                updateValues={updateValues}\r\n              />\r\n              <div className=\"InvoiceTableBtn\">\r\n                <Button\r\n                  onClick={() => {\r\n                    editableInvoice.invoiceList.push({\r\n                      key: editableInvoice.invoiceList.length + 1,\r\n                      itemName: \"\",\r\n                      costs: 0,\r\n                      qty: 0,\r\n                      price: 0,\r\n                    });\r\n                    dispatch(editInvoice(editableInvoice));\r\n                  }}\r\n                  type=\"primary\"\r\n                >\r\n                  Add Item\r\n                </Button>\r\n              </div>\r\n              <div className=\"TotalBill\">\r\n                <p>\r\n                  <span className=\"TotalBillTitle\">Sub-total : </span>\r\n                  <span>{`${editableInvoice.currency}${editableInvoice.subTotal}`}</span>\r\n                </p>\r\n                <div className=\"vatRateCalc\">\r\n                  <span className=\"vatRateCalcSpan\"> Total Vat : </span>\r\n                  <div className=\"vatRateCalcWrap\">\r\n                    <Input\r\n                      value={editableInvoice.vatRate}\r\n                      addonAfter=\"%\"\r\n                      onChange={(event) => {\r\n                        editableInvoice.vatRate = stringToPosetiveInt(\r\n                          event.target.value,\r\n                          editableInvoice.vatRate\r\n                        );\r\n                        dispatch(editInvoice(updateValues(editableInvoice)));\r\n                      }}\r\n                    />\r\n\r\n                    <span>\r\n                      {`${editableInvoice.currency}${editableInvoice.vatPrice}`}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"currencySignWithTotal\">\r\n                  <span className=\"grandTotalSpan\">Grand Total </span>\r\n                  <div className=\"currencySignWrap\">\r\n                    <Input\r\n                      value={editableInvoice.currency}\r\n                      onChange={handleChange}\r\n                      name=\"currency\"\r\n                      className=\"currencySign\"\r\n                    />\r\n                    <span className=\"currencySignSpan\">\r\n                      {editableInvoice.totalCost}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ButtonWrapper\" />\r\n          </div>\r\n        </InvoicePageWrapper>\r\n      </Box>\r\n    </LayoutWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}