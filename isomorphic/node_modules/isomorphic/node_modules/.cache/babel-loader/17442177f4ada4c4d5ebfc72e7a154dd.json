{"ast":null,"code":"var _class, _temp;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _require = require('preact'),\n    h = _require.h;\n\nvar SearchInput = require('./InputView');\n\nvar Browser = require('../Browser');\n\nvar LoaderView = require('../Loader');\n\nvar generateFileID = require('@uppy/utils/lib/generateFileID');\n\nvar getFileType = require('@uppy/utils/lib/getFileType');\n\nvar isPreviewSupported = require('@uppy/utils/lib/isPreviewSupported');\n\nvar Header = require('./Header');\n\nvar SharedHandler = require('../SharedHandler');\n\nvar CloseWrapper = require('../CloseWrapper');\n/**\n * Class to easily generate generic views for Provider plugins\n */\n\n\nmodule.exports = (_temp = _class = /*#__PURE__*/function () {\n  /**\n   * @param {object} plugin instance of the plugin\n   * @param {object} opts\n   */\n  function ProviderView(plugin, opts) {\n    this.plugin = plugin;\n    this.provider = opts.provider;\n    this._sharedHandler = new SharedHandler(plugin); // set default options\n\n    var defaultOptions = {\n      viewType: 'grid',\n      showTitles: false,\n      showFilter: false,\n      showBreadcrumbs: false\n    }; // merge default options with the ones set by user\n\n    this.opts = _extends({}, defaultOptions, opts); // Logic\n\n    this.search = this.search.bind(this);\n    this.triggerSearchInput = this.triggerSearchInput.bind(this);\n    this.addFile = this.addFile.bind(this);\n    this.preFirstRender = this.preFirstRender.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.donePicking = this.donePicking.bind(this);\n    this.cancelPicking = this.cancelPicking.bind(this);\n    this.clearSelection = this.clearSelection.bind(this); // Visual\n\n    this.render = this.render.bind(this);\n    this.clearSelection(); // Set default state for the plugin\n\n    this.plugin.setPluginState({\n      isInputMode: true,\n      files: [],\n      folders: [],\n      directories: [],\n      filterInput: '',\n      isSearchVisible: false\n    });\n  }\n\n  var _proto = ProviderView.prototype;\n\n  _proto.tearDown = function tearDown() {// Nothing.\n  };\n\n  _proto._updateFilesAndInputMode = function _updateFilesAndInputMode(res, files) {\n    this.nextPageQuery = res.nextPageQuery;\n    this._searchTerm = res.searchedFor;\n    res.items.forEach(function (item) {\n      files.push(item);\n    });\n    this.plugin.setPluginState({\n      isInputMode: false,\n      files: files\n    });\n  }\n  /**\n   * Called only the first time the provider view is rendered.\n   * Kind of like an init function.\n   */\n  ;\n\n  _proto.preFirstRender = function preFirstRender() {\n    this.plugin.setPluginState({\n      didFirstRender: true\n    });\n    this.plugin.onFirstRender();\n  };\n\n  _proto.search = function search(query) {\n    var _this = this;\n\n    if (query && query === this._searchTerm) {\n      // no need to search again as this is the same as the previous search\n      this.plugin.setPluginState({\n        isInputMode: false\n      });\n      return;\n    }\n\n    return this._sharedHandler.loaderWrapper(this.provider.search(query), function (res) {\n      _this._updateFilesAndInputMode(res, []);\n    }, this.handleError);\n  };\n\n  _proto.triggerSearchInput = function triggerSearchInput() {\n    this.plugin.setPluginState({\n      isInputMode: true\n    });\n  } // @todo this function should really be a function of the plugin and not the view.\n  // maybe we should consider creating a base ProviderPlugin class that has this method\n  ;\n\n  _proto.addFile = function addFile(file) {\n    var tagFile = {\n      id: this.providerFileToId(file),\n      source: this.plugin.id,\n      data: file,\n      name: file.name || file.id,\n      type: file.mimeType,\n      isRemote: true,\n      body: {\n        fileId: file.id\n      },\n      remote: {\n        companionUrl: this.plugin.opts.companionUrl,\n        url: \"\" + this.provider.fileUrl(file.requestPath),\n        body: {\n          fileId: file.id\n        },\n        providerOptions: _extends({}, this.provider.opts, {\n          provider: null\n        })\n      }\n    };\n    var fileType = getFileType(tagFile); // TODO Should we just always use the thumbnail URL if it exists?\n\n    if (fileType && isPreviewSupported(fileType)) {\n      tagFile.preview = file.thumbnail;\n    }\n\n    this.plugin.uppy.log('Adding remote file');\n\n    try {\n      this.plugin.uppy.addFile(tagFile);\n    } catch (err) {\n      if (!err.isRestriction) {\n        this.plugin.uppy.log(err);\n      }\n    }\n  };\n\n  _proto.providerFileToId = function providerFileToId(file) {\n    return generateFileID({\n      data: file,\n      name: file.name || file.id,\n      type: file.mimeType\n    });\n  };\n\n  _proto.handleError = function handleError(error) {\n    var uppy = this.plugin.uppy;\n    uppy.log(error.toString());\n    var message = uppy.i18n('companionError');\n    uppy.info({\n      message: message,\n      details: error.toString()\n    }, 'error', 5000);\n  };\n\n  _proto.handleScroll = function handleScroll(e) {\n    var _this2 = this;\n\n    var scrollPos = e.target.scrollHeight - (e.target.scrollTop + e.target.offsetHeight);\n    var query = this.nextPageQuery || null;\n\n    if (scrollPos < 50 && query && !this._isHandlingScroll) {\n      this.provider.search(this._searchTerm, query).then(function (res) {\n        var _this2$plugin$getPlug = _this2.plugin.getPluginState(),\n            files = _this2$plugin$getPlug.files;\n\n        _this2._updateFilesAndInputMode(res, files);\n      }).catch(this.handleError).then(function () {\n        _this2._isHandlingScroll = false;\n      }); // always called\n\n      this._isHandlingScroll = true;\n    }\n  };\n\n  _proto.donePicking = function donePicking() {\n    var _this3 = this;\n\n    var _this$plugin$getPlugi = this.plugin.getPluginState(),\n        currentSelection = _this$plugin$getPlugi.currentSelection;\n\n    var promises = currentSelection.map(function (file) {\n      return _this3.addFile(file);\n    });\n\n    this._sharedHandler.loaderWrapper(Promise.all(promises), function () {\n      _this3.clearSelection();\n    }, function () {});\n  };\n\n  _proto.cancelPicking = function cancelPicking() {\n    this.clearSelection();\n    var dashboard = this.plugin.uppy.getPlugin('Dashboard');\n    if (dashboard) dashboard.hideAllPanels();\n  };\n\n  _proto.clearSelection = function clearSelection() {\n    this.plugin.setPluginState({\n      currentSelection: []\n    });\n  };\n\n  _proto.render = function render(state, viewOptions) {\n    if (viewOptions === void 0) {\n      viewOptions = {};\n    }\n\n    var _this$plugin$getPlugi2 = this.plugin.getPluginState(),\n        didFirstRender = _this$plugin$getPlugi2.didFirstRender,\n        isInputMode = _this$plugin$getPlugi2.isInputMode;\n\n    if (!didFirstRender) {\n      this.preFirstRender();\n    } // reload pluginState for \"loading\" attribute because it might\n    // have changed above.\n\n\n    if (this.plugin.getPluginState().loading) {\n      return h(CloseWrapper, {\n        onUnmount: this.clearSelection\n      }, h(LoaderView, {\n        i18n: this.plugin.uppy.i18n\n      }));\n    }\n\n    if (isInputMode) {\n      return h(CloseWrapper, {\n        onUnmount: this.clearSelection\n      }, h(SearchInput, {\n        search: this.search,\n        i18n: this.plugin.uppy.i18n\n      }));\n    }\n\n    var targetViewOptions = _extends({}, this.opts, viewOptions);\n\n    var browserProps = _extends({}, this.plugin.getPluginState(), {\n      isChecked: this._sharedHandler.isChecked,\n      toggleCheckbox: this._sharedHandler.toggleCheckbox,\n      handleScroll: this.handleScroll,\n      done: this.donePicking,\n      cancel: this.cancelPicking,\n      headerComponent: Header({\n        triggerSearchInput: this.triggerSearchInput,\n        i18n: this.plugin.uppy.i18n\n      }),\n      title: this.plugin.title,\n      viewType: targetViewOptions.viewType,\n      showTitles: targetViewOptions.showTitles,\n      showFilter: targetViewOptions.showFilter,\n      showBreadcrumbs: targetViewOptions.showBreadcrumbs,\n      pluginIcon: this.plugin.icon,\n      i18n: this.plugin.uppy.i18n,\n      uppyFiles: this.plugin.uppy.getFiles(),\n      validateRestrictions: this.plugin.uppy.validateRestrictions\n    });\n\n    return h(CloseWrapper, {\n      onUnmount: this.clearSelection\n    }, h(Browser, browserProps));\n  };\n\n  return ProviderView;\n}(), _class.VERSION = \"1.12.2\", _temp);","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/node_modules/@uppy/provider-views/lib/SearchProviderView/SearchProviderView.js"],"names":["_class","_temp","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_require","require","h","SearchInput","Browser","LoaderView","generateFileID","getFileType","isPreviewSupported","Header","SharedHandler","CloseWrapper","module","exports","ProviderView","plugin","opts","provider","_sharedHandler","defaultOptions","viewType","showTitles","showFilter","showBreadcrumbs","search","bind","triggerSearchInput","addFile","preFirstRender","handleError","handleScroll","donePicking","cancelPicking","clearSelection","render","setPluginState","isInputMode","files","folders","directories","filterInput","isSearchVisible","_proto","tearDown","_updateFilesAndInputMode","res","nextPageQuery","_searchTerm","searchedFor","items","forEach","item","push","didFirstRender","onFirstRender","query","_this","loaderWrapper","file","tagFile","id","providerFileToId","data","name","type","mimeType","isRemote","body","fileId","remote","companionUrl","url","fileUrl","requestPath","providerOptions","fileType","preview","thumbnail","uppy","log","err","isRestriction","error","toString","message","i18n","info","details","e","_this2","scrollPos","scrollHeight","scrollTop","offsetHeight","_isHandlingScroll","then","_this2$plugin$getPlug","getPluginState","catch","_this3","_this$plugin$getPlugi","currentSelection","promises","map","Promise","all","dashboard","getPlugin","hideAllPanels","state","viewOptions","_this$plugin$getPlugi2","loading","onUnmount","targetViewOptions","browserProps","isChecked","toggleCheckbox","done","cancel","headerComponent","title","pluginIcon","icon","uppyFiles","getFiles","validateRestrictions","VERSION"],"mappings":"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","sourcesContent":["var _class, _temp;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar _require = require('preact'),\n    h = _require.h;\n\nvar SearchInput = require('./InputView');\n\nvar Browser = require('../Browser');\n\nvar LoaderView = require('../Loader');\n\nvar generateFileID = require('@uppy/utils/lib/generateFileID');\n\nvar getFileType = require('@uppy/utils/lib/getFileType');\n\nvar isPreviewSupported = require('@uppy/utils/lib/isPreviewSupported');\n\nvar Header = require('./Header');\n\nvar SharedHandler = require('../SharedHandler');\n\nvar CloseWrapper = require('../CloseWrapper');\n/**\n * Class to easily generate generic views for Provider plugins\n */\n\n\nmodule.exports = (_temp = _class = /*#__PURE__*/function () {\n  /**\n   * @param {object} plugin instance of the plugin\n   * @param {object} opts\n   */\n  function ProviderView(plugin, opts) {\n    this.plugin = plugin;\n    this.provider = opts.provider;\n    this._sharedHandler = new SharedHandler(plugin); // set default options\n\n    var defaultOptions = {\n      viewType: 'grid',\n      showTitles: false,\n      showFilter: false,\n      showBreadcrumbs: false\n    }; // merge default options with the ones set by user\n\n    this.opts = _extends({}, defaultOptions, opts); // Logic\n\n    this.search = this.search.bind(this);\n    this.triggerSearchInput = this.triggerSearchInput.bind(this);\n    this.addFile = this.addFile.bind(this);\n    this.preFirstRender = this.preFirstRender.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.donePicking = this.donePicking.bind(this);\n    this.cancelPicking = this.cancelPicking.bind(this);\n    this.clearSelection = this.clearSelection.bind(this); // Visual\n\n    this.render = this.render.bind(this);\n    this.clearSelection(); // Set default state for the plugin\n\n    this.plugin.setPluginState({\n      isInputMode: true,\n      files: [],\n      folders: [],\n      directories: [],\n      filterInput: '',\n      isSearchVisible: false\n    });\n  }\n\n  var _proto = ProviderView.prototype;\n\n  _proto.tearDown = function tearDown() {// Nothing.\n  };\n\n  _proto._updateFilesAndInputMode = function _updateFilesAndInputMode(res, files) {\n    this.nextPageQuery = res.nextPageQuery;\n    this._searchTerm = res.searchedFor;\n    res.items.forEach(function (item) {\n      files.push(item);\n    });\n    this.plugin.setPluginState({\n      isInputMode: false,\n      files: files\n    });\n  }\n  /**\n   * Called only the first time the provider view is rendered.\n   * Kind of like an init function.\n   */\n  ;\n\n  _proto.preFirstRender = function preFirstRender() {\n    this.plugin.setPluginState({\n      didFirstRender: true\n    });\n    this.plugin.onFirstRender();\n  };\n\n  _proto.search = function search(query) {\n    var _this = this;\n\n    if (query && query === this._searchTerm) {\n      // no need to search again as this is the same as the previous search\n      this.plugin.setPluginState({\n        isInputMode: false\n      });\n      return;\n    }\n\n    return this._sharedHandler.loaderWrapper(this.provider.search(query), function (res) {\n      _this._updateFilesAndInputMode(res, []);\n    }, this.handleError);\n  };\n\n  _proto.triggerSearchInput = function triggerSearchInput() {\n    this.plugin.setPluginState({\n      isInputMode: true\n    });\n  } // @todo this function should really be a function of the plugin and not the view.\n  // maybe we should consider creating a base ProviderPlugin class that has this method\n  ;\n\n  _proto.addFile = function addFile(file) {\n    var tagFile = {\n      id: this.providerFileToId(file),\n      source: this.plugin.id,\n      data: file,\n      name: file.name || file.id,\n      type: file.mimeType,\n      isRemote: true,\n      body: {\n        fileId: file.id\n      },\n      remote: {\n        companionUrl: this.plugin.opts.companionUrl,\n        url: \"\" + this.provider.fileUrl(file.requestPath),\n        body: {\n          fileId: file.id\n        },\n        providerOptions: _extends({}, this.provider.opts, {\n          provider: null\n        })\n      }\n    };\n    var fileType = getFileType(tagFile); // TODO Should we just always use the thumbnail URL if it exists?\n\n    if (fileType && isPreviewSupported(fileType)) {\n      tagFile.preview = file.thumbnail;\n    }\n\n    this.plugin.uppy.log('Adding remote file');\n\n    try {\n      this.plugin.uppy.addFile(tagFile);\n    } catch (err) {\n      if (!err.isRestriction) {\n        this.plugin.uppy.log(err);\n      }\n    }\n  };\n\n  _proto.providerFileToId = function providerFileToId(file) {\n    return generateFileID({\n      data: file,\n      name: file.name || file.id,\n      type: file.mimeType\n    });\n  };\n\n  _proto.handleError = function handleError(error) {\n    var uppy = this.plugin.uppy;\n    uppy.log(error.toString());\n    var message = uppy.i18n('companionError');\n    uppy.info({\n      message: message,\n      details: error.toString()\n    }, 'error', 5000);\n  };\n\n  _proto.handleScroll = function handleScroll(e) {\n    var _this2 = this;\n\n    var scrollPos = e.target.scrollHeight - (e.target.scrollTop + e.target.offsetHeight);\n    var query = this.nextPageQuery || null;\n\n    if (scrollPos < 50 && query && !this._isHandlingScroll) {\n      this.provider.search(this._searchTerm, query).then(function (res) {\n        var _this2$plugin$getPlug = _this2.plugin.getPluginState(),\n            files = _this2$plugin$getPlug.files;\n\n        _this2._updateFilesAndInputMode(res, files);\n      }).catch(this.handleError).then(function () {\n        _this2._isHandlingScroll = false;\n      }); // always called\n\n      this._isHandlingScroll = true;\n    }\n  };\n\n  _proto.donePicking = function donePicking() {\n    var _this3 = this;\n\n    var _this$plugin$getPlugi = this.plugin.getPluginState(),\n        currentSelection = _this$plugin$getPlugi.currentSelection;\n\n    var promises = currentSelection.map(function (file) {\n      return _this3.addFile(file);\n    });\n\n    this._sharedHandler.loaderWrapper(Promise.all(promises), function () {\n      _this3.clearSelection();\n    }, function () {});\n  };\n\n  _proto.cancelPicking = function cancelPicking() {\n    this.clearSelection();\n    var dashboard = this.plugin.uppy.getPlugin('Dashboard');\n    if (dashboard) dashboard.hideAllPanels();\n  };\n\n  _proto.clearSelection = function clearSelection() {\n    this.plugin.setPluginState({\n      currentSelection: []\n    });\n  };\n\n  _proto.render = function render(state, viewOptions) {\n    if (viewOptions === void 0) {\n      viewOptions = {};\n    }\n\n    var _this$plugin$getPlugi2 = this.plugin.getPluginState(),\n        didFirstRender = _this$plugin$getPlugi2.didFirstRender,\n        isInputMode = _this$plugin$getPlugi2.isInputMode;\n\n    if (!didFirstRender) {\n      this.preFirstRender();\n    } // reload pluginState for \"loading\" attribute because it might\n    // have changed above.\n\n\n    if (this.plugin.getPluginState().loading) {\n      return h(CloseWrapper, {\n        onUnmount: this.clearSelection\n      }, h(LoaderView, {\n        i18n: this.plugin.uppy.i18n\n      }));\n    }\n\n    if (isInputMode) {\n      return h(CloseWrapper, {\n        onUnmount: this.clearSelection\n      }, h(SearchInput, {\n        search: this.search,\n        i18n: this.plugin.uppy.i18n\n      }));\n    }\n\n    var targetViewOptions = _extends({}, this.opts, viewOptions);\n\n    var browserProps = _extends({}, this.plugin.getPluginState(), {\n      isChecked: this._sharedHandler.isChecked,\n      toggleCheckbox: this._sharedHandler.toggleCheckbox,\n      handleScroll: this.handleScroll,\n      done: this.donePicking,\n      cancel: this.cancelPicking,\n      headerComponent: Header({\n        triggerSearchInput: this.triggerSearchInput,\n        i18n: this.plugin.uppy.i18n\n      }),\n      title: this.plugin.title,\n      viewType: targetViewOptions.viewType,\n      showTitles: targetViewOptions.showTitles,\n      showFilter: targetViewOptions.showFilter,\n      showBreadcrumbs: targetViewOptions.showBreadcrumbs,\n      pluginIcon: this.plugin.icon,\n      i18n: this.plugin.uppy.i18n,\n      uppyFiles: this.plugin.uppy.getFiles(),\n      validateRestrictions: this.plugin.uppy.validateRestrictions\n    });\n\n    return h(CloseWrapper, {\n      onUnmount: this.clearSelection\n    }, h(Browser, browserProps));\n  };\n\n  return ProviderView;\n}(), _class.VERSION = \"1.12.2\", _temp);"]},"metadata":{},"sourceType":"script"}