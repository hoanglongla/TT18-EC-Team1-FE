{"ast":null,"code":"import scrumBoardActions from './actions';\nconst initialState = {\n  boards: {},\n  columns: {},\n  tasks: {},\n  searchText: '',\n  labels: {}\n};\nexport default function scrumBoardReducer(state = initialState, action) {\n  switch (action.type) {\n    case scrumBoardActions.SET_BOARDS_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    case scrumBoardActions.SET_CURRENT_BOARD_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    case scrumBoardActions.CREATE_OR_UPDATE_TASK:\n      return { ...state,\n        tasks: action.payload.tasks,\n        columns: action.payload.columns\n      };\n\n    case scrumBoardActions.EDIT_TASK:\n      return { ...state,\n        tasks: { ...state.tasks,\n          [action.payload.id]: { ...action.payload,\n            editing: true\n          }\n        }\n      };\n\n    case scrumBoardActions.CANCEL_EDIT_TASK:\n      return { ...state,\n        tasks: { ...state.tasks,\n          [action.payload.id]: { ...action.payload,\n            editing: false\n          }\n        }\n      };\n\n    case scrumBoardActions.DELETE_TASK:\n      return { ...state,\n        tasks: action.payload.tasks,\n        columns: action.payload.columns\n      };\n\n    case scrumBoardActions.SET_SEARCH_TEXT:\n      return { ...state,\n        searchText: action.payload\n      };\n\n    case scrumBoardActions.SET_MOVED_TASK:\n      return { ...state,\n        columns: action.payload.columns,\n        tasks: action.payload.tasks\n      };\n\n    case scrumBoardActions.RESET_TASK:\n      {\n        return { ...state,\n          task: initialState.task\n        };\n      }\n    /// COLUMNS\n\n    case scrumBoardActions.CREATE_OR_UPDATE_COLUMN:\n      return { ...state,\n        columns: action.payload.columns,\n        boards: action.payload.boards\n      };\n\n    case scrumBoardActions.EDIT_COLUMN:\n      return { ...state,\n        columns: { ...state.columns,\n          [action.payload.id]: { ...action.payload,\n            editing: true\n          }\n        }\n      };\n\n    case scrumBoardActions.CANCEL_EDIT_COLUMN:\n      return { ...state,\n        columns: { ...state.columns,\n          [action.payload.id]: { ...action.payload,\n            editing: false\n          }\n        }\n      };\n\n    case scrumBoardActions.DELETE_COLUMN:\n      return { ...state,\n        columns: action.payload.columns,\n        boards: action.payload.boards\n      };\n\n    case scrumBoardActions.SET_MOVED_COLUMN:\n      return { ...state,\n        boards: action.payload\n      };\n\n    case scrumBoardActions.CREATE_OR_UPDATE_BOARD:\n      return { ...state,\n        boards: action.payload\n      };\n\n    case scrumBoardActions.EDIT_BOARD:\n      return { ...state,\n        boards: { ...state.boards,\n          [action.payload.id]: { ...action.payload,\n            editing: true\n          }\n        }\n      };\n\n    case scrumBoardActions.DELETE_BOARD:\n      return { ...state,\n        boards: action.payload\n      };\n\n    case scrumBoardActions.CREATE_OR_UPDATE_LABEL:\n      return { ...state,\n        labels: { ...state.labels,\n          [action.payload.id]: action.payload\n        }\n      };\n\n    case scrumBoardActions.EDIT_LABEL:\n      return { ...state,\n        labels: { ...state.labels,\n          [action.payload.id]: { ...action.payload,\n            editing: true\n          }\n        }\n      };\n\n    case scrumBoardActions.DELETE_LABEL:\n      const LABELS = { ...state.labels\n      };\n      delete LABELS[action.payload];\n      return { ...state,\n        labels: LABELS\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/shared/isomorphic/redux/scrumBoard/reducer.js"],"names":["scrumBoardActions","initialState","boards","columns","tasks","searchText","labels","scrumBoardReducer","state","action","type","SET_BOARDS_DATA","payload","SET_CURRENT_BOARD_DATA","CREATE_OR_UPDATE_TASK","EDIT_TASK","id","editing","CANCEL_EDIT_TASK","DELETE_TASK","SET_SEARCH_TEXT","SET_MOVED_TASK","RESET_TASK","task","CREATE_OR_UPDATE_COLUMN","EDIT_COLUMN","CANCEL_EDIT_COLUMN","DELETE_COLUMN","SET_MOVED_COLUMN","CREATE_OR_UPDATE_BOARD","EDIT_BOARD","DELETE_BOARD","CREATE_OR_UPDATE_LABEL","EDIT_LABEL","DELETE_LABEL","LABELS"],"mappings":"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","sourcesContent":["import scrumBoardActions from './actions';\r\n\r\nconst initialState = {\r\n  boards: {},\r\n  columns: {},\r\n  tasks: {},\r\n  searchText: '',\r\n  labels: {},\r\n};\r\nexport default function scrumBoardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case scrumBoardActions.SET_BOARDS_DATA:\r\n      return { ...state, ...action.payload };\r\n\r\n    case scrumBoardActions.SET_CURRENT_BOARD_DATA:\r\n      return { ...state, ...action.payload };\r\n\r\n    case scrumBoardActions.CREATE_OR_UPDATE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload.tasks,\r\n        columns: action.payload.columns,\r\n      };\r\n\r\n    case scrumBoardActions.EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: {\r\n          ...state.tasks,\r\n          [action.payload.id]: {\r\n            ...action.payload,\r\n            editing: true,\r\n          },\r\n        },\r\n      };\r\n\r\n    case scrumBoardActions.CANCEL_EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: {\r\n          ...state.tasks,\r\n          [action.payload.id]: {\r\n            ...action.payload,\r\n            editing: false,\r\n          },\r\n        },\r\n      };\r\n\r\n    case scrumBoardActions.DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload.tasks,\r\n        columns: action.payload.columns,\r\n      };\r\n\r\n    case scrumBoardActions.SET_SEARCH_TEXT:\r\n      return {\r\n        ...state,\r\n        searchText: action.payload,\r\n      };\r\n\r\n    case scrumBoardActions.SET_MOVED_TASK:\r\n      return {\r\n        ...state,\r\n        columns: action.payload.columns,\r\n        tasks: action.payload.tasks,\r\n      };\r\n\r\n    case scrumBoardActions.RESET_TASK: {\r\n      return {\r\n        ...state,\r\n        task: initialState.task,\r\n      };\r\n    }\r\n\r\n    /// COLUMNS\r\n    case scrumBoardActions.CREATE_OR_UPDATE_COLUMN:\r\n      return {\r\n        ...state,\r\n        columns: action.payload.columns,\r\n        boards: action.payload.boards,\r\n      };\r\n    case scrumBoardActions.EDIT_COLUMN:\r\n      return {\r\n        ...state,\r\n        columns: {\r\n          ...state.columns,\r\n          [action.payload.id]: {\r\n            ...action.payload,\r\n            editing: true,\r\n          },\r\n        },\r\n      };\r\n\r\n    case scrumBoardActions.CANCEL_EDIT_COLUMN:\r\n      return {\r\n        ...state,\r\n        columns: {\r\n          ...state.columns,\r\n          [action.payload.id]: {\r\n            ...action.payload,\r\n            editing: false,\r\n          },\r\n        },\r\n      };\r\n    case scrumBoardActions.DELETE_COLUMN:\r\n      return {\r\n        ...state,\r\n        columns: action.payload.columns,\r\n        boards: action.payload.boards,\r\n      };\r\n\r\n    case scrumBoardActions.SET_MOVED_COLUMN:\r\n      return {\r\n        ...state,\r\n        boards: action.payload,\r\n      };\r\n\r\n    case scrumBoardActions.CREATE_OR_UPDATE_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: action.payload,\r\n      };\r\n    case scrumBoardActions.EDIT_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: {\r\n          ...state.boards,\r\n          [action.payload.id]: {\r\n            ...action.payload,\r\n            editing: true,\r\n          },\r\n        },\r\n      };\r\n    case scrumBoardActions.DELETE_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: action.payload,\r\n      };\r\n\r\n    case scrumBoardActions.CREATE_OR_UPDATE_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: {\r\n          ...state.labels,\r\n          [action.payload.id]: action.payload,\r\n        },\r\n      };\r\n    case scrumBoardActions.EDIT_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: {\r\n          ...state.labels,\r\n          [action.payload.id]: {\r\n            ...action.payload,\r\n            editing: true,\r\n          },\r\n        },\r\n      };\r\n    case scrumBoardActions.DELETE_LABEL:\r\n      const LABELS = {\r\n        ...state.labels,\r\n      };\r\n      delete LABELS[action.payload];\r\n      return {\r\n        ...state,\r\n        labels: LABELS,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}