{"ast":null,"code":"import { isServer } from '@iso/lib/helpers/isServer';\nconst productDatas = [];\n\nfunction getInitData() {\n  let productQuantity = [];\n  const products = {};\n\n  if (!isServer) {\n    const cartProductQuantity = localStorage.getItem('cartProductQuantity');\n    let cartProducts = localStorage.getItem('cartProducts');\n\n    if (cartProducts && cartProductQuantity) {\n      cartProducts = JSON.parse(cartProducts);\n      JSON.parse(cartProductQuantity).forEach(product => {\n        const objectID = product.objectID;\n\n        if (!isNaN(product.quantity)) {\n          productQuantity.push({\n            objectID,\n            quantity: parseInt(product.quantity, 10)\n          });\n          products[objectID] = { ...cartProducts[objectID],\n            price: parseFloat(cartProducts[objectID].price, 10)\n          };\n        }\n      });\n    } else {\n      productDatas.forEach(product => {\n        productQuantity.push({\n          objectID: product.objectID,\n          quantity: 1\n        });\n        products[product.objectID] = product;\n      });\n    }\n  }\n\n  return {\n    productQuantity,\n    products\n  };\n}\n\nexport default getInitData();","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/redux/ecommerce/config.js"],"names":["isServer","productDatas","getInitData","productQuantity","products","cartProductQuantity","localStorage","getItem","cartProducts","JSON","parse","forEach","product","objectID","isNaN","quantity","push","parseInt","price","parseFloat"],"mappings":"AAAA,SAASA,QAAT,QAAyB,2BAAzB;AAEA,MAAMC,YAAY,GAAG,EAArB;;AACA,SAASC,WAAT,GAAuB;AACrB,MAAIC,eAAe,GAAG,EAAtB;AACA,QAAMC,QAAQ,GAAG,EAAjB;;AACA,MAAI,CAACJ,QAAL,EAAe;AACb,UAAMK,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAA5B;AACA,QAAIC,YAAY,GAAGF,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAnB;;AACA,QAAIC,YAAY,IAAIH,mBAApB,EAAyC;AACvCG,MAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWF,YAAX,CAAf;AACAC,MAAAA,IAAI,CAACC,KAAL,CAAWL,mBAAX,EAAgCM,OAAhC,CAAwCC,OAAO,IAAI;AACjD,cAAMC,QAAQ,GAAGD,OAAO,CAACC,QAAzB;;AACA,YAAI,CAACC,KAAK,CAACF,OAAO,CAACG,QAAT,CAAV,EAA8B;AAC5BZ,UAAAA,eAAe,CAACa,IAAhB,CAAqB;AACnBH,YAAAA,QADmB;AAEnBE,YAAAA,QAAQ,EAAEE,QAAQ,CAACL,OAAO,CAACG,QAAT,EAAmB,EAAnB;AAFC,WAArB;AAIAX,UAAAA,QAAQ,CAACS,QAAD,CAAR,GAAqB,EACnB,GAAGL,YAAY,CAACK,QAAD,CADI;AAEnBK,YAAAA,KAAK,EAAEC,UAAU,CAACX,YAAY,CAACK,QAAD,CAAZ,CAAuBK,KAAxB,EAA+B,EAA/B;AAFE,WAArB;AAID;AACF,OAZD;AAaD,KAfD,MAeO;AACLjB,MAAAA,YAAY,CAACU,OAAb,CAAqBC,OAAO,IAAI;AAC9BT,QAAAA,eAAe,CAACa,IAAhB,CAAqB;AACnBH,UAAAA,QAAQ,EAAED,OAAO,CAACC,QADC;AAEnBE,UAAAA,QAAQ,EAAE;AAFS,SAArB;AAIAX,QAAAA,QAAQ,CAACQ,OAAO,CAACC,QAAT,CAAR,GAA6BD,OAA7B;AACD,OAND;AAOD;AACF;;AACD,SAAO;AAAET,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAAP;AACD;;AAED,eAAeF,WAAW,EAA1B","sourcesContent":["import { isServer } from '@iso/lib/helpers/isServer';\r\n\r\nconst productDatas = [];\r\nfunction getInitData() {\r\n  let productQuantity = [];\r\n  const products = {};\r\n  if (!isServer) {\r\n    const cartProductQuantity = localStorage.getItem('cartProductQuantity');\r\n    let cartProducts = localStorage.getItem('cartProducts');\r\n    if (cartProducts && cartProductQuantity) {\r\n      cartProducts = JSON.parse(cartProducts);\r\n      JSON.parse(cartProductQuantity).forEach(product => {\r\n        const objectID = product.objectID;\r\n        if (!isNaN(product.quantity)) {\r\n          productQuantity.push({\r\n            objectID,\r\n            quantity: parseInt(product.quantity, 10),\r\n          });\r\n          products[objectID] = {\r\n            ...cartProducts[objectID],\r\n            price: parseFloat(cartProducts[objectID].price, 10),\r\n          };\r\n        }\r\n      });\r\n    } else {\r\n      productDatas.forEach(product => {\r\n        productQuantity.push({\r\n          objectID: product.objectID,\r\n          quantity: 1,\r\n        });\r\n        products[product.objectID] = product;\r\n      });\r\n    }\r\n  }\r\n  return { productQuantity, products };\r\n}\r\n\r\nexport default getInitData();\r\n"]},"metadata":{},"sourceType":"module"}