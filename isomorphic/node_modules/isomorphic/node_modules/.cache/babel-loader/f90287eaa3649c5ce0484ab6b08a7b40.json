{"ast":null,"code":"import actions from './actions';\nconst initState = {\n  users: null,\n  chatRooms: [],\n  messages: [],\n  selectedChatRoom: null,\n  openCompose: false,\n  viewProfile: false,\n  composedId: null,\n  loading: true,\n  error: false,\n  mobileActiveList: true,\n  mobileActiveProfile: false,\n  restoringData: false,\n  addNewUsersProp: {\n    modalActive: false\n  }\n};\n\nconst sortTimeStamp = (optionA, optionB) => optionA.messageTime - optionB.messageTime;\n\nconst sortChatRooms = (optionA, optionB) => optionB.lastMessageTime - optionA.lastMessageTime;\n\nexport default function reducer(state = initState, action) {\n  switch (action.type) {\n    case actions.CHAT_INIT_SAGA:\n      {\n        return { ...state,\n          userId: action.userId,\n          user: action.user,\n          users: action.users,\n          chatRooms: action.chatRooms,\n          messages: action.messages,\n          selectedChatRoom: action.chatRooms[0],\n          loading: false\n        };\n      }\n\n    case actions.CHAT_UPDATE_CHATROOM:\n      {\n        const {\n          chatRoom,\n          messages,\n          selected\n        } = action;\n        return { ...state,\n          chatRooms: state.chatRooms.map(chatroom => chatroom.id === chatRoom.id ? { ...chatroom,\n            lastMessage: chatRoom.lastMessage,\n            lastMessageTime: chatRoom.lastMessageTime\n          } : chatroom).sort(sortChatRooms),\n          composedId: null,\n          openCompose: false,\n          selectedChatRoom: selected ? chatRoom : state.selectedChatRoom,\n          viewProfile: selected ? false : state.viewProfile,\n          messages: messages ? messages.sort(sortTimeStamp) : state.messages\n        };\n      }\n\n    case actions.CHAT_TOGGLE_COMPOSE:\n      return { ...state,\n        openCompose: !state.openCompose,\n        viewProfile: false\n      };\n\n    case actions.CHAT_SET_TOGGLE_COMPOSED_ID:\n      return { ...state,\n        composedId: action.id\n      };\n\n    case actions.CHAT_SET_TOGGLE_VIEW_PROFILE:\n      return { ...state,\n        viewProfile: action.viewProfile\n      };\n\n    case actions.TOGGLE_MOBILE_LIST:\n      return { ...state,\n        mobileActiveList: action.mobileActiveList\n      };\n\n    case actions.TOGGLE_MOBILE_PROFILE:\n      return { ...state,\n        mobileActiveProfile: action.mobileActiveProfile\n      };\n\n    case actions.RESTORE_DEMO_DATA:\n      return { ...state,\n        restoringData: true\n      };\n\n    case actions.RESTORE_DEMO_DATA_DONE:\n      return { ...state,\n        restoringData: false\n      };\n\n    case actions.UPDATE_NEW_USER_PROPS:\n      return { ...state,\n        addNewUsersProp: action.addNewUsersProp\n      };\n\n    case actions.NEW_MESSAGE_SUCCESFULL:\n      return { ...state,\n        openCompose: false,\n        composedId: null\n      };\n\n    case actions.ADD_NEW_USER_SAGA:\n      return { ...state,\n        addNewUsersProp: {\n          modalActive: false\n        },\n        users: [action.user, ...state.users],\n        chatRooms: [action.chatRoom, ...state.chatRooms]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/TT18-EC-Team1-FE/isomorphic/shared/isomorphic/redux/chat/reducers.js"],"names":["actions","initState","users","chatRooms","messages","selectedChatRoom","openCompose","viewProfile","composedId","loading","error","mobileActiveList","mobileActiveProfile","restoringData","addNewUsersProp","modalActive","sortTimeStamp","optionA","optionB","messageTime","sortChatRooms","lastMessageTime","reducer","state","action","type","CHAT_INIT_SAGA","userId","user","CHAT_UPDATE_CHATROOM","chatRoom","selected","map","chatroom","id","lastMessage","sort","CHAT_TOGGLE_COMPOSE","CHAT_SET_TOGGLE_COMPOSED_ID","CHAT_SET_TOGGLE_VIEW_PROFILE","TOGGLE_MOBILE_LIST","TOGGLE_MOBILE_PROFILE","RESTORE_DEMO_DATA","RESTORE_DEMO_DATA_DONE","UPDATE_NEW_USER_PROPS","NEW_MESSAGE_SUCCESFULL","ADD_NEW_USER_SAGA"],"mappings":"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","sourcesContent":["import actions from './actions';\r\n\r\nconst initState = {\r\n  users: null,\r\n  chatRooms: [],\r\n  messages: [],\r\n  selectedChatRoom: null,\r\n  openCompose: false,\r\n  viewProfile: false,\r\n  composedId: null,\r\n  loading: true,\r\n  error: false,\r\n  mobileActiveList: true,\r\n  mobileActiveProfile: false,\r\n  restoringData: false,\r\n  addNewUsersProp: {\r\n    modalActive: false,\r\n  },\r\n};\r\nconst sortTimeStamp = (optionA, optionB) =>\r\n  optionA.messageTime - optionB.messageTime;\r\nconst sortChatRooms = (optionA, optionB) =>\r\n  optionB.lastMessageTime - optionA.lastMessageTime;\r\nexport default function reducer(state = initState, action) {\r\n  switch (action.type) {\r\n    case actions.CHAT_INIT_SAGA: {\r\n      return {\r\n        ...state,\r\n        userId: action.userId,\r\n        user: action.user,\r\n        users: action.users,\r\n        chatRooms: action.chatRooms,\r\n        messages: action.messages,\r\n        selectedChatRoom: action.chatRooms[0],\r\n        loading: false,\r\n      };\r\n    }\r\n    case actions.CHAT_UPDATE_CHATROOM: {\r\n      const { chatRoom, messages, selected } = action;\r\n      return {\r\n        ...state,\r\n        chatRooms: state.chatRooms\r\n          .map(chatroom =>\r\n            chatroom.id === chatRoom.id\r\n              ? {\r\n                  ...chatroom,\r\n                  lastMessage: chatRoom.lastMessage,\r\n                  lastMessageTime: chatRoom.lastMessageTime,\r\n                }\r\n              : chatroom\r\n          )\r\n          .sort(sortChatRooms),\r\n        composedId: null,\r\n        openCompose: false,\r\n        selectedChatRoom: selected ? chatRoom : state.selectedChatRoom,\r\n        viewProfile: selected ? false : state.viewProfile,\r\n        messages: messages ? messages.sort(sortTimeStamp) : state.messages,\r\n      };\r\n    }\r\n    case actions.CHAT_TOGGLE_COMPOSE:\r\n      return {\r\n        ...state,\r\n        openCompose: !state.openCompose,\r\n        viewProfile: false,\r\n      };\r\n    case actions.CHAT_SET_TOGGLE_COMPOSED_ID:\r\n      return {\r\n        ...state,\r\n        composedId: action.id,\r\n      };\r\n    case actions.CHAT_SET_TOGGLE_VIEW_PROFILE:\r\n      return {\r\n        ...state,\r\n        viewProfile: action.viewProfile,\r\n      };\r\n    case actions.TOGGLE_MOBILE_LIST:\r\n      return {\r\n        ...state,\r\n        mobileActiveList: action.mobileActiveList,\r\n      };\r\n    case actions.TOGGLE_MOBILE_PROFILE:\r\n      return {\r\n        ...state,\r\n        mobileActiveProfile: action.mobileActiveProfile,\r\n      };\r\n    case actions.RESTORE_DEMO_DATA:\r\n      return {\r\n        ...state,\r\n        restoringData: true,\r\n      };\r\n    case actions.RESTORE_DEMO_DATA_DONE:\r\n      return {\r\n        ...state,\r\n        restoringData: false,\r\n      };\r\n    case actions.UPDATE_NEW_USER_PROPS:\r\n      return {\r\n        ...state,\r\n        addNewUsersProp: action.addNewUsersProp,\r\n      };\r\n    case actions.NEW_MESSAGE_SUCCESFULL:\r\n      return {\r\n        ...state,\r\n        openCompose: false,\r\n        composedId: null,\r\n      };\r\n    case actions.ADD_NEW_USER_SAGA:\r\n      return {\r\n        ...state,\r\n        addNewUsersProp: { modalActive: false },\r\n        users: [action.user, ...state.users],\r\n        chatRooms: [action.chatRoom, ...state.chatRooms],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}