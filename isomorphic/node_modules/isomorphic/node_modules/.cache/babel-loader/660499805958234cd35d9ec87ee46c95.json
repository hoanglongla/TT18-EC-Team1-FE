{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getId = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createConnector = require('../core/createConnector');\n\nvar _createConnector2 = _interopRequireDefault(_createConnector);\n\nvar _algoliasearchHelper = require('algoliasearch-helper');\n\nvar _indexUtils = require('../core/indexUtils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar getId = exports.getId = function getId(props) {\n  return props.attributes[0];\n};\n\nvar namespace = 'hierarchicalMenu';\n\nfunction getCurrentRefinement(props, searchState, context) {\n  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, namespace + '.' + getId(props), null, function (currentRefinement) {\n    if (currentRefinement === '') {\n      return null;\n    }\n\n    return currentRefinement;\n  });\n}\n\nfunction getValue(path, props, searchState, context) {\n  var id = props.id,\n      attributes = props.attributes,\n      separator = props.separator,\n      rootPath = props.rootPath,\n      showParentLevel = props.showParentLevel;\n  var currentRefinement = getCurrentRefinement(props, searchState, context);\n  var nextRefinement = void 0;\n\n  if (currentRefinement === null) {\n    nextRefinement = path;\n  } else {\n    var tmpSearchParameters = new _algoliasearchHelper.SearchParameters({\n      hierarchicalFacets: [{\n        name: id,\n        attributes: attributes,\n        separator: separator,\n        rootPath: rootPath,\n        showParentLevel: showParentLevel\n      }]\n    });\n    nextRefinement = tmpSearchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement).toggleHierarchicalFacetRefinement(id, path).getHierarchicalRefinement(id)[0];\n  }\n\n  return nextRefinement;\n}\n\nfunction transformValue(value, props, searchState, context) {\n  return value.map(function (v) {\n    return {\n      label: v.name,\n      value: getValue(v.path, props, searchState, context),\n      count: v.count,\n      isRefined: v.isRefined,\n      items: v.data && transformValue(v.data, props, searchState, context)\n    };\n  });\n}\n\nvar truncate = function truncate() {\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return items.slice(0, limit).map(function () {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Array.isArray(item.items) ? _extends({}, item, {\n      items: truncate(item.items, limit)\n    }) : item;\n  });\n};\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId(props);\n\n  var nextValue = _defineProperty({}, id, nextRefinement || '');\n\n  var resetPage = true;\n  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return (0, _indexUtils.cleanUpValue)(searchState, context, namespace + '.' + getId(props));\n}\n\nvar sortBy = ['name:asc'];\n/**\n * connectHierarchicalMenu connector provides the logic to build a widget that will\n * give the user the ability to explore a tree-like structure.\n * This is commonly used for multi-level categorization of products on e-commerce\n * websites. From a UX point of view, we suggest not displaying more than two levels deep.\n * @name connectHierarchicalMenu\n * @requirements To use this widget, your attributes must be formatted in a specific way.\n * If you want for example to have a hiearchical menu of categories, objects in your index\n * should be formatted this way:\n *\n * ```json\n * {\n *   \"categories.lvl0\": \"products\",\n *   \"categories.lvl1\": \"products > fruits\",\n *   \"categories.lvl2\": \"products > fruits > citrus\"\n * }\n * ```\n *\n * It's also possible to provide more than one path for each level:\n *\n * ```json\n * {\n *   \"categories.lvl0\": [\"products\", \"goods\"],\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\n * }\n * ```\n *\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n *\n * @kind connector\n * @propType {string} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.\n * @propType {string} [defaultRefinement] - the item value selected by default\n * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limitMin and limitMax.\n * @propType {number} [limitMin=10] -  The maximum number of items displayed.\n * @propType {number} [limitMax=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.\n * @propType {string} [separator='>'] -  Specifies the level separator used in the data.\n * @propType {string[]} [rootPath=null] - The already selected and hidden path.\n * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @providedPropType {function} refine - a function to toggle a refinement\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {string} currentRefinement - the refinement currently applied\n * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the HierarchicalMenu can display. items has the same shape as parent items.\n */\n\nexports.default = (0, _createConnector2.default)({\n  displayName: 'AlgoliaHierarchicalMenu',\n  propTypes: {\n    attributes: function attributes(props, propName, componentName) {\n      var isNotString = function isNotString(val) {\n        return typeof val !== 'string';\n      };\n\n      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {\n        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Expected an Array of Strings');\n      }\n\n      return undefined;\n    },\n    separator: _propTypes2.default.string,\n    rootPath: _propTypes2.default.string,\n    showParentLevel: _propTypes2.default.bool,\n    defaultRefinement: _propTypes2.default.string,\n    showMore: _propTypes2.default.bool,\n    limitMin: _propTypes2.default.number,\n    limitMax: _propTypes2.default.number,\n    transformItems: _propTypes2.default.func\n  },\n  defaultProps: {\n    showMore: false,\n    limitMin: 10,\n    limitMax: 20,\n    separator: ' > ',\n    rootPath: null,\n    showParentLevel: true\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var showMore = props.showMore,\n        limitMin = props.limitMin,\n        limitMax = props.limitMax;\n    var id = getId(props);\n    var results = (0, _indexUtils.getResults)(searchResults, this.context);\n    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));\n\n    if (!isFacetPresent) {\n      return {\n        items: [],\n        currentRefinement: getCurrentRefinement(props, searchState, this.context),\n        canRefine: false\n      };\n    }\n\n    var limit = showMore ? limitMax : limitMin;\n    var value = results.getFacetValues(id, {\n      sortBy: sortBy\n    });\n    var items = value.data ? transformValue(value.data, props, searchState, this.context) : [];\n    var transformedItems = props.transformItems ? props.transformItems(items) : items;\n    return {\n      items: truncate(transformedItems, limit),\n      currentRefinement: getCurrentRefinement(props, searchState, this.context),\n      canRefine: items.length > 0\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, this.context);\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, this.context);\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    var attributes = props.attributes,\n        separator = props.separator,\n        rootPath = props.rootPath,\n        showParentLevel = props.showParentLevel,\n        showMore = props.showMore,\n        limitMin = props.limitMin,\n        limitMax = props.limitMax;\n    var id = getId(props);\n    var limit = showMore ? limitMax : limitMin;\n    searchParameters = searchParameters.addHierarchicalFacet({\n      name: id,\n      attributes: attributes,\n      separator: separator,\n      rootPath: rootPath,\n      showParentLevel: showParentLevel\n    }).setQueryParameters({\n      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, limit)\n    });\n    var currentRefinement = getCurrentRefinement(props, searchState, this.context);\n\n    if (currentRefinement !== null) {\n      searchParameters = searchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement);\n    }\n\n    return searchParameters;\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var _this = this;\n\n    var rootAttribute = props.attributes[0];\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, this.context);\n    return {\n      id: id,\n      index: (0, _indexUtils.getIndex)(this.context),\n      items: !currentRefinement ? [] : [{\n        label: rootAttribute + ': ' + currentRefinement,\n        attributeName: rootAttribute,\n        value: function value(nextState) {\n          return _refine(props, nextState, '', _this.context);\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/react-instantsearch/src/connectors/connectHierarchicalMenu.js"],"names":["Object","defineProperty","exports","value","getId","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_propTypes","require","_propTypes2","_interopRequireDefault","_createConnector","_createConnector2","_algoliasearchHelper","_indexUtils","obj","__esModule","default","_defineProperty","enumerable","configurable","writable","props","attributes","namespace","getCurrentRefinement","searchState","context","getCurrentRefinementValue","currentRefinement","getValue","path","id","separator","rootPath","showParentLevel","nextRefinement","tmpSearchParameters","SearchParameters","hierarchicalFacets","name","toggleHierarchicalFacetRefinement","getHierarchicalRefinement","transformValue","map","v","label","count","isRefined","items","data","truncate","limit","slice","item","Array","isArray","_refine","nextValue","resetPage","refineValue","_cleanUp","cleanUpValue","sortBy","displayName","propTypes","propName","componentName","isNotString","val","some","Error","string","bool","defaultRefinement","showMore","limitMin","number","limitMax","transformItems","func","defaultProps","getProvidedProps","searchResults","results","getResults","isFacetPresent","Boolean","getFacetByName","canRefine","getFacetValues","transformedItems","refine","cleanUp","getSearchParameters","searchParameters","addHierarchicalFacet","setQueryParameters","maxValuesPerFacet","Math","max","getMetadata","_this","rootAttribute","index","getIndex","attributeName","nextState"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getId = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createConnector = require('../core/createConnector');\n\nvar _createConnector2 = _interopRequireDefault(_createConnector);\n\nvar _algoliasearchHelper = require('algoliasearch-helper');\n\nvar _indexUtils = require('../core/indexUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar getId = exports.getId = function getId(props) {\n  return props.attributes[0];\n};\n\nvar namespace = 'hierarchicalMenu';\n\nfunction getCurrentRefinement(props, searchState, context) {\n  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, namespace + '.' + getId(props), null, function (currentRefinement) {\n    if (currentRefinement === '') {\n      return null;\n    }\n    return currentRefinement;\n  });\n}\n\nfunction getValue(path, props, searchState, context) {\n  var id = props.id,\n      attributes = props.attributes,\n      separator = props.separator,\n      rootPath = props.rootPath,\n      showParentLevel = props.showParentLevel;\n\n\n  var currentRefinement = getCurrentRefinement(props, searchState, context);\n  var nextRefinement = void 0;\n\n  if (currentRefinement === null) {\n    nextRefinement = path;\n  } else {\n    var tmpSearchParameters = new _algoliasearchHelper.SearchParameters({\n      hierarchicalFacets: [{\n        name: id,\n        attributes: attributes,\n        separator: separator,\n        rootPath: rootPath,\n        showParentLevel: showParentLevel\n      }]\n    });\n\n    nextRefinement = tmpSearchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement).toggleHierarchicalFacetRefinement(id, path).getHierarchicalRefinement(id)[0];\n  }\n\n  return nextRefinement;\n}\n\nfunction transformValue(value, props, searchState, context) {\n  return value.map(function (v) {\n    return {\n      label: v.name,\n      value: getValue(v.path, props, searchState, context),\n      count: v.count,\n      isRefined: v.isRefined,\n      items: v.data && transformValue(v.data, props, searchState, context)\n    };\n  });\n}\n\nvar truncate = function truncate() {\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return items.slice(0, limit).map(function () {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Array.isArray(item.items) ? _extends({}, item, {\n      items: truncate(item.items, limit)\n    }) : item;\n  });\n};\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId(props);\n  var nextValue = _defineProperty({}, id, nextRefinement || '');\n  var resetPage = true;\n  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return (0, _indexUtils.cleanUpValue)(searchState, context, namespace + '.' + getId(props));\n}\n\nvar sortBy = ['name:asc'];\n\n/**\n * connectHierarchicalMenu connector provides the logic to build a widget that will\n * give the user the ability to explore a tree-like structure.\n * This is commonly used for multi-level categorization of products on e-commerce\n * websites. From a UX point of view, we suggest not displaying more than two levels deep.\n * @name connectHierarchicalMenu\n * @requirements To use this widget, your attributes must be formatted in a specific way.\n * If you want for example to have a hiearchical menu of categories, objects in your index\n * should be formatted this way:\n *\n * ```json\n * {\n *   \"categories.lvl0\": \"products\",\n *   \"categories.lvl1\": \"products > fruits\",\n *   \"categories.lvl2\": \"products > fruits > citrus\"\n * }\n * ```\n *\n * It's also possible to provide more than one path for each level:\n *\n * ```json\n * {\n *   \"categories.lvl0\": [\"products\", \"goods\"],\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\n * }\n * ```\n *\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n *\n * @kind connector\n * @propType {string} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.\n * @propType {string} [defaultRefinement] - the item value selected by default\n * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limitMin and limitMax.\n * @propType {number} [limitMin=10] -  The maximum number of items displayed.\n * @propType {number} [limitMax=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.\n * @propType {string} [separator='>'] -  Specifies the level separator used in the data.\n * @propType {string[]} [rootPath=null] - The already selected and hidden path.\n * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @providedPropType {function} refine - a function to toggle a refinement\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {string} currentRefinement - the refinement currently applied\n * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the HierarchicalMenu can display. items has the same shape as parent items.\n */\nexports.default = (0, _createConnector2.default)({\n  displayName: 'AlgoliaHierarchicalMenu',\n\n  propTypes: {\n    attributes: function attributes(props, propName, componentName) {\n      var isNotString = function isNotString(val) {\n        return typeof val !== 'string';\n      };\n      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {\n        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Expected an Array of Strings');\n      }\n      return undefined;\n    },\n    separator: _propTypes2.default.string,\n    rootPath: _propTypes2.default.string,\n    showParentLevel: _propTypes2.default.bool,\n    defaultRefinement: _propTypes2.default.string,\n    showMore: _propTypes2.default.bool,\n    limitMin: _propTypes2.default.number,\n    limitMax: _propTypes2.default.number,\n    transformItems: _propTypes2.default.func\n  },\n\n  defaultProps: {\n    showMore: false,\n    limitMin: 10,\n    limitMax: 20,\n    separator: ' > ',\n    rootPath: null,\n    showParentLevel: true\n  },\n\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var showMore = props.showMore,\n        limitMin = props.limitMin,\n        limitMax = props.limitMax;\n\n    var id = getId(props);\n\n    var results = (0, _indexUtils.getResults)(searchResults, this.context);\n    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));\n\n    if (!isFacetPresent) {\n      return {\n        items: [],\n        currentRefinement: getCurrentRefinement(props, searchState, this.context),\n        canRefine: false\n      };\n    }\n    var limit = showMore ? limitMax : limitMin;\n    var value = results.getFacetValues(id, { sortBy: sortBy });\n    var items = value.data ? transformValue(value.data, props, searchState, this.context) : [];\n    var transformedItems = props.transformItems ? props.transformItems(items) : items;\n    return {\n      items: truncate(transformedItems, limit),\n      currentRefinement: getCurrentRefinement(props, searchState, this.context),\n      canRefine: items.length > 0\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, this.context);\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, this.context);\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    var attributes = props.attributes,\n        separator = props.separator,\n        rootPath = props.rootPath,\n        showParentLevel = props.showParentLevel,\n        showMore = props.showMore,\n        limitMin = props.limitMin,\n        limitMax = props.limitMax;\n\n\n    var id = getId(props);\n    var limit = showMore ? limitMax : limitMin;\n\n    searchParameters = searchParameters.addHierarchicalFacet({\n      name: id,\n      attributes: attributes,\n      separator: separator,\n      rootPath: rootPath,\n      showParentLevel: showParentLevel\n    }).setQueryParameters({\n      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, limit)\n    });\n\n    var currentRefinement = getCurrentRefinement(props, searchState, this.context);\n    if (currentRefinement !== null) {\n      searchParameters = searchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement);\n    }\n\n    return searchParameters;\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var _this = this;\n\n    var rootAttribute = props.attributes[0];\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, this.context);\n\n    return {\n      id: id,\n      index: (0, _indexUtils.getIndex)(this.context),\n      items: !currentRefinement ? [] : [{\n        label: rootAttribute + ': ' + currentRefinement,\n        attributeName: rootAttribute,\n        value: function value(nextState) {\n          return _refine(props, nextState, '', _this.context);\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});"]},"metadata":{},"sourceType":"script"}