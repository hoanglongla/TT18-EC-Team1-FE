{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar getFileNameAndExtension = require('./getFileNameAndExtension');\n\nmodule.exports = function remoteFileObjToLocal(file) {\n  return _extends({}, file, {\n    type: file.mimeType,\n    extension: file.name ? getFileNameAndExtension(file.name).extension : null\n  });\n};","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/@uppy/utils/lib/remoteFileObjToLocal.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","getFileNameAndExtension","require","module","exports","remoteFileObjToLocal","file","type","mimeType","extension","name"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,IAAIQ,uBAAuB,GAAGC,OAAO,CAAC,2BAAD,CAArC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACnD,SAAOlB,QAAQ,CAAC,EAAD,EAAKkB,IAAL,EAAW;AACxBC,IAAAA,IAAI,EAAED,IAAI,CAACE,QADa;AAExBC,IAAAA,SAAS,EAAEH,IAAI,CAACI,IAAL,GAAYT,uBAAuB,CAACK,IAAI,CAACI,IAAN,CAAvB,CAAmCD,SAA/C,GAA2D;AAF9C,GAAX,CAAf;AAID,CALD","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar getFileNameAndExtension = require('./getFileNameAndExtension');\n\nmodule.exports = function remoteFileObjToLocal(file) {\n  return _extends({}, file, {\n    type: file.mimeType,\n    extension: file.name ? getFileNameAndExtension(file.name).extension : null\n  });\n};"]},"metadata":{},"sourceType":"script"}