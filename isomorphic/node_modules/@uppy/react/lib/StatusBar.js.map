{"version":3,"sources":["StatusBar.js"],"names":["React","require","PropTypes","StatusBarPlugin","uppyPropType","uppy","h","createElement","StatusBar","componentDidMount","installPlugin","componentDidUpdate","prevProps","props","uninstallPlugin","componentWillUnmount","options","id","target","container","use","plugin","getPlugin","removePlugin","render","ref","Component","propTypes","hideAfterFinish","bool","showProgressDetails","defaultProps","module","exports"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAzB;;AACA,IAAME,eAAe,GAAGF,OAAO,CAAC,kBAAD,CAA/B;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,aAAD,CAAP,CAAuBI,IAA5C;;AAEA,IAAMC,CAAC,GAAGN,KAAK,CAACO,aAAhB;AAEA;AACA;AACA;AACA;;IAEMC,S;;;;;;;;;SACJC,iB,GAAA,6BAAqB;AACnB,SAAKC,aAAL;AACD,G;;SAEDC,kB,GAAA,4BAAoBC,SAApB,EAA+B;AAC7B,QAAIA,SAAS,CAACP,IAAV,KAAmB,KAAKQ,KAAL,CAAWR,IAAlC,EAAwC;AACtC,WAAKS,eAAL,CAAqBF,SAArB;AACA,WAAKF,aAAL;AACD;AACF,G;;SAEDK,oB,GAAA,gCAAwB;AACtB,SAAKD,eAAL;AACD,G;;SAEDJ,a,GAAA,yBAAiB;AACf,QAAML,IAAI,GAAG,KAAKQ,KAAL,CAAWR,IAAxB;;AACA,QAAMW,OAAO;AACXC,MAAAA,EAAE,EAAE;AADO,OAER,KAAKJ,KAFG;AAGXK,MAAAA,MAAM,EAAE,KAAKC;AAHF,MAAb;;AAKA,WAAOH,OAAO,CAACX,IAAf;AAEAA,IAAAA,IAAI,CAACe,GAAL,CAASjB,eAAT,EAA0Ba,OAA1B;AAEA,SAAKK,MAAL,GAAchB,IAAI,CAACiB,SAAL,CAAeN,OAAO,CAACC,EAAvB,CAAd;AACD,G;;SAEDH,e,GAAA,yBAAiBD,KAAjB,EAAqC;AAAA,QAApBA,KAAoB;AAApBA,MAAAA,KAAoB,GAAZ,KAAKA,KAAO;AAAA;;AACnC,QAAMR,IAAI,GAAGQ,KAAK,CAACR,IAAnB;AAEAA,IAAAA,IAAI,CAACkB,YAAL,CAAkB,KAAKF,MAAvB;AACD,G;;SAEDG,M,GAAA,kBAAU;AAAA;;AACR,WAAOlB,CAAC,CAAC,KAAD,EAAQ;AACdmB,MAAAA,GAAG,EAAE,aAACN,SAAD,EAAe;AAClB,QAAA,KAAI,CAACA,SAAL,GAAiBA,SAAjB;AACD;AAHa,KAAR,CAAR;AAKD,G;;;EA1CqBnB,KAAK,CAAC0B,S;;AA6C9BlB,SAAS,CAACmB,SAAV,GAAsB;AACpBtB,EAAAA,IAAI,EAAED,YADc;AAEpBwB,EAAAA,eAAe,EAAE1B,SAAS,CAAC2B,IAFP;AAGpBC,EAAAA,mBAAmB,EAAE5B,SAAS,CAAC2B;AAHX,CAAtB;AAKArB,SAAS,CAACuB,YAAV,GAAyB,EAAzB;AAGAC,MAAM,CAACC,OAAP,GAAiBzB,SAAjB","sourcesContent":["const React = require('react')\nconst PropTypes = require('prop-types')\nconst StatusBarPlugin = require('@uppy/status-bar')\nconst uppyPropType = require('./propTypes').uppy\n\nconst h = React.createElement\n\n/**\n * React component that renders a status bar containing upload progress and speed,\n * processing progress and pause/resume/cancel controls.\n */\n\nclass StatusBar extends React.Component {\n  componentDidMount () {\n    this.installPlugin()\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps)\n      this.installPlugin()\n    }\n  }\n\n  componentWillUnmount () {\n    this.uninstallPlugin()\n  }\n\n  installPlugin () {\n    const uppy = this.props.uppy\n    const options = {\n      id: 'react:StatusBar',\n      ...this.props,\n      target: this.container,\n    }\n    delete options.uppy\n\n    uppy.use(StatusBarPlugin, options)\n\n    this.plugin = uppy.getPlugin(options.id)\n  }\n\n  uninstallPlugin (props = this.props) {\n    const uppy = props.uppy\n\n    uppy.removePlugin(this.plugin)\n  }\n\n  render () {\n    return h('div', {\n      ref: (container) => {\n        this.container = container\n      },\n    })\n  }\n}\n\nStatusBar.propTypes = {\n  uppy: uppyPropType,\n  hideAfterFinish: PropTypes.bool,\n  showProgressDetails: PropTypes.bool,\n}\nStatusBar.defaultProps = {\n}\n\nmodule.exports = StatusBar\n"]}